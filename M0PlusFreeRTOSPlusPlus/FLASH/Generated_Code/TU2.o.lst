   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TU2.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss._ZL33DeviceDataPrv__DEFAULT_RTOS_ALLOC,"aw",%nobits
  18              		.align	2
  21              	_ZL33DeviceDataPrv__DEFAULT_RTOS_ALLOC:
  22 0000 00000000 		.space	8
  22      00000000 
  23              		.section	.text.TU2_Init,"ax",%progbits
  24              		.align	2
  25              		.global	TU2_Init
  26              		.code	16
  27              		.thumb_func
  29              	TU2_Init:
  30              	.LFB0:
  31              		.file 1 "../Generated_Code/TU2.c"
   1:../Generated_Code/TU2.c **** /* ###################################################################
   2:../Generated_Code/TU2.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/TU2.c **** **     Filename    : TU2.c
   4:../Generated_Code/TU2.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/TU2.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/TU2.c **** **     Component   : TimerUnit_LDD
   7:../Generated_Code/TU2.c **** **     Version     : Component 01.158, Driver 01.11, CPU db: 3.00.000
   8:../Generated_Code/TU2.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/TU2.c **** **     Date/Time   : 2014-04-05, 15:28, # CodeGen: 4
  10:../Generated_Code/TU2.c **** **     Abstract    :
  11:../Generated_Code/TU2.c **** **          This TimerUnit component provides a low level API for unified hardware access across
  12:../Generated_Code/TU2.c **** **          various timer devices using the Prescaler-Counter-Compare-Capture timer structure.
  13:../Generated_Code/TU2.c **** **     Settings    :
  14:../Generated_Code/TU2.c **** **          Component name                                 : TU2
  15:../Generated_Code/TU2.c **** **          Module name                                    : TPM2
  16:../Generated_Code/TU2.c **** **          Counter                                        : TPM2_CNT
  17:../Generated_Code/TU2.c **** **          Counter direction                              : Up
  18:../Generated_Code/TU2.c **** **          Counter width                                  : 16 bits
  19:../Generated_Code/TU2.c **** **          Value type                                     : uint16_t
  20:../Generated_Code/TU2.c **** **          Input clock source                             : Internal
  21:../Generated_Code/TU2.c **** **            Counter frequency                            : 6 MHz
  22:../Generated_Code/TU2.c **** **          Counter restart                                : On-match
  23:../Generated_Code/TU2.c **** **            Period device                                : TPM2_MOD
  24:../Generated_Code/TU2.c **** **            Period                                       : 6.25 ms
  25:../Generated_Code/TU2.c **** **            Interrupt                                    : Disabled
  26:../Generated_Code/TU2.c **** **          Channel list                                   : 2
  27:../Generated_Code/TU2.c **** **            Channel 0                                    : 
  28:../Generated_Code/TU2.c **** **              Mode                                       : Compare
  29:../Generated_Code/TU2.c **** **                Compare                                  : TPM2_C0V
  30:../Generated_Code/TU2.c **** **                Offset                                   : 0 ms
  31:../Generated_Code/TU2.c **** **                Output on compare                        : Set
  32:../Generated_Code/TU2.c **** **                  Output on overrun                      : Clear
  33:../Generated_Code/TU2.c **** **                  Initial state                          : Low
  34:../Generated_Code/TU2.c **** **                  Output pin                             : TSI0_CH11/PTB18/TPM2_CH0
  35:../Generated_Code/TU2.c **** **                  Output pin signal                      : 
  36:../Generated_Code/TU2.c **** **                Interrupt                                : Disabled
  37:../Generated_Code/TU2.c **** **            Channel 1                                    : 
  38:../Generated_Code/TU2.c **** **              Mode                                       : Compare
  39:../Generated_Code/TU2.c **** **                Compare                                  : TPM2_C1V
  40:../Generated_Code/TU2.c **** **                Offset                                   : 0 ms
  41:../Generated_Code/TU2.c **** **                Output on compare                        : Set
  42:../Generated_Code/TU2.c **** **                  Output on overrun                      : Clear
  43:../Generated_Code/TU2.c **** **                  Initial state                          : Low
  44:../Generated_Code/TU2.c **** **                  Output pin                             : TSI0_CH12/PTB19/TPM2_CH1
  45:../Generated_Code/TU2.c **** **                  Output pin signal                      : 
  46:../Generated_Code/TU2.c **** **                Interrupt                                : Disabled
  47:../Generated_Code/TU2.c **** **          Initialization                                 : 
  48:../Generated_Code/TU2.c **** **            Enabled in init. code                        : yes
  49:../Generated_Code/TU2.c **** **            Auto initialization                          : no
  50:../Generated_Code/TU2.c **** **            Event mask                                   : 
  51:../Generated_Code/TU2.c **** **              OnCounterRestart                           : Disabled
  52:../Generated_Code/TU2.c **** **              OnChannel0                                 : Disabled
  53:../Generated_Code/TU2.c **** **              OnChannel1                                 : Disabled
  54:../Generated_Code/TU2.c **** **              OnChannel2                                 : Disabled
  55:../Generated_Code/TU2.c **** **              OnChannel3                                 : Disabled
  56:../Generated_Code/TU2.c **** **              OnChannel4                                 : Disabled
  57:../Generated_Code/TU2.c **** **              OnChannel5                                 : Disabled
  58:../Generated_Code/TU2.c **** **              OnChannel6                                 : Disabled
  59:../Generated_Code/TU2.c **** **              OnChannel7                                 : Disabled
  60:../Generated_Code/TU2.c **** **          CPU clock/configuration selection              : 
  61:../Generated_Code/TU2.c **** **            Clock configuration 0                        : This component enabled
  62:../Generated_Code/TU2.c **** **            Clock configuration 1                        : This component disabled
  63:../Generated_Code/TU2.c **** **            Clock configuration 2                        : This component disabled
  64:../Generated_Code/TU2.c **** **            Clock configuration 3                        : This component disabled
  65:../Generated_Code/TU2.c **** **            Clock configuration 4                        : This component disabled
  66:../Generated_Code/TU2.c **** **            Clock configuration 5                        : This component disabled
  67:../Generated_Code/TU2.c **** **            Clock configuration 6                        : This component disabled
  68:../Generated_Code/TU2.c **** **            Clock configuration 7                        : This component disabled
  69:../Generated_Code/TU2.c **** **     Contents    :
  70:../Generated_Code/TU2.c **** **         Init               - LDD_TDeviceData* TU2_Init(LDD_TUserData *UserDataPtr);
  71:../Generated_Code/TU2.c **** **         GetPeriodTicks     - LDD_TError TU2_GetPeriodTicks(LDD_TDeviceData *DeviceDataPtr, TU2_T
  72:../Generated_Code/TU2.c **** **         GetCounterValue    - TU2_TValueType TU2_GetCounterValue(LDD_TDeviceData *DeviceDataPtr);
  73:../Generated_Code/TU2.c **** **         SetOffsetTicks     - LDD_TError TU2_SetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8
  74:../Generated_Code/TU2.c **** **         GetOffsetTicks     - LDD_TError TU2_GetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8
  75:../Generated_Code/TU2.c **** **         SelectOutputAction - LDD_TError TU2_SelectOutputAction(LDD_TDeviceData *DeviceDataPtr, u
  76:../Generated_Code/TU2.c **** **
  77:../Generated_Code/TU2.c **** **     Copyright : 1997 - 2013 Freescale Semiconductor, Inc. All Rights Reserved.
  78:../Generated_Code/TU2.c **** **     SOURCE DISTRIBUTION PERMISSIBLE as directed in End User License Agreement.
  79:../Generated_Code/TU2.c **** **     
  80:../Generated_Code/TU2.c **** **     http      : www.freescale.com
  81:../Generated_Code/TU2.c **** **     mail      : support@freescale.com
  82:../Generated_Code/TU2.c **** ** ###################################################################*/
  83:../Generated_Code/TU2.c **** /*!
  84:../Generated_Code/TU2.c **** ** @file TU2.c
  85:../Generated_Code/TU2.c **** ** @version 01.11
  86:../Generated_Code/TU2.c **** ** @brief
  87:../Generated_Code/TU2.c **** **          This TimerUnit component provides a low level API for unified hardware access across
  88:../Generated_Code/TU2.c **** **          various timer devices using the Prescaler-Counter-Compare-Capture timer structure.
  89:../Generated_Code/TU2.c **** */         
  90:../Generated_Code/TU2.c **** /*!
  91:../Generated_Code/TU2.c **** **  @addtogroup TU2_module TU2 module documentation
  92:../Generated_Code/TU2.c **** **  @{
  93:../Generated_Code/TU2.c **** */         
  94:../Generated_Code/TU2.c **** 
  95:../Generated_Code/TU2.c **** /* MODULE TU2. */
  96:../Generated_Code/TU2.c **** 
  97:../Generated_Code/TU2.c **** #include "TU2.h"
  98:../Generated_Code/TU2.c **** #include "FreeRTOS.h" /* FreeRTOS interface */
  99:../Generated_Code/TU2.c **** #include "IO_Map.h"
 100:../Generated_Code/TU2.c **** 
 101:../Generated_Code/TU2.c **** #ifdef __cplusplus
 102:../Generated_Code/TU2.c **** extern "C" {
 103:../Generated_Code/TU2.c **** #endif 
 104:../Generated_Code/TU2.c **** 
 105:../Generated_Code/TU2.c **** /* List of channels used by component */
 106:../Generated_Code/TU2.c **** static const uint8_t ChannelDevice[TU2_NUMBER_OF_CHANNELS] = {0x00U,0x01U};
 107:../Generated_Code/TU2.c **** 
 108:../Generated_Code/TU2.c **** /* Table of channels mode / 0 - compare mode, 1 - capture mode */
 109:../Generated_Code/TU2.c **** static const uint8_t ChannelMode[TU2_NUMBER_OF_CHANNELS] = {0x00U,0x00U};
 110:../Generated_Code/TU2.c **** 
 111:../Generated_Code/TU2.c **** 
 112:../Generated_Code/TU2.c **** typedef struct {
 113:../Generated_Code/TU2.c ****   uint8_t InitCntr;                    /* Number of initialization */
 114:../Generated_Code/TU2.c ****   LDD_TUserData *UserDataPtr;          /* RTOS device data structure */
 115:../Generated_Code/TU2.c **** } TU2_TDeviceData;
 116:../Generated_Code/TU2.c **** 
 117:../Generated_Code/TU2.c **** typedef TU2_TDeviceData *TU2_TDeviceDataPtr; /* Pointer to the device data structure. */
 118:../Generated_Code/TU2.c **** 
 119:../Generated_Code/TU2.c **** /* {FreeRTOS RTOS Adapter} Static object used for simulation of dynamic driver memory allocation */
 120:../Generated_Code/TU2.c **** static TU2_TDeviceData DeviceDataPrv__DEFAULT_RTOS_ALLOC;
 121:../Generated_Code/TU2.c **** 
 122:../Generated_Code/TU2.c **** #define AVAILABLE_PIN_MASK (LDD_TPinMask)(TU2_CHANNEL_0_PIN | TU2_CHANNEL_1_PIN)
 123:../Generated_Code/TU2.c **** #define LAST_CHANNEL 0x01U
 124:../Generated_Code/TU2.c **** 
 125:../Generated_Code/TU2.c **** /* Internal method prototypes */
 126:../Generated_Code/TU2.c **** /*
 127:../Generated_Code/TU2.c **** ** ===================================================================
 128:../Generated_Code/TU2.c **** **     Method      :  TU2_Init (component TimerUnit_LDD)
 129:../Generated_Code/TU2.c **** */
 130:../Generated_Code/TU2.c **** /*!
 131:../Generated_Code/TU2.c **** **     @brief
 132:../Generated_Code/TU2.c **** **         Initializes the device. Allocates memory for the device data
 133:../Generated_Code/TU2.c **** **         structure, allocates interrupt vectors and sets interrupt
 134:../Generated_Code/TU2.c **** **         priority, sets pin routing, sets timing, etc. If the
 135:../Generated_Code/TU2.c **** **         property ["Enable in init. code"] is set to "yes" value then
 136:../Generated_Code/TU2.c **** **         the device is also enabled (see the description of the
 137:../Generated_Code/TU2.c **** **         [Enable] method). In this case the [Enable] method is not
 138:../Generated_Code/TU2.c **** **         necessary and needn't to be generated. This method can be
 139:../Generated_Code/TU2.c **** **         called only once. Before the second call of Init the [Deinit]
 140:../Generated_Code/TU2.c **** **         must be called first.
 141:../Generated_Code/TU2.c **** **     @param
 142:../Generated_Code/TU2.c **** **         UserDataPtr     - Pointer to the user or
 143:../Generated_Code/TU2.c **** **                           RTOS specific data. This pointer will be
 144:../Generated_Code/TU2.c **** **                           passed as an event or callback parameter.
 145:../Generated_Code/TU2.c **** **     @return
 146:../Generated_Code/TU2.c **** **                         - Pointer to the dynamically allocated private
 147:../Generated_Code/TU2.c **** **                           structure or NULL if there was an error.
 148:../Generated_Code/TU2.c **** */
 149:../Generated_Code/TU2.c **** /* ===================================================================*/
 150:../Generated_Code/TU2.c **** LDD_TDeviceData* TU2_Init(LDD_TUserData *UserDataPtr)
 151:../Generated_Code/TU2.c **** {
  32              		.loc 1 151 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 84B0     		sub	sp, sp, #16
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 24
  42 0004 00AF     		add	r7, sp, #0
  43              	.LCFI2:
  44              		.cfi_def_cfa_register 7
  45 0006 7860     		str	r0, [r7, #4]
  46              	.LBB2:
 152:../Generated_Code/TU2.c ****   TU2_TDeviceData *DeviceDataPrv;
 153:../Generated_Code/TU2.c **** 
 154:../Generated_Code/TU2.c ****   if (PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU2_ID] == NULL) {
  47              		.loc 1 154 0
  48 0008 2D4B     		ldr	r3, .L4
  49 000a DB68     		ldr	r3, [r3, #12]
  50 000c 002B     		cmp	r3, #0
  51 000e 45D1     		bne	.L2
 155:../Generated_Code/TU2.c ****     /* Allocate device structure */
 156:../Generated_Code/TU2.c ****     /* {FreeRTOS RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a point
 157:../Generated_Code/TU2.c ****     DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  52              		.loc 1 157 0
  53 0010 2C4B     		ldr	r3, .L4+4
  54 0012 FB60     		str	r3, [r7, #12]
 158:../Generated_Code/TU2.c ****     DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
  55              		.loc 1 158 0
  56 0014 FB68     		ldr	r3, [r7, #12]
  57 0016 7A68     		ldr	r2, [r7, #4]
  58 0018 5A60     		str	r2, [r3, #4]
 159:../Generated_Code/TU2.c ****     DeviceDataPrv->InitCntr = 1U;      /* First initialization */
  59              		.loc 1 159 0
  60 001a FB68     		ldr	r3, [r7, #12]
  61 001c 0122     		mov	r2, #1
  62 001e 1A70     		strb	r2, [r3]
 160:../Generated_Code/TU2.c ****   }
 161:../Generated_Code/TU2.c ****   else {
 162:../Generated_Code/TU2.c ****     /* Memory is already allocated */
 163:../Generated_Code/TU2.c ****     DeviceDataPrv = (TU2_TDeviceDataPtr) PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU2_ID];
 164:../Generated_Code/TU2.c ****     DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
 165:../Generated_Code/TU2.c ****     DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
 166:../Generated_Code/TU2.c ****     return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 167:../Generated_Code/TU2.c ****   }
 168:../Generated_Code/TU2.c ****   /* SIM_SCGC6: TPM2=1 */
 169:../Generated_Code/TU2.c ****   SIM_SCGC6 |= SIM_SCGC6_TPM2_MASK;                                   
  63              		.loc 1 169 0
  64 0020 294A     		ldr	r2, .L4+8
  65 0022 2949     		ldr	r1, .L4+8
  66 0024 294B     		ldr	r3, .L4+12
  67 0026 CB58     		ldr	r3, [r1, r3]
  68 0028 8021     		mov	r1, #128
  69 002a C904     		lsl	r1, r1, #19
  70 002c 1943     		orr	r1, r3
  71 002e 274B     		ldr	r3, .L4+12
  72 0030 D150     		str	r1, [r2, r3]
 170:../Generated_Code/TU2.c ****   /* TPM2_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,
 171:../Generated_Code/TU2.c ****   TPM2_SC = (TPM_SC_CMOD(0x00) | TPM_SC_PS(0x00)); /* Clear status and control register */
  73              		.loc 1 171 0
  74 0032 274B     		ldr	r3, .L4+16
  75 0034 0022     		mov	r2, #0
  76 0036 1A60     		str	r2, [r3]
 172:../Generated_Code/TU2.c ****   /* TPM2_CNT: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,COUN
 173:../Generated_Code/TU2.c ****   TPM2_CNT = TPM_CNT_COUNT(0x00);      /* Reset counter register */
  77              		.loc 1 173 0
  78 0038 254B     		ldr	r3, .L4+16
  79 003a 0022     		mov	r2, #0
  80 003c 5A60     		str	r2, [r3, #4]
 174:../Generated_Code/TU2.c ****   /* TPM2_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 175:../Generated_Code/TU2.c ****   TPM2_C0SC = 0x00U;                   /* Clear channel status and control register */
  81              		.loc 1 175 0
  82 003e 244B     		ldr	r3, .L4+16
  83 0040 0022     		mov	r2, #0
  84 0042 DA60     		str	r2, [r3, #12]
 176:../Generated_Code/TU2.c ****   /* TPM2_C1SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 177:../Generated_Code/TU2.c ****   TPM2_C1SC = 0x00U;                   /* Clear channel status and control register */
  85              		.loc 1 177 0
  86 0044 224B     		ldr	r3, .L4+16
  87 0046 0022     		mov	r2, #0
  88 0048 5A61     		str	r2, [r3, #20]
 178:../Generated_Code/TU2.c ****   /* TPM2_MOD: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,MOD=
 179:../Generated_Code/TU2.c ****   TPM2_MOD = TPM_MOD_MOD(0x927B);      /* Set up modulo register */
  89              		.loc 1 179 0
  90 004a 214B     		ldr	r3, .L4+16
  91 004c 214A     		ldr	r2, .L4+20
  92 004e 9A60     		str	r2, [r3, #8]
 180:../Generated_Code/TU2.c ****   /* TPM2_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 181:../Generated_Code/TU2.c ****   TPM2_C0SC = (TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK | TPM_CnSC_ELSA_MASK); /* Set up channel stat
  93              		.loc 1 181 0
  94 0050 1F4B     		ldr	r3, .L4+16
  95 0052 2C22     		mov	r2, #44
  96 0054 DA60     		str	r2, [r3, #12]
 182:../Generated_Code/TU2.c ****   /* TPM2_C0V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=
 183:../Generated_Code/TU2.c ****   TPM2_C0V = TPM_CnV_VAL(0x00);        /* Set up channel value register */
  97              		.loc 1 183 0
  98 0056 1E4B     		ldr	r3, .L4+16
  99 0058 0022     		mov	r2, #0
 100 005a 1A61     		str	r2, [r3, #16]
 184:../Generated_Code/TU2.c ****   /* TPM2_C1SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 185:../Generated_Code/TU2.c ****   TPM2_C1SC = (TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK | TPM_CnSC_ELSA_MASK); /* Set up channel stat
 101              		.loc 1 185 0
 102 005c 1C4B     		ldr	r3, .L4+16
 103 005e 2C22     		mov	r2, #44
 104 0060 5A61     		str	r2, [r3, #20]
 186:../Generated_Code/TU2.c ****   /* TPM2_C1V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=
 187:../Generated_Code/TU2.c ****   TPM2_C1V = TPM_CnV_VAL(0x00);        /* Set up channel value register */
 105              		.loc 1 187 0
 106 0062 1B4B     		ldr	r3, .L4+16
 107 0064 0022     		mov	r2, #0
 108 0066 9A61     		str	r2, [r3, #24]
 188:../Generated_Code/TU2.c ****   /* PORTB_PCR18: ISF=0,MUX=3 */
 189:../Generated_Code/TU2.c ****   PORTB_PCR18 = (uint32_t)((PORTB_PCR18 & (uint32_t)~(uint32_t)(
 109              		.loc 1 189 0
 110 0068 1B4B     		ldr	r3, .L4+24
 190:../Generated_Code/TU2.c ****                  PORT_PCR_ISF_MASK |
 191:../Generated_Code/TU2.c ****                  PORT_PCR_MUX(0x04)
 192:../Generated_Code/TU2.c ****                 )) | (uint32_t)(
 193:../Generated_Code/TU2.c ****                  PORT_PCR_MUX(0x03)
 194:../Generated_Code/TU2.c ****                 ));                                  
 111              		.loc 1 194 0
 112 006a 1B4A     		ldr	r2, .L4+24
 189:../Generated_Code/TU2.c ****   PORTB_PCR18 = (uint32_t)((PORTB_PCR18 & (uint32_t)~(uint32_t)(
 113              		.loc 1 189 0
 114 006c 916C     		ldr	r1, [r2, #72]
 115              		.loc 1 194 0
 116 006e 1B4A     		ldr	r2, .L4+28
 117 0070 0A40     		and	r2, r1
 118 0072 C021     		mov	r1, #192
 119 0074 8900     		lsl	r1, r1, #2
 120 0076 0A43     		orr	r2, r1
 121 0078 9A64     		str	r2, [r3, #72]
 195:../Generated_Code/TU2.c ****   /* PORTB_PCR19: ISF=0,MUX=3 */
 196:../Generated_Code/TU2.c ****   PORTB_PCR19 = (uint32_t)((PORTB_PCR19 & (uint32_t)~(uint32_t)(
 122              		.loc 1 196 0
 123 007a 174B     		ldr	r3, .L4+24
 197:../Generated_Code/TU2.c ****                  PORT_PCR_ISF_MASK |
 198:../Generated_Code/TU2.c ****                  PORT_PCR_MUX(0x04)
 199:../Generated_Code/TU2.c ****                 )) | (uint32_t)(
 200:../Generated_Code/TU2.c ****                  PORT_PCR_MUX(0x03)
 201:../Generated_Code/TU2.c ****                 ));                                  
 124              		.loc 1 201 0
 125 007c 164A     		ldr	r2, .L4+24
 196:../Generated_Code/TU2.c ****   PORTB_PCR19 = (uint32_t)((PORTB_PCR19 & (uint32_t)~(uint32_t)(
 126              		.loc 1 196 0
 127 007e D16C     		ldr	r1, [r2, #76]
 128              		.loc 1 201 0
 129 0080 164A     		ldr	r2, .L4+28
 130 0082 0A40     		and	r2, r1
 131 0084 C021     		mov	r1, #192
 132 0086 8900     		lsl	r1, r1, #2
 133 0088 0A43     		orr	r2, r1
 134 008a DA64     		str	r2, [r3, #76]
 202:../Generated_Code/TU2.c ****   /* TPM2_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,
 203:../Generated_Code/TU2.c ****   TPM2_SC = (TPM_SC_CMOD(0x01) | TPM_SC_PS(0x03)); /* Set up status and control register */
 135              		.loc 1 203 0
 136 008c 104B     		ldr	r3, .L4+16
 137 008e 0B22     		mov	r2, #11
 138 0090 1A60     		str	r2, [r3]
 204:../Generated_Code/TU2.c ****   /* Registration of the device structure */
 205:../Generated_Code/TU2.c ****   PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU2_ID,DeviceDataPrv);
 139              		.loc 1 205 0
 140 0092 0B4B     		ldr	r3, .L4
 141 0094 FA68     		ldr	r2, [r7, #12]
 142 0096 DA60     		str	r2, [r3, #12]
 206:../Generated_Code/TU2.c ****   return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 143              		.loc 1 206 0
 144 0098 FB68     		ldr	r3, [r7, #12]
 145 009a 0CE0     		b	.L3
 146              	.L2:
 163:../Generated_Code/TU2.c ****     DeviceDataPrv = (TU2_TDeviceDataPtr) PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU2_ID];
 147              		.loc 1 163 0
 148 009c 084B     		ldr	r3, .L4
 149 009e DB68     		ldr	r3, [r3, #12]
 150 00a0 FB60     		str	r3, [r7, #12]
 164:../Generated_Code/TU2.c ****     DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
 151              		.loc 1 164 0
 152 00a2 FB68     		ldr	r3, [r7, #12]
 153 00a4 7A68     		ldr	r2, [r7, #4]
 154 00a6 5A60     		str	r2, [r3, #4]
 165:../Generated_Code/TU2.c ****     DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
 155              		.loc 1 165 0
 156 00a8 FB68     		ldr	r3, [r7, #12]
 157 00aa 1B78     		ldrb	r3, [r3]
 158 00ac 0133     		add	r3, r3, #1
 159 00ae DAB2     		uxtb	r2, r3
 160 00b0 FB68     		ldr	r3, [r7, #12]
 161 00b2 1A70     		strb	r2, [r3]
 166:../Generated_Code/TU2.c ****     return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 162              		.loc 1 166 0
 163 00b4 FB68     		ldr	r3, [r7, #12]
 164              	.L3:
 165              	.LBE2:
 207:../Generated_Code/TU2.c **** }
 166              		.loc 1 207 0
 167 00b6 181C     		mov	r0, r3
 168 00b8 BD46     		mov	sp, r7
 169 00ba 04B0     		add	sp, sp, #16
 170              		@ sp needed for prologue
 171 00bc 80BD     		pop	{r7, pc}
 172              	.L5:
 173 00be C046     		.align	2
 174              	.L4:
 175 00c0 00000000 		.word	PE_LDD_DeviceDataList
 176 00c4 00000000 		.word	_ZL33DeviceDataPrv__DEFAULT_RTOS_ALLOC
 177 00c8 00700440 		.word	1074032640
 178 00cc 3C100000 		.word	4156
 179 00d0 00A00340 		.word	1073979392
 180 00d4 7B920000 		.word	37499
 181 00d8 00A00440 		.word	1074044928
 182 00dc FFF8FFFE 		.word	-16779009
 183              		.cfi_endproc
 184              	.LFE0:
 186              		.section	.text.TU2_GetPeriodTicks,"ax",%progbits
 187              		.align	2
 188              		.global	TU2_GetPeriodTicks
 189              		.code	16
 190              		.thumb_func
 192              	TU2_GetPeriodTicks:
 193              	.LFB1:
 208:../Generated_Code/TU2.c **** 
 209:../Generated_Code/TU2.c **** /*
 210:../Generated_Code/TU2.c **** ** ===================================================================
 211:../Generated_Code/TU2.c **** **     Method      :  TU2_GetPeriodTicks (component TimerUnit_LDD)
 212:../Generated_Code/TU2.c **** */
 213:../Generated_Code/TU2.c **** /*!
 214:../Generated_Code/TU2.c **** **     @brief
 215:../Generated_Code/TU2.c **** **         Returns the number of counter ticks before re-initialization.
 216:../Generated_Code/TU2.c **** **         See also method [SetPeriodTicks]. This method is available
 217:../Generated_Code/TU2.c **** **         only if the property ["Counter restart"] is switched to
 218:../Generated_Code/TU2.c **** **         'on-match' value.
 219:../Generated_Code/TU2.c **** **     @param
 220:../Generated_Code/TU2.c **** **         DeviceDataPtr   - Device data structure
 221:../Generated_Code/TU2.c **** **                           pointer returned by [Init] method.
 222:../Generated_Code/TU2.c **** **     @param
 223:../Generated_Code/TU2.c **** **         TicksPtr        - Pointer to return value of the
 224:../Generated_Code/TU2.c **** **                           number of counter ticks before
 225:../Generated_Code/TU2.c **** **                           re-initialization
 226:../Generated_Code/TU2.c **** **     @return
 227:../Generated_Code/TU2.c **** **                         - Error code, possible codes:
 228:../Generated_Code/TU2.c **** **                           ERR_OK - OK 
 229:../Generated_Code/TU2.c **** **                           ERR_SPEED - The component does not work in
 230:../Generated_Code/TU2.c **** **                           the active clock configuration
 231:../Generated_Code/TU2.c **** */
 232:../Generated_Code/TU2.c **** /* ===================================================================*/
 233:../Generated_Code/TU2.c **** LDD_TError TU2_GetPeriodTicks(LDD_TDeviceData *DeviceDataPtr, TU2_TValueType *TicksPtr)
 234:../Generated_Code/TU2.c **** {
 194              		.loc 1 234 0
 195              		.cfi_startproc
 196 0000 80B5     		push	{r7, lr}
 197              	.LCFI3:
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 7, -8
 200              		.cfi_offset 14, -4
 201 0002 84B0     		sub	sp, sp, #16
 202              	.LCFI4:
 203              		.cfi_def_cfa_offset 24
 204 0004 00AF     		add	r7, sp, #0
 205              	.LCFI5:
 206              		.cfi_def_cfa_register 7
 207 0006 7860     		str	r0, [r7, #4]
 208 0008 3960     		str	r1, [r7]
 209              	.LBB3:
 235:../Generated_Code/TU2.c ****   uint16_t tmp;
 236:../Generated_Code/TU2.c **** 
 237:../Generated_Code/TU2.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 238:../Generated_Code/TU2.c ****   tmp = (uint16_t)(TPM_PDD_ReadModuloReg(TPM2_BASE_PTR));
 210              		.loc 1 238 0
 211 000a 0B4B     		ldr	r3, .L8
 212 000c 9A68     		ldr	r2, [r3, #8]
 213 000e 3B1C     		mov	r3, r7
 214 0010 0E33     		add	r3, r3, #14
 215 0012 1A80     		strh	r2, [r3]
 239:../Generated_Code/TU2.c ****   *TicksPtr = (TU2_TValueType)++tmp;
 216              		.loc 1 239 0
 217 0014 3B1C     		mov	r3, r7
 218 0016 0E33     		add	r3, r3, #14
 219 0018 3A1C     		mov	r2, r7
 220 001a 0E32     		add	r2, r2, #14
 221 001c 1288     		ldrh	r2, [r2]
 222 001e 0132     		add	r2, r2, #1
 223 0020 1A80     		strh	r2, [r3]
 224 0022 3B68     		ldr	r3, [r7]
 225 0024 3A1C     		mov	r2, r7
 226 0026 0E32     		add	r2, r2, #14
 227 0028 1288     		ldrh	r2, [r2]
 228 002a 1A80     		strh	r2, [r3]
 240:../Generated_Code/TU2.c ****   return ERR_OK;                       /* OK */
 229              		.loc 1 240 0
 230 002c 0023     		mov	r3, #0
 231              	.LBE3:
 241:../Generated_Code/TU2.c **** }
 232              		.loc 1 241 0
 233 002e 181C     		mov	r0, r3
 234 0030 BD46     		mov	sp, r7
 235 0032 04B0     		add	sp, sp, #16
 236              		@ sp needed for prologue
 237 0034 80BD     		pop	{r7, pc}
 238              	.L9:
 239 0036 C046     		.align	2
 240              	.L8:
 241 0038 00A00340 		.word	1073979392
 242              		.cfi_endproc
 243              	.LFE1:
 245              		.section	.text.TU2_GetCounterValue,"ax",%progbits
 246              		.align	2
 247              		.global	TU2_GetCounterValue
 248              		.code	16
 249              		.thumb_func
 251              	TU2_GetCounterValue:
 252              	.LFB2:
 242:../Generated_Code/TU2.c **** 
 243:../Generated_Code/TU2.c **** /*
 244:../Generated_Code/TU2.c **** ** ===================================================================
 245:../Generated_Code/TU2.c **** **     Method      :  TU2_GetCounterValue (component TimerUnit_LDD)
 246:../Generated_Code/TU2.c **** */
 247:../Generated_Code/TU2.c **** /*!
 248:../Generated_Code/TU2.c **** **     @brief
 249:../Generated_Code/TU2.c **** **         Returns the content of counter register. This method can be
 250:../Generated_Code/TU2.c **** **         used both if counter is enabled and if counter is disabled.
 251:../Generated_Code/TU2.c **** **         The method is not available if HW doesn't allow reading of
 252:../Generated_Code/TU2.c **** **         the counter.
 253:../Generated_Code/TU2.c **** **     @param
 254:../Generated_Code/TU2.c **** **         DeviceDataPtr   - Device data structure
 255:../Generated_Code/TU2.c **** **                           pointer returned by [Init] method.
 256:../Generated_Code/TU2.c **** **     @return
 257:../Generated_Code/TU2.c **** **                         - Counter value (number of counted ticks).
 258:../Generated_Code/TU2.c **** */
 259:../Generated_Code/TU2.c **** /* ===================================================================*/
 260:../Generated_Code/TU2.c **** TU2_TValueType TU2_GetCounterValue(LDD_TDeviceData *DeviceDataPtr)
 261:../Generated_Code/TU2.c **** {
 253              		.loc 1 261 0
 254              		.cfi_startproc
 255 0000 80B5     		push	{r7, lr}
 256              	.LCFI6:
 257              		.cfi_def_cfa_offset 8
 258              		.cfi_offset 7, -8
 259              		.cfi_offset 14, -4
 260 0002 82B0     		sub	sp, sp, #8
 261              	.LCFI7:
 262              		.cfi_def_cfa_offset 16
 263 0004 00AF     		add	r7, sp, #0
 264              	.LCFI8:
 265              		.cfi_def_cfa_register 7
 266 0006 7860     		str	r0, [r7, #4]
 262:../Generated_Code/TU2.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 263:../Generated_Code/TU2.c ****   return (TU2_TValueType)TPM_PDD_ReadCounterReg(TPM2_BASE_PTR);
 267              		.loc 1 263 0
 268 0008 034B     		ldr	r3, .L12
 269 000a 5B68     		ldr	r3, [r3, #4]
 270 000c 9BB2     		uxth	r3, r3
 264:../Generated_Code/TU2.c **** }
 271              		.loc 1 264 0
 272 000e 181C     		mov	r0, r3
 273 0010 BD46     		mov	sp, r7
 274 0012 02B0     		add	sp, sp, #8
 275              		@ sp needed for prologue
 276 0014 80BD     		pop	{r7, pc}
 277              	.L13:
 278 0016 C046     		.align	2
 279              	.L12:
 280 0018 00A00340 		.word	1073979392
 281              		.cfi_endproc
 282              	.LFE2:
 284              		.section	.text.TU2_SetOffsetTicks,"ax",%progbits
 285              		.align	2
 286              		.global	TU2_SetOffsetTicks
 287              		.code	16
 288              		.thumb_func
 290              	TU2_SetOffsetTicks:
 291              	.LFB3:
 265:../Generated_Code/TU2.c **** 
 266:../Generated_Code/TU2.c **** /*
 267:../Generated_Code/TU2.c **** ** ===================================================================
 268:../Generated_Code/TU2.c **** **     Method      :  TU2_SetOffsetTicks (component TimerUnit_LDD)
 269:../Generated_Code/TU2.c **** */
 270:../Generated_Code/TU2.c **** /*!
 271:../Generated_Code/TU2.c **** **     @brief
 272:../Generated_Code/TU2.c **** **         Sets the new offset value to channel specified by the
 273:../Generated_Code/TU2.c **** **         parameter ChannelIdx. It is user responsibility to use value
 274:../Generated_Code/TU2.c **** **         below selected period. This method is available when at
 275:../Generated_Code/TU2.c **** **         least one channel is configured.
 276:../Generated_Code/TU2.c **** **     @param
 277:../Generated_Code/TU2.c **** **         DeviceDataPtr   - Device data structure
 278:../Generated_Code/TU2.c **** **                           pointer returned by [Init] method.
 279:../Generated_Code/TU2.c **** **     @param
 280:../Generated_Code/TU2.c **** **         ChannelIdx      - Index of the component
 281:../Generated_Code/TU2.c **** **                           channel.
 282:../Generated_Code/TU2.c **** **     @param
 283:../Generated_Code/TU2.c **** **         Ticks           - Number of counter ticks to compare
 284:../Generated_Code/TU2.c **** **                           match.
 285:../Generated_Code/TU2.c **** **     @return
 286:../Generated_Code/TU2.c **** **                         - Error code, possible codes:
 287:../Generated_Code/TU2.c **** **                           ERR_OK - OK 
 288:../Generated_Code/TU2.c **** **                           ERR_PARAM_INDEX - ChannelIdx parameter is
 289:../Generated_Code/TU2.c **** **                           out of possible range.
 290:../Generated_Code/TU2.c **** **                           ERR_NOTAVAIL -  The compare mode is not
 291:../Generated_Code/TU2.c **** **                           selected for selected channel
 292:../Generated_Code/TU2.c **** **                           ERR_PARAM_TICKS - Ticks parameter is out of
 293:../Generated_Code/TU2.c **** **                           possible range.
 294:../Generated_Code/TU2.c **** **                           ERR_SPEED - The component does not work in
 295:../Generated_Code/TU2.c **** **                           the active clock configuration
 296:../Generated_Code/TU2.c **** */
 297:../Generated_Code/TU2.c **** /* ===================================================================*/
 298:../Generated_Code/TU2.c **** LDD_TError TU2_SetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, TU2_TValueType Ti
 299:../Generated_Code/TU2.c **** {
 292              		.loc 1 299 0
 293              		.cfi_startproc
 294 0000 80B5     		push	{r7, lr}
 295              	.LCFI9:
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0002 82B0     		sub	sp, sp, #8
 300              	.LCFI10:
 301              		.cfi_def_cfa_offset 16
 302 0004 00AF     		add	r7, sp, #0
 303              	.LCFI11:
 304              		.cfi_def_cfa_register 7
 305 0006 7860     		str	r0, [r7, #4]
 306 0008 FB1C     		add	r3, r7, #3
 307 000a 1970     		strb	r1, [r3]
 308 000c 3B1C     		mov	r3, r7
 309 000e 1A80     		strh	r2, [r3]
 300:../Generated_Code/TU2.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 301:../Generated_Code/TU2.c ****   /* Parameter test - this test can be disabled by setting the "Ignore range checking"
 302:../Generated_Code/TU2.c ****      property to the "yes" value in the "Configuration inspector" */
 303:../Generated_Code/TU2.c ****   if (ChannelIdx > LAST_CHANNEL) {     /* Is the channel index out of range? */
 310              		.loc 1 303 0
 311 0010 FB1C     		add	r3, r7, #3
 312 0012 1B78     		ldrb	r3, [r3]
 313 0014 012B     		cmp	r3, #1
 314 0016 01D9     		bls	.L15
 304:../Generated_Code/TU2.c ****     return ERR_PARAM_INDEX;            /* If yes then error */
 315              		.loc 1 304 0
 316 0018 8223     		mov	r3, #130
 317 001a 13E0     		b	.L16
 318              	.L15:
 305:../Generated_Code/TU2.c ****   }
 306:../Generated_Code/TU2.c ****   if ((ChannelMode[ChannelIdx]) != 0U) { /* Is the channel in compare mode? */
 319              		.loc 1 306 0
 320 001c FB1C     		add	r3, r7, #3
 321 001e 1B78     		ldrb	r3, [r3]
 322 0020 0A4A     		ldr	r2, .L18
 323 0022 D35C     		ldrb	r3, [r2, r3]
 324 0024 002B     		cmp	r3, #0
 325 0026 01D0     		beq	.L17
 307:../Generated_Code/TU2.c ****     return ERR_NOTAVAIL;               /* If not then error */
 326              		.loc 1 307 0
 327 0028 0923     		mov	r3, #9
 328 002a 0BE0     		b	.L16
 329              	.L17:
 308:../Generated_Code/TU2.c ****   }
 309:../Generated_Code/TU2.c ****   TPM_PDD_WriteChannelValueReg(TPM2_BASE_PTR, ChannelDevice[ChannelIdx], (uint16_t)Ticks);
 330              		.loc 1 309 0
 331 002c 0849     		ldr	r1, .L18+4
 332 002e FB1C     		add	r3, r7, #3
 333 0030 1B78     		ldrb	r3, [r3]
 334 0032 084A     		ldr	r2, .L18+8
 335 0034 D35C     		ldrb	r3, [r2, r3]
 336 0036 3A1C     		mov	r2, r7
 337 0038 1288     		ldrh	r2, [r2]
 338 003a 0133     		add	r3, r3, #1
 339 003c DB00     		lsl	r3, r3, #3
 340 003e CB18     		add	r3, r1, r3
 341 0040 9A60     		str	r2, [r3, #8]
 310:../Generated_Code/TU2.c ****   return ERR_OK;                       /* OK */
 342              		.loc 1 310 0
 343 0042 0023     		mov	r3, #0
 344              	.L16:
 311:../Generated_Code/TU2.c **** }
 345              		.loc 1 311 0
 346 0044 181C     		mov	r0, r3
 347 0046 BD46     		mov	sp, r7
 348 0048 02B0     		add	sp, sp, #8
 349              		@ sp needed for prologue
 350 004a 80BD     		pop	{r7, pc}
 351              	.L19:
 352              		.align	2
 353              	.L18:
 354 004c 00000000 		.word	_ZL11ChannelMode
 355 0050 00A00340 		.word	1073979392
 356 0054 00000000 		.word	_ZL13ChannelDevice
 357              		.cfi_endproc
 358              	.LFE3:
 360              		.section	.text.TU2_GetOffsetTicks,"ax",%progbits
 361              		.align	2
 362              		.global	TU2_GetOffsetTicks
 363              		.code	16
 364              		.thumb_func
 366              	TU2_GetOffsetTicks:
 367              	.LFB4:
 312:../Generated_Code/TU2.c **** 
 313:../Generated_Code/TU2.c **** /*
 314:../Generated_Code/TU2.c **** ** ===================================================================
 315:../Generated_Code/TU2.c **** **     Method      :  TU2_GetOffsetTicks (component TimerUnit_LDD)
 316:../Generated_Code/TU2.c **** */
 317:../Generated_Code/TU2.c **** /*!
 318:../Generated_Code/TU2.c **** **     @brief
 319:../Generated_Code/TU2.c **** **         Returns the number of counter ticks to compare match channel
 320:../Generated_Code/TU2.c **** **         specified by the parameter ChannelIdx. See also method
 321:../Generated_Code/TU2.c **** **         [SetOffsetTicks]. This method is available when at least one
 322:../Generated_Code/TU2.c **** **         channel is configured.
 323:../Generated_Code/TU2.c **** **     @param
 324:../Generated_Code/TU2.c **** **         DeviceDataPtr   - Device data structure
 325:../Generated_Code/TU2.c **** **                           pointer returned by [Init] method.
 326:../Generated_Code/TU2.c **** **     @param
 327:../Generated_Code/TU2.c **** **         ChannelIdx      - Index of the component
 328:../Generated_Code/TU2.c **** **                           channel.
 329:../Generated_Code/TU2.c **** **     @param
 330:../Generated_Code/TU2.c **** **         TicksPtr        - Pointer to return value of the
 331:../Generated_Code/TU2.c **** **                           number of counter ticks to compare match.
 332:../Generated_Code/TU2.c **** **     @return
 333:../Generated_Code/TU2.c **** **                         - Error code, possible codes:
 334:../Generated_Code/TU2.c **** **                           ERR_OK - OK 
 335:../Generated_Code/TU2.c **** **                           ERR_PARAM_INDEX - ChannelIdx parameter is
 336:../Generated_Code/TU2.c **** **                           out of possible range.
 337:../Generated_Code/TU2.c **** **                           ERR_NOTAVAIL -  The compare mode is not
 338:../Generated_Code/TU2.c **** **                           selected for selected channel.
 339:../Generated_Code/TU2.c **** **                           ERR_SPEED - The component does not work in
 340:../Generated_Code/TU2.c **** **                           the active clock configuration
 341:../Generated_Code/TU2.c **** */
 342:../Generated_Code/TU2.c **** /* ===================================================================*/
 343:../Generated_Code/TU2.c **** LDD_TError TU2_GetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, TU2_TValueType *T
 344:../Generated_Code/TU2.c **** {
 368              		.loc 1 344 0
 369              		.cfi_startproc
 370 0000 80B5     		push	{r7, lr}
 371              	.LCFI12:
 372              		.cfi_def_cfa_offset 8
 373              		.cfi_offset 7, -8
 374              		.cfi_offset 14, -4
 375 0002 84B0     		sub	sp, sp, #16
 376              	.LCFI13:
 377              		.cfi_def_cfa_offset 24
 378 0004 00AF     		add	r7, sp, #0
 379              	.LCFI14:
 380              		.cfi_def_cfa_register 7
 381 0006 F860     		str	r0, [r7, #12]
 382 0008 7A60     		str	r2, [r7, #4]
 383 000a 3B1C     		mov	r3, r7
 384 000c 0B33     		add	r3, r3, #11
 385 000e 0A1C     		add	r2, r1, #0
 386 0010 1A70     		strb	r2, [r3]
 345:../Generated_Code/TU2.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 346:../Generated_Code/TU2.c ****   /* Parameter test - this test can be disabled by setting the "Ignore range checking"
 347:../Generated_Code/TU2.c ****      property to the "yes" value in the "Configuration inspector" */
 348:../Generated_Code/TU2.c ****   if (ChannelIdx > LAST_CHANNEL) {     /* Is the channel index out of range? */
 387              		.loc 1 348 0
 388 0012 3B1C     		mov	r3, r7
 389 0014 0B33     		add	r3, r3, #11
 390 0016 1B78     		ldrb	r3, [r3]
 391 0018 012B     		cmp	r3, #1
 392 001a 01D9     		bls	.L21
 349:../Generated_Code/TU2.c ****     return ERR_PARAM_INDEX;            /* If yes then error */
 393              		.loc 1 349 0
 394 001c 8223     		mov	r3, #130
 395 001e 16E0     		b	.L22
 396              	.L21:
 350:../Generated_Code/TU2.c ****   }
 351:../Generated_Code/TU2.c ****   if ((ChannelMode[ChannelIdx]) != 0U) { /* Is the channel in compare mode? */
 397              		.loc 1 351 0
 398 0020 3B1C     		mov	r3, r7
 399 0022 0B33     		add	r3, r3, #11
 400 0024 1B78     		ldrb	r3, [r3]
 401 0026 0C4A     		ldr	r2, .L24
 402 0028 D35C     		ldrb	r3, [r2, r3]
 403 002a 002B     		cmp	r3, #0
 404 002c 01D0     		beq	.L23
 352:../Generated_Code/TU2.c ****     return ERR_NOTAVAIL;               /* If not then error */
 405              		.loc 1 352 0
 406 002e 0923     		mov	r3, #9
 407 0030 0DE0     		b	.L22
 408              	.L23:
 353:../Generated_Code/TU2.c ****   }
 354:../Generated_Code/TU2.c ****   *TicksPtr = (TU2_TValueType)(TPM_PDD_ReadChannelValueReg(TPM2_BASE_PTR, ChannelDevice[ChannelIdx]
 409              		.loc 1 354 0
 410 0032 0A4A     		ldr	r2, .L24+4
 411 0034 3B1C     		mov	r3, r7
 412 0036 0B33     		add	r3, r3, #11
 413 0038 1B78     		ldrb	r3, [r3]
 414 003a 0949     		ldr	r1, .L24+8
 415 003c CB5C     		ldrb	r3, [r1, r3]
 416 003e 0133     		add	r3, r3, #1
 417 0040 DB00     		lsl	r3, r3, #3
 418 0042 D318     		add	r3, r2, r3
 419 0044 9B68     		ldr	r3, [r3, #8]
 420 0046 9AB2     		uxth	r2, r3
 421 0048 7B68     		ldr	r3, [r7, #4]
 422 004a 1A80     		strh	r2, [r3]
 355:../Generated_Code/TU2.c ****   return ERR_OK;                       /* OK */
 423              		.loc 1 355 0
 424 004c 0023     		mov	r3, #0
 425              	.L22:
 356:../Generated_Code/TU2.c **** }
 426              		.loc 1 356 0
 427 004e 181C     		mov	r0, r3
 428 0050 BD46     		mov	sp, r7
 429 0052 04B0     		add	sp, sp, #16
 430              		@ sp needed for prologue
 431 0054 80BD     		pop	{r7, pc}
 432              	.L25:
 433 0056 C046     		.align	2
 434              	.L24:
 435 0058 00000000 		.word	_ZL11ChannelMode
 436 005c 00A00340 		.word	1073979392
 437 0060 00000000 		.word	_ZL13ChannelDevice
 438              		.cfi_endproc
 439              	.LFE4:
 441              		.section	.text.TU2_SelectOutputAction,"ax",%progbits
 442              		.align	2
 443              		.global	TU2_SelectOutputAction
 444              		.code	16
 445              		.thumb_func
 447              	TU2_SelectOutputAction:
 448              	.LFB5:
 357:../Generated_Code/TU2.c **** 
 358:../Generated_Code/TU2.c **** /*
 359:../Generated_Code/TU2.c **** ** ===================================================================
 360:../Generated_Code/TU2.c **** **     Method      :  TU2_SelectOutputAction (component TimerUnit_LDD)
 361:../Generated_Code/TU2.c **** */
 362:../Generated_Code/TU2.c **** /*!
 363:../Generated_Code/TU2.c **** **     @brief
 364:../Generated_Code/TU2.c **** **         Sets the type of compare match and counter overflow action
 365:../Generated_Code/TU2.c **** **         on channel output. This method is available when at least
 366:../Generated_Code/TU2.c **** **         one channel is configured.
 367:../Generated_Code/TU2.c **** **     @param
 368:../Generated_Code/TU2.c **** **         DeviceDataPtr   - Device data structure
 369:../Generated_Code/TU2.c **** **                           pointer returned by [Init] method.
 370:../Generated_Code/TU2.c **** **     @param
 371:../Generated_Code/TU2.c **** **         ChannelIdx      - Index of the component
 372:../Generated_Code/TU2.c **** **                           channel.
 373:../Generated_Code/TU2.c **** **     @param
 374:../Generated_Code/TU2.c **** **         CompareAction   - Select output action
 375:../Generated_Code/TU2.c **** **                           on compare match
 376:../Generated_Code/TU2.c **** **     @param
 377:../Generated_Code/TU2.c **** **         CounterAction   - Select output action
 378:../Generated_Code/TU2.c **** **                           on counter overflow
 379:../Generated_Code/TU2.c **** **     @return
 380:../Generated_Code/TU2.c **** **                         - Error code, possible codes:
 381:../Generated_Code/TU2.c **** **                           ERR_OK - OK
 382:../Generated_Code/TU2.c **** **                           ERR_PARAM_INDEX - ChannelIdx parameter is
 383:../Generated_Code/TU2.c **** **                           out of possible range
 384:../Generated_Code/TU2.c **** **                           ERR_NOTAVAIL -  Action is not possible on
 385:../Generated_Code/TU2.c **** **                           selected channel or counter. Supported
 386:../Generated_Code/TU2.c **** **                           combinations are HW specific.
 387:../Generated_Code/TU2.c **** **                           ERR_SPEED - The component does not work in
 388:../Generated_Code/TU2.c **** **                           the active clock configuration
 389:../Generated_Code/TU2.c **** */
 390:../Generated_Code/TU2.c **** /* ===================================================================*/
 391:../Generated_Code/TU2.c **** LDD_TError TU2_SelectOutputAction(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, LDD_TimerUnit
 392:../Generated_Code/TU2.c **** {
 449              		.loc 1 392 0
 450              		.cfi_startproc
 451 0000 90B5     		push	{r4, r7, lr}
 452              	.LCFI15:
 453              		.cfi_def_cfa_offset 12
 454              		.cfi_offset 4, -12
 455              		.cfi_offset 7, -8
 456              		.cfi_offset 14, -4
 457 0002 83B0     		sub	sp, sp, #12
 458              	.LCFI16:
 459              		.cfi_def_cfa_offset 24
 460 0004 00AF     		add	r7, sp, #0
 461              	.LCFI17:
 462              		.cfi_def_cfa_register 7
 463 0006 7860     		str	r0, [r7, #4]
 464 0008 081C     		mov	r0, r1
 465 000a 111C     		mov	r1, r2
 466 000c 1A1C     		mov	r2, r3
 467 000e FB1C     		add	r3, r7, #3
 468 0010 1870     		strb	r0, [r3]
 469 0012 BB1C     		add	r3, r7, #2
 470 0014 1970     		strb	r1, [r3]
 471 0016 7B1C     		add	r3, r7, #1
 472 0018 1A70     		strb	r2, [r3]
 393:../Generated_Code/TU2.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 394:../Generated_Code/TU2.c ****   /* Parameter test - this test can be disabled by setting the "Ignore range checking"
 395:../Generated_Code/TU2.c ****      property to the "yes" value in the "Configuration inspector" */
 396:../Generated_Code/TU2.c ****   if (ChannelIdx > LAST_CHANNEL) {     /* Is the channel index out of range? */
 473              		.loc 1 396 0
 474 001a FB1C     		add	r3, r7, #3
 475 001c 1B78     		ldrb	r3, [r3]
 476 001e 012B     		cmp	r3, #1
 477 0020 01D9     		bls	.L27
 397:../Generated_Code/TU2.c ****     return ERR_PARAM_INDEX;            /* If yes then error */
 478              		.loc 1 397 0
 479 0022 8223     		mov	r3, #130
 480 0024 06E1     		b	.L28
 481              	.L27:
 398:../Generated_Code/TU2.c ****   }
 399:../Generated_Code/TU2.c ****   if ((ChannelMode[ChannelIdx]) != 0U) { /* Is the channel in compare mode? */
 482              		.loc 1 399 0
 483 0026 FB1C     		add	r3, r7, #3
 484 0028 1B78     		ldrb	r3, [r3]
 485 002a 844A     		ldr	r2, .L45
 486 002c D35C     		ldrb	r3, [r2, r3]
 487 002e 002B     		cmp	r3, #0
 488 0030 01D0     		beq	.L29
 400:../Generated_Code/TU2.c ****     return ERR_NOTAVAIL;               /* If not then error */
 489              		.loc 1 400 0
 490 0032 0923     		mov	r3, #9
 491 0034 FEE0     		b	.L28
 492              	.L29:
 401:../Generated_Code/TU2.c ****   }
 402:../Generated_Code/TU2.c ****   switch (CounterAction) {
 493              		.loc 1 402 0
 494 0036 7B1C     		add	r3, r7, #1
 495 0038 1B78     		ldrb	r3, [r3]
 496 003a 022B     		cmp	r3, #2
 497 003c 00D1     		bne	.LCB429
 498 003e 8CE0     		b	.L32	@long jump
 499              	.LCB429:
 500 0040 032B     		cmp	r3, #3
 501 0042 00D1     		bne	.LCB431
 502 0044 BEE0     		b	.L33	@long jump
 503              	.LCB431:
 504 0046 002B     		cmp	r3, #0
 505 0048 00D0     		beq	.LCB433
 506 004a F0E0     		b	.L44	@long jump
 507              	.LCB433:
 508              	.L31:
 403:../Generated_Code/TU2.c ****     case OUTPUT_NONE:
 404:../Generated_Code/TU2.c ****       TPM_PDD_SelectChannelMode(TPM2_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_OUTPUT_TOGGLE);
 509              		.loc 1 404 0
 510 004c 7C49     		ldr	r1, .L45+4
 511 004e FB1C     		add	r3, r7, #3
 512 0050 1B78     		ldrb	r3, [r3]
 513 0052 7C4A     		ldr	r2, .L45+8
 514 0054 D35C     		ldrb	r3, [r2, r3]
 515 0056 181C     		mov	r0, r3
 516 0058 794A     		ldr	r2, .L45+4
 517 005a FB1C     		add	r3, r7, #3
 518 005c 1B78     		ldrb	r3, [r3]
 519 005e 794C     		ldr	r4, .L45+8
 520 0060 E35C     		ldrb	r3, [r4, r3]
 521 0062 0133     		add	r3, r3, #1
 522 0064 DB00     		lsl	r3, r3, #3
 523 0066 D318     		add	r3, r2, r3
 524 0068 5B68     		ldr	r3, [r3, #4]
 525 006a B022     		mov	r2, #176
 526 006c 9343     		bic	r3, r2
 527 006e 1022     		mov	r2, #16
 528 0070 1A43     		orr	r2, r3
 529 0072 431C     		add	r3, r0, #1
 530 0074 DB00     		lsl	r3, r3, #3
 531 0076 CB18     		add	r3, r1, r3
 532 0078 5A60     		str	r2, [r3, #4]
 405:../Generated_Code/TU2.c ****       switch (CompareAction) {
 533              		.loc 1 405 0
 534 007a BB1C     		add	r3, r7, #2
 535 007c 1B78     		ldrb	r3, [r3]
 536 007e 012B     		cmp	r3, #1
 537 0080 20D0     		beq	.L36
 538 0082 02DC     		bgt	.L39
 539 0084 002B     		cmp	r3, #0
 540 0086 05D0     		beq	.L35
 541 0088 64E0     		b	.L34
 542              	.L39:
 543 008a 022B     		cmp	r3, #2
 544 008c 32D0     		beq	.L37
 545 008e 032B     		cmp	r3, #3
 546 0090 48D0     		beq	.L38
 547 0092 5FE0     		b	.L34
 548              	.L35:
 406:../Generated_Code/TU2.c ****         case OUTPUT_NONE:
 407:../Generated_Code/TU2.c ****           TPM_PDD_SelectChannelEdgeLevel(TPM2_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_NON
 549              		.loc 1 407 0
 550 0094 6A49     		ldr	r1, .L45+4
 551 0096 FB1C     		add	r3, r7, #3
 552 0098 1B78     		ldrb	r3, [r3]
 553 009a 6A4A     		ldr	r2, .L45+8
 554 009c D35C     		ldrb	r3, [r2, r3]
 555 009e 181C     		mov	r0, r3
 556 00a0 674A     		ldr	r2, .L45+4
 557 00a2 FB1C     		add	r3, r7, #3
 558 00a4 1B78     		ldrb	r3, [r3]
 559 00a6 674C     		ldr	r4, .L45+8
 560 00a8 E35C     		ldrb	r3, [r4, r3]
 561 00aa 0133     		add	r3, r3, #1
 562 00ac DB00     		lsl	r3, r3, #3
 563 00ae D318     		add	r3, r2, r3
 564 00b0 5B68     		ldr	r3, [r3, #4]
 565 00b2 8C22     		mov	r2, #140
 566 00b4 1C1C     		mov	r4, r3
 567 00b6 9443     		bic	r4, r2
 568 00b8 221C     		mov	r2, r4
 569 00ba 431C     		add	r3, r0, #1
 570 00bc DB00     		lsl	r3, r3, #3
 571 00be CB18     		add	r3, r1, r3
 572 00c0 5A60     		str	r2, [r3, #4]
 408:../Generated_Code/TU2.c ****           break;
 573              		.loc 1 408 0
 574 00c2 49E0     		b	.L40
 575              	.L36:
 409:../Generated_Code/TU2.c ****         case OUTPUT_TOGGLE:
 410:../Generated_Code/TU2.c ****           TPM_PDD_SelectChannelEdgeLevel(TPM2_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_RIS
 576              		.loc 1 410 0
 577 00c4 5E49     		ldr	r1, .L45+4
 578 00c6 FB1C     		add	r3, r7, #3
 579 00c8 1B78     		ldrb	r3, [r3]
 580 00ca 5E4A     		ldr	r2, .L45+8
 581 00cc D35C     		ldrb	r3, [r2, r3]
 582 00ce 181C     		mov	r0, r3
 583 00d0 5B4A     		ldr	r2, .L45+4
 584 00d2 FB1C     		add	r3, r7, #3
 585 00d4 1B78     		ldrb	r3, [r3]
 586 00d6 5B4C     		ldr	r4, .L45+8
 587 00d8 E35C     		ldrb	r3, [r4, r3]
 588 00da 0133     		add	r3, r3, #1
 589 00dc DB00     		lsl	r3, r3, #3
 590 00de D318     		add	r3, r2, r3
 591 00e0 5B68     		ldr	r3, [r3, #4]
 592 00e2 8C22     		mov	r2, #140
 593 00e4 9343     		bic	r3, r2
 594 00e6 0422     		mov	r2, #4
 595 00e8 1A43     		orr	r2, r3
 596 00ea 431C     		add	r3, r0, #1
 597 00ec DB00     		lsl	r3, r3, #3
 598 00ee CB18     		add	r3, r1, r3
 599 00f0 5A60     		str	r2, [r3, #4]
 411:../Generated_Code/TU2.c ****           break;
 600              		.loc 1 411 0
 601 00f2 31E0     		b	.L40
 602              	.L37:
 412:../Generated_Code/TU2.c ****         case OUTPUT_CLEAR:
 413:../Generated_Code/TU2.c ****           TPM_PDD_SelectChannelEdgeLevel(TPM2_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_FAL
 603              		.loc 1 413 0
 604 00f4 5249     		ldr	r1, .L45+4
 605 00f6 FB1C     		add	r3, r7, #3
 606 00f8 1B78     		ldrb	r3, [r3]
 607 00fa 524A     		ldr	r2, .L45+8
 608 00fc D35C     		ldrb	r3, [r2, r3]
 609 00fe 181C     		mov	r0, r3
 610 0100 4F4A     		ldr	r2, .L45+4
 611 0102 FB1C     		add	r3, r7, #3
 612 0104 1B78     		ldrb	r3, [r3]
 613 0106 4F4C     		ldr	r4, .L45+8
 614 0108 E35C     		ldrb	r3, [r4, r3]
 615 010a 0133     		add	r3, r3, #1
 616 010c DB00     		lsl	r3, r3, #3
 617 010e D318     		add	r3, r2, r3
 618 0110 5B68     		ldr	r3, [r3, #4]
 619 0112 8C22     		mov	r2, #140
 620 0114 9343     		bic	r3, r2
 621 0116 0822     		mov	r2, #8
 622 0118 1A43     		orr	r2, r3
 623 011a 431C     		add	r3, r0, #1
 624 011c DB00     		lsl	r3, r3, #3
 625 011e CB18     		add	r3, r1, r3
 626 0120 5A60     		str	r2, [r3, #4]
 414:../Generated_Code/TU2.c ****           break;
 627              		.loc 1 414 0
 628 0122 19E0     		b	.L40
 629              	.L38:
 415:../Generated_Code/TU2.c ****         case OUTPUT_SET:
 416:../Generated_Code/TU2.c ****           TPM_PDD_SelectChannelEdgeLevel(TPM2_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_BOT
 630              		.loc 1 416 0
 631 0124 4649     		ldr	r1, .L45+4
 632 0126 FB1C     		add	r3, r7, #3
 633 0128 1B78     		ldrb	r3, [r3]
 634 012a 464A     		ldr	r2, .L45+8
 635 012c D35C     		ldrb	r3, [r2, r3]
 636 012e 181C     		mov	r0, r3
 637 0130 434A     		ldr	r2, .L45+4
 638 0132 FB1C     		add	r3, r7, #3
 639 0134 1B78     		ldrb	r3, [r3]
 640 0136 434C     		ldr	r4, .L45+8
 641 0138 E35C     		ldrb	r3, [r4, r3]
 642 013a 0133     		add	r3, r3, #1
 643 013c DB00     		lsl	r3, r3, #3
 644 013e D318     		add	r3, r2, r3
 645 0140 5B68     		ldr	r3, [r3, #4]
 646 0142 8C22     		mov	r2, #140
 647 0144 9343     		bic	r3, r2
 648 0146 0C22     		mov	r2, #12
 649 0148 1A43     		orr	r2, r3
 650 014a 431C     		add	r3, r0, #1
 651 014c DB00     		lsl	r3, r3, #3
 652 014e CB18     		add	r3, r1, r3
 653 0150 5A60     		str	r2, [r3, #4]
 417:../Generated_Code/TU2.c ****           break;
 654              		.loc 1 417 0
 655 0152 01E0     		b	.L40
 656              	.L34:
 418:../Generated_Code/TU2.c ****         default:
 419:../Generated_Code/TU2.c ****           return ERR_NOTAVAIL;
 657              		.loc 1 419 0
 658 0154 0923     		mov	r3, #9
 659 0156 6DE0     		b	.L28
 660              	.L40:
 420:../Generated_Code/TU2.c ****       }
 421:../Generated_Code/TU2.c ****       break;
 661              		.loc 1 421 0
 662 0158 6BE0     		b	.L41
 663              	.L32:
 422:../Generated_Code/TU2.c ****     case OUTPUT_CLEAR:
 423:../Generated_Code/TU2.c ****       if (CompareAction != OUTPUT_SET) {
 664              		.loc 1 423 0
 665 015a BB1C     		add	r3, r7, #2
 666 015c 1B78     		ldrb	r3, [r3]
 667 015e 032B     		cmp	r3, #3
 668 0160 01D0     		beq	.L42
 424:../Generated_Code/TU2.c ****         return ERR_NOTAVAIL;
 669              		.loc 1 424 0
 670 0162 0923     		mov	r3, #9
 671 0164 66E0     		b	.L28
 672              	.L42:
 425:../Generated_Code/TU2.c ****       }
 426:../Generated_Code/TU2.c ****       TPM_PDD_SelectChannelMode(TPM2_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_OUTPUT_CLEAR);
 673              		.loc 1 426 0
 674 0166 3649     		ldr	r1, .L45+4
 675 0168 FB1C     		add	r3, r7, #3
 676 016a 1B78     		ldrb	r3, [r3]
 677 016c 354A     		ldr	r2, .L45+8
 678 016e D35C     		ldrb	r3, [r2, r3]
 679 0170 181C     		mov	r0, r3
 680 0172 334A     		ldr	r2, .L45+4
 681 0174 FB1C     		add	r3, r7, #3
 682 0176 1B78     		ldrb	r3, [r3]
 683 0178 324C     		ldr	r4, .L45+8
 684 017a E35C     		ldrb	r3, [r4, r3]
 685 017c 0133     		add	r3, r3, #1
 686 017e DB00     		lsl	r3, r3, #3
 687 0180 D318     		add	r3, r2, r3
 688 0182 5B68     		ldr	r3, [r3, #4]
 689 0184 B022     		mov	r2, #176
 690 0186 9343     		bic	r3, r2
 691 0188 2022     		mov	r2, #32
 692 018a 1A43     		orr	r2, r3
 693 018c 431C     		add	r3, r0, #1
 694 018e DB00     		lsl	r3, r3, #3
 695 0190 CB18     		add	r3, r1, r3
 696 0192 5A60     		str	r2, [r3, #4]
 427:../Generated_Code/TU2.c ****       TPM_PDD_SelectChannelEdgeLevel(TPM2_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_BOTH);
 697              		.loc 1 427 0
 698 0194 2A49     		ldr	r1, .L45+4
 699 0196 FB1C     		add	r3, r7, #3
 700 0198 1B78     		ldrb	r3, [r3]
 701 019a 2A4A     		ldr	r2, .L45+8
 702 019c D35C     		ldrb	r3, [r2, r3]
 703 019e 181C     		mov	r0, r3
 704 01a0 274A     		ldr	r2, .L45+4
 705 01a2 FB1C     		add	r3, r7, #3
 706 01a4 1B78     		ldrb	r3, [r3]
 707 01a6 274C     		ldr	r4, .L45+8
 708 01a8 E35C     		ldrb	r3, [r4, r3]
 709 01aa 0133     		add	r3, r3, #1
 710 01ac DB00     		lsl	r3, r3, #3
 711 01ae D318     		add	r3, r2, r3
 712 01b0 5B68     		ldr	r3, [r3, #4]
 713 01b2 8C22     		mov	r2, #140
 714 01b4 9343     		bic	r3, r2
 715 01b6 0C22     		mov	r2, #12
 716 01b8 1A43     		orr	r2, r3
 717 01ba 431C     		add	r3, r0, #1
 718 01bc DB00     		lsl	r3, r3, #3
 719 01be CB18     		add	r3, r1, r3
 720 01c0 5A60     		str	r2, [r3, #4]
 428:../Generated_Code/TU2.c ****       break;
 721              		.loc 1 428 0
 722 01c2 36E0     		b	.L41
 723              	.L33:
 429:../Generated_Code/TU2.c ****     case OUTPUT_SET:
 430:../Generated_Code/TU2.c ****       if (CompareAction != OUTPUT_CLEAR) {
 724              		.loc 1 430 0
 725 01c4 BB1C     		add	r3, r7, #2
 726 01c6 1B78     		ldrb	r3, [r3]
 727 01c8 022B     		cmp	r3, #2
 728 01ca 01D0     		beq	.L43
 431:../Generated_Code/TU2.c ****         return ERR_NOTAVAIL;
 729              		.loc 1 431 0
 730 01cc 0923     		mov	r3, #9
 731 01ce 31E0     		b	.L28
 732              	.L43:
 432:../Generated_Code/TU2.c ****       }
 433:../Generated_Code/TU2.c ****       TPM_PDD_SelectChannelMode(TPM2_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_OUTPUT_SET);
 733              		.loc 1 433 0
 734 01d0 1B49     		ldr	r1, .L45+4
 735 01d2 FB1C     		add	r3, r7, #3
 736 01d4 1B78     		ldrb	r3, [r3]
 737 01d6 1B4A     		ldr	r2, .L45+8
 738 01d8 D35C     		ldrb	r3, [r2, r3]
 739 01da 181C     		mov	r0, r3
 740 01dc 184A     		ldr	r2, .L45+4
 741 01de FB1C     		add	r3, r7, #3
 742 01e0 1B78     		ldrb	r3, [r3]
 743 01e2 184C     		ldr	r4, .L45+8
 744 01e4 E35C     		ldrb	r3, [r4, r3]
 745 01e6 0133     		add	r3, r3, #1
 746 01e8 DB00     		lsl	r3, r3, #3
 747 01ea D318     		add	r3, r2, r3
 748 01ec 5B68     		ldr	r3, [r3, #4]
 749 01ee B022     		mov	r2, #176
 750 01f0 9343     		bic	r3, r2
 751 01f2 3022     		mov	r2, #48
 752 01f4 1A43     		orr	r2, r3
 753 01f6 431C     		add	r3, r0, #1
 754 01f8 DB00     		lsl	r3, r3, #3
 755 01fa CB18     		add	r3, r1, r3
 756 01fc 5A60     		str	r2, [r3, #4]
 434:../Generated_Code/TU2.c ****       TPM_PDD_SelectChannelEdgeLevel(TPM2_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_FALLING
 757              		.loc 1 434 0
 758 01fe 1049     		ldr	r1, .L45+4
 759 0200 FB1C     		add	r3, r7, #3
 760 0202 1B78     		ldrb	r3, [r3]
 761 0204 0F4A     		ldr	r2, .L45+8
 762 0206 D35C     		ldrb	r3, [r2, r3]
 763 0208 181C     		mov	r0, r3
 764 020a 0D4A     		ldr	r2, .L45+4
 765 020c FB1C     		add	r3, r7, #3
 766 020e 1B78     		ldrb	r3, [r3]
 767 0210 0C4C     		ldr	r4, .L45+8
 768 0212 E35C     		ldrb	r3, [r4, r3]
 769 0214 0133     		add	r3, r3, #1
 770 0216 DB00     		lsl	r3, r3, #3
 771 0218 D318     		add	r3, r2, r3
 772 021a 5B68     		ldr	r3, [r3, #4]
 773 021c 8C22     		mov	r2, #140
 774 021e 9343     		bic	r3, r2
 775 0220 0822     		mov	r2, #8
 776 0222 1A43     		orr	r2, r3
 777 0224 431C     		add	r3, r0, #1
 778 0226 DB00     		lsl	r3, r3, #3
 779 0228 CB18     		add	r3, r1, r3
 780 022a 5A60     		str	r2, [r3, #4]
 435:../Generated_Code/TU2.c ****       break;
 781              		.loc 1 435 0
 782 022c 01E0     		b	.L41
 783              	.L44:
 436:../Generated_Code/TU2.c ****     default:
 437:../Generated_Code/TU2.c ****       return ERR_NOTAVAIL;
 784              		.loc 1 437 0
 785 022e 0923     		mov	r3, #9
 786 0230 00E0     		b	.L28
 787              	.L41:
 438:../Generated_Code/TU2.c ****   }
 439:../Generated_Code/TU2.c ****   return ERR_OK;                       /* OK */
 788              		.loc 1 439 0
 789 0232 0023     		mov	r3, #0
 790              	.L28:
 440:../Generated_Code/TU2.c **** }
 791              		.loc 1 440 0
 792 0234 181C     		mov	r0, r3
 793 0236 BD46     		mov	sp, r7
 794 0238 03B0     		add	sp, sp, #12
 795              		@ sp needed for prologue
 796 023a 90BD     		pop	{r4, r7, pc}
 797              	.L46:
 798              		.align	2
 799              	.L45:
 800 023c 00000000 		.word	_ZL11ChannelMode
 801 0240 00A00340 		.word	1073979392
 802 0244 00000000 		.word	_ZL13ChannelDevice
 803              		.cfi_endproc
 804              	.LFE5:
 806              		.section	.rodata._ZL13ChannelDevice,"a",%progbits
 807              		.align	2
 810              	_ZL13ChannelDevice:
 811 0000 00       		.byte	0
 812 0001 01       		.byte	1
 813 0002 0000     		.section	.rodata._ZL11ChannelMode,"a",%progbits
 814              		.align	2
 817              	_ZL11ChannelMode:
 818 0000 0000     		.space	2
 819 0002 0000     		.text
 820              	.Letext0:
 821              		.file 2 "C:/Freescale/CW MCU v10.5/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 822              		.file 3 "../Generated_Code/PE_Types.h"
 823              		.file 4 "../Generated_Code/IO_Map.h"
 824              		.file 5 "../Generated_Code/TU2.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TU2.c
C:\Users\JH\AppData\Local\Temp\ccSQbx67.s:18     .bss._ZL33DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 $d
C:\Users\JH\AppData\Local\Temp\ccSQbx67.s:21     .bss._ZL33DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 _ZL33DeviceDataPrv__DEFAULT_RTOS_ALLOC
C:\Users\JH\AppData\Local\Temp\ccSQbx67.s:24     .text.TU2_Init:00000000 $t
C:\Users\JH\AppData\Local\Temp\ccSQbx67.s:29     .text.TU2_Init:00000000 TU2_Init
C:\Users\JH\AppData\Local\Temp\ccSQbx67.s:175    .text.TU2_Init:000000c0 $d
C:\Users\JH\AppData\Local\Temp\ccSQbx67.s:187    .text.TU2_GetPeriodTicks:00000000 $t
C:\Users\JH\AppData\Local\Temp\ccSQbx67.s:192    .text.TU2_GetPeriodTicks:00000000 TU2_GetPeriodTicks
C:\Users\JH\AppData\Local\Temp\ccSQbx67.s:241    .text.TU2_GetPeriodTicks:00000038 $d
C:\Users\JH\AppData\Local\Temp\ccSQbx67.s:246    .text.TU2_GetCounterValue:00000000 $t
C:\Users\JH\AppData\Local\Temp\ccSQbx67.s:251    .text.TU2_GetCounterValue:00000000 TU2_GetCounterValue
C:\Users\JH\AppData\Local\Temp\ccSQbx67.s:280    .text.TU2_GetCounterValue:00000018 $d
C:\Users\JH\AppData\Local\Temp\ccSQbx67.s:285    .text.TU2_SetOffsetTicks:00000000 $t
C:\Users\JH\AppData\Local\Temp\ccSQbx67.s:290    .text.TU2_SetOffsetTicks:00000000 TU2_SetOffsetTicks
C:\Users\JH\AppData\Local\Temp\ccSQbx67.s:354    .text.TU2_SetOffsetTicks:0000004c $d
C:\Users\JH\AppData\Local\Temp\ccSQbx67.s:817    .rodata._ZL11ChannelMode:00000000 _ZL11ChannelMode
C:\Users\JH\AppData\Local\Temp\ccSQbx67.s:810    .rodata._ZL13ChannelDevice:00000000 _ZL13ChannelDevice
C:\Users\JH\AppData\Local\Temp\ccSQbx67.s:361    .text.TU2_GetOffsetTicks:00000000 $t
C:\Users\JH\AppData\Local\Temp\ccSQbx67.s:366    .text.TU2_GetOffsetTicks:00000000 TU2_GetOffsetTicks
C:\Users\JH\AppData\Local\Temp\ccSQbx67.s:435    .text.TU2_GetOffsetTicks:00000058 $d
C:\Users\JH\AppData\Local\Temp\ccSQbx67.s:442    .text.TU2_SelectOutputAction:00000000 $t
C:\Users\JH\AppData\Local\Temp\ccSQbx67.s:447    .text.TU2_SelectOutputAction:00000000 TU2_SelectOutputAction
C:\Users\JH\AppData\Local\Temp\ccSQbx67.s:800    .text.TU2_SelectOutputAction:0000023c $d
C:\Users\JH\AppData\Local\Temp\ccSQbx67.s:807    .rodata._ZL13ChannelDevice:00000000 $d
C:\Users\JH\AppData\Local\Temp\ccSQbx67.s:814    .rodata._ZL11ChannelMode:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PE_LDD_DeviceDataList
