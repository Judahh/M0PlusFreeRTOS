   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"GI2C0.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss._ZL16GI2C0_deviceData,"aw",%nobits
  18              		.align	2
  21              	_ZL16GI2C0_deviceData:
  22 0000 00000000 		.space	8
  22      00000000 
  23              		.section	.bss._ZL12GI2C0_busSem,"aw",%nobits
  24              		.align	2
  27              	_ZL12GI2C0_busSem:
  28 0000 00000000 		.space	4
  29              		.section	.text._Z16GI2C0_RequestBusv,"ax",%progbits
  30              		.align	2
  31              		.global	_Z16GI2C0_RequestBusv
  32              		.code	16
  33              		.thumb_func
  35              	_Z16GI2C0_RequestBusv:
  36              	.LFB5:
  37              		.file 1 "../Generated_Code/GI2C0.c"
   1:../Generated_Code/GI2C0.c **** /* ###################################################################
   2:../Generated_Code/GI2C0.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/GI2C0.c **** **     Filename    : GI2C0.c
   4:../Generated_Code/GI2C0.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/GI2C0.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/GI2C0.c **** **     Component   : GenericI2C
   7:../Generated_Code/GI2C0.c **** **     Version     : Component 01.020, Driver 01.00, CPU db: 3.00.000
   8:../Generated_Code/GI2C0.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/GI2C0.c **** **     Date/Time   : 2014-04-05, 15:28, # CodeGen: 4
  10:../Generated_Code/GI2C0.c **** **     Abstract    :
  11:../Generated_Code/GI2C0.c **** **         This component implements a generic I2C driver wrapper to work both with LDD and non-LDD
  12:../Generated_Code/GI2C0.c **** **     Settings    :
  13:../Generated_Code/GI2C0.c **** **          Component name                                 : GI2C0
  14:../Generated_Code/GI2C0.c **** **          Wait                                           : WAIT0
  15:../Generated_Code/GI2C0.c **** **          Support STOP_NOSTART                           : no
  16:../Generated_Code/GI2C0.c **** **          Write Buffer Size                              : 16
  17:../Generated_Code/GI2C0.c **** **          non-LDD I2C                                    : Disabled
  18:../Generated_Code/GI2C0.c **** **          LDD I2C                                        : Enabled
  19:../Generated_Code/GI2C0.c **** **            I2C                                          : I2C0
  20:../Generated_Code/GI2C0.c **** **            Timeout                                      : Disabled
  21:../Generated_Code/GI2C0.c **** **          RTOS                                           : Enabled
  22:../Generated_Code/GI2C0.c **** **            RTOS                                         : FreeRTOS0
  23:../Generated_Code/GI2C0.c **** **            Semaphore                                    : yes
  24:../Generated_Code/GI2C0.c **** **          Init() on startup                              : yes
  25:../Generated_Code/GI2C0.c **** **     Contents    :
  26:../Generated_Code/GI2C0.c **** **         SelectSlave       - byte GI2C0_SelectSlave(byte i2cAddr);
  27:../Generated_Code/GI2C0.c **** **         UnselectSlave     - byte GI2C0_UnselectSlave(void);
  28:../Generated_Code/GI2C0.c **** **         RequestBus        - void GI2C0_RequestBus(void);
  29:../Generated_Code/GI2C0.c **** **         ReleaseBus        - void GI2C0_ReleaseBus(void);
  30:../Generated_Code/GI2C0.c **** **         ReadBlock         - byte GI2C0_ReadBlock(void* data, word dataSize, GI2C0_EnumSendFlags 
  31:../Generated_Code/GI2C0.c **** **         WriteBlock        - byte GI2C0_WriteBlock(void* data, word dataSize, GI2C0_EnumSendFlags
  32:../Generated_Code/GI2C0.c **** **         ReadAddress       - byte GI2C0_ReadAddress(byte i2cAddr, byte *memAddr, byte memAddrSize
  33:../Generated_Code/GI2C0.c **** **         WriteAddress      - byte GI2C0_WriteAddress(byte i2cAddr, byte *memAddr, byte memAddrSiz
  34:../Generated_Code/GI2C0.c **** **         ReadByteAddress8  - byte GI2C0_ReadByteAddress8(byte i2cAddr, byte memAddr, byte *data);
  35:../Generated_Code/GI2C0.c **** **         WriteByteAddress8 - byte GI2C0_WriteByteAddress8(byte i2cAddr, byte memAddr, byte data);
  36:../Generated_Code/GI2C0.c **** **         ProbeACK          - byte GI2C0_ProbeACK(void* data, word dataSize, GI2C0_EnumSendFlags f
  37:../Generated_Code/GI2C0.c **** **         GetSemaphore      - void* GI2C0_GetSemaphore(void);
  38:../Generated_Code/GI2C0.c **** **         Deinit            - void GI2C0_Deinit(void);
  39:../Generated_Code/GI2C0.c **** **         ScanDevice        - byte GI2C0_ScanDevice(byte i2cAddr);
  40:../Generated_Code/GI2C0.c **** **         Init              - void GI2C0_Init(void);
  41:../Generated_Code/GI2C0.c **** **
  42:../Generated_Code/GI2C0.c **** **     License   :  Open Source (LGPL)
  43:../Generated_Code/GI2C0.c **** **     Copyright : (c) Copyright Erich Styger, 2013-2014, all rights reserved.
  44:../Generated_Code/GI2C0.c **** **     http          : www.mcuoneclipse.com
  45:../Generated_Code/GI2C0.c **** **     This an open source software implementing software using Processor Expert.
  46:../Generated_Code/GI2C0.c **** **     This is a free software and is opened for education,  research  and commercial developments 
  47:../Generated_Code/GI2C0.c **** **     * This is a free software and there is NO WARRANTY.
  48:../Generated_Code/GI2C0.c **** **     * No restriction on use. You can use, modify and redistribute it for personal, non-profit or
  49:../Generated_Code/GI2C0.c **** **     * Redistributions of source code must retain the above copyright notice.
  50:../Generated_Code/GI2C0.c **** ** ###################################################################*/
  51:../Generated_Code/GI2C0.c **** /*!
  52:../Generated_Code/GI2C0.c **** ** @file GI2C0.c
  53:../Generated_Code/GI2C0.c **** ** @version 01.00
  54:../Generated_Code/GI2C0.c **** ** @brief
  55:../Generated_Code/GI2C0.c **** **         This component implements a generic I2C driver wrapper to work both with LDD and non-LDD
  56:../Generated_Code/GI2C0.c **** */         
  57:../Generated_Code/GI2C0.c **** /*!
  58:../Generated_Code/GI2C0.c **** **  @addtogroup GI2C0_module GI2C0 module documentation
  59:../Generated_Code/GI2C0.c **** **  @{
  60:../Generated_Code/GI2C0.c **** */         
  61:../Generated_Code/GI2C0.c **** 
  62:../Generated_Code/GI2C0.c **** /* MODULE GI2C0. */
  63:../Generated_Code/GI2C0.c **** 
  64:../Generated_Code/GI2C0.c **** #include "GI2C0.h"
  65:../Generated_Code/GI2C0.c **** #ifndef NULL
  66:../Generated_Code/GI2C0.c ****   #define NULL 0L
  67:../Generated_Code/GI2C0.c **** #endif /* NULL */
  68:../Generated_Code/GI2C0.c **** 
  69:../Generated_Code/GI2C0.c **** typedef struct {
  70:../Generated_Code/GI2C0.c ****   volatile bool dataReceivedFlg; /* set to TRUE by the interrupt if we have received data */
  71:../Generated_Code/GI2C0.c ****   volatile bool dataTransmittedFlg; /* set to TRUE by the interrupt if we have set data */
  72:../Generated_Code/GI2C0.c ****   LDD_TDeviceData *handle; /* pointer to the device handle */
  73:../Generated_Code/GI2C0.c **** } GI2C0_TDataState;
  74:../Generated_Code/GI2C0.c **** 
  75:../Generated_Code/GI2C0.c **** static GI2C0_TDataState GI2C0_deviceData;
  76:../Generated_Code/GI2C0.c **** 
  77:../Generated_Code/GI2C0.c **** static xSemaphoreHandle GI2C0_busSem = NULL; /* Semaphore to protect I2C bus access */
  78:../Generated_Code/GI2C0.c **** /*
  79:../Generated_Code/GI2C0.c **** ** ===================================================================
  80:../Generated_Code/GI2C0.c **** **     Method      :  GI2C0_RequestBus (component GenericI2C)
  81:../Generated_Code/GI2C0.c **** **     Description :
  82:../Generated_Code/GI2C0.c **** **         Starts a critical section for accessing the bus.
  83:../Generated_Code/GI2C0.c **** **     Parameters  : None
  84:../Generated_Code/GI2C0.c **** **     Returns     : Nothing
  85:../Generated_Code/GI2C0.c **** ** ===================================================================
  86:../Generated_Code/GI2C0.c **** */
  87:../Generated_Code/GI2C0.c **** void GI2C0_RequestBus(void)
  88:../Generated_Code/GI2C0.c **** {
  38              		.loc 1 88 0
  39              		.cfi_startproc
  40 0000 80B5     		push	{r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 00AF     		add	r7, sp, #0
  46              	.LCFI1:
  47              		.cfi_def_cfa_register 7
  89:../Generated_Code/GI2C0.c ****   (void)FreeRTOS0_xSemaphoreTakeRecursive(GI2C0_busSem, portMAX_DELAY);
  48              		.loc 1 89 0
  49 0004 044B     		ldr	r3, .L2
  50 0006 1A68     		ldr	r2, [r3]
  51 0008 0123     		mov	r3, #1
  52 000a 5B42     		neg	r3, r3
  53 000c 101C     		mov	r0, r2
  54 000e 191C     		mov	r1, r3
  55 0010 FFF7FEFF 		bl	xQueueTakeMutexRecursive
  90:../Generated_Code/GI2C0.c **** }
  56              		.loc 1 90 0
  57 0014 BD46     		mov	sp, r7
  58              		@ sp needed for prologue
  59 0016 80BD     		pop	{r7, pc}
  60              	.L3:
  61              		.align	2
  62              	.L2:
  63 0018 00000000 		.word	_ZL12GI2C0_busSem
  64              		.cfi_endproc
  65              	.LFE5:
  67              		.section	.text._Z16GI2C0_ReleaseBusv,"ax",%progbits
  68              		.align	2
  69              		.global	_Z16GI2C0_ReleaseBusv
  70              		.code	16
  71              		.thumb_func
  73              	_Z16GI2C0_ReleaseBusv:
  74              	.LFB6:
  91:../Generated_Code/GI2C0.c **** 
  92:../Generated_Code/GI2C0.c **** /*
  93:../Generated_Code/GI2C0.c **** ** ===================================================================
  94:../Generated_Code/GI2C0.c **** **     Method      :  GI2C0_ReleaseBus (component GenericI2C)
  95:../Generated_Code/GI2C0.c **** **     Description :
  96:../Generated_Code/GI2C0.c **** **         Finishes a critical section for accessing the bus.
  97:../Generated_Code/GI2C0.c **** **     Parameters  : None
  98:../Generated_Code/GI2C0.c **** **     Returns     : Nothing
  99:../Generated_Code/GI2C0.c **** ** ===================================================================
 100:../Generated_Code/GI2C0.c **** */
 101:../Generated_Code/GI2C0.c **** void GI2C0_ReleaseBus(void)
 102:../Generated_Code/GI2C0.c **** {
  75              		.loc 1 102 0
  76              		.cfi_startproc
  77 0000 80B5     		push	{r7, lr}
  78              	.LCFI2:
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 7, -8
  81              		.cfi_offset 14, -4
  82 0002 00AF     		add	r7, sp, #0
  83              	.LCFI3:
  84              		.cfi_def_cfa_register 7
 103:../Generated_Code/GI2C0.c ****   (void)FreeRTOS0_xSemaphoreGiveRecursive(GI2C0_busSem);
  85              		.loc 1 103 0
  86 0004 034B     		ldr	r3, .L5
  87 0006 1B68     		ldr	r3, [r3]
  88 0008 181C     		mov	r0, r3
  89 000a FFF7FEFF 		bl	xQueueGiveMutexRecursive
 104:../Generated_Code/GI2C0.c **** }
  90              		.loc 1 104 0
  91 000e BD46     		mov	sp, r7
  92              		@ sp needed for prologue
  93 0010 80BD     		pop	{r7, pc}
  94              	.L6:
  95 0012 C046     		.align	2
  96              	.L5:
  97 0014 00000000 		.word	_ZL12GI2C0_busSem
  98              		.cfi_endproc
  99              	.LFE6:
 101              		.section	.text._Z17GI2C0_SelectSlaveh,"ax",%progbits
 102              		.align	2
 103              		.global	_Z17GI2C0_SelectSlaveh
 104              		.code	16
 105              		.thumb_func
 107              	_Z17GI2C0_SelectSlaveh:
 108              	.LFB7:
 105:../Generated_Code/GI2C0.c **** 
 106:../Generated_Code/GI2C0.c **** /*
 107:../Generated_Code/GI2C0.c **** ** ===================================================================
 108:../Generated_Code/GI2C0.c **** **     Method      :  GI2C0_SelectSlave (component GenericI2C)
 109:../Generated_Code/GI2C0.c **** **     Description :
 110:../Generated_Code/GI2C0.c **** **         Selects the slave device on the bus. Method might use a
 111:../Generated_Code/GI2C0.c **** **         semaphore to protect bus access.
 112:../Generated_Code/GI2C0.c **** **     Parameters  :
 113:../Generated_Code/GI2C0.c **** **         NAME            - DESCRIPTION
 114:../Generated_Code/GI2C0.c **** **         i2cAddr         - I2C Address of device
 115:../Generated_Code/GI2C0.c **** **     Returns     :
 116:../Generated_Code/GI2C0.c **** **         ---             - Error code
 117:../Generated_Code/GI2C0.c **** ** ===================================================================
 118:../Generated_Code/GI2C0.c **** */
 119:../Generated_Code/GI2C0.c **** byte GI2C0_SelectSlave(byte i2cAddr)
 120:../Generated_Code/GI2C0.c **** {
 109              		.loc 1 120 0
 110              		.cfi_startproc
 111 0000 80B5     		push	{r7, lr}
 112              	.LCFI4:
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 7, -8
 115              		.cfi_offset 14, -4
 116 0002 82B0     		sub	sp, sp, #8
 117              	.LCFI5:
 118              		.cfi_def_cfa_offset 16
 119 0004 00AF     		add	r7, sp, #0
 120              	.LCFI6:
 121              		.cfi_def_cfa_register 7
 122 0006 021C     		mov	r2, r0
 123 0008 FB1D     		add	r3, r7, #7
 124 000a 1A70     		strb	r2, [r3]
 121:../Generated_Code/GI2C0.c ****   GI2C0_RequestBus();
 125              		.loc 1 121 0
 126 000c FFF7FEFF 		bl	_Z16GI2C0_RequestBusv
 122:../Generated_Code/GI2C0.c ****   if (I2C0_SelectSlaveDevice(GI2C0_deviceData.handle, LDD_I2C_ADDRTYPE_7BITS, i2cAddr)!=ERR_OK) {
 127              		.loc 1 122 0
 128 0010 0C4B     		ldr	r3, .L10
 129 0012 5A68     		ldr	r2, [r3, #4]
 130 0014 FB1D     		add	r3, r7, #7
 131 0016 1B78     		ldrb	r3, [r3]
 132 0018 9BB2     		uxth	r3, r3
 133 001a 101C     		mov	r0, r2
 134 001c 0021     		mov	r1, #0
 135 001e 1A1C     		mov	r2, r3
 136 0020 FFF7FEFF 		bl	I2C0_SelectSlaveDevice
 137 0024 031C     		mov	r3, r0
 138 0026 5A1E     		sub	r2, r3, #1
 139 0028 9341     		sbc	r3, r3, r2
 140 002a DBB2     		uxtb	r3, r3
 141 002c 002B     		cmp	r3, #0
 142 002e 03D0     		beq	.L8
 123:../Generated_Code/GI2C0.c ****     GI2C0_ReleaseBus();
 143              		.loc 1 123 0
 144 0030 FFF7FEFF 		bl	_Z16GI2C0_ReleaseBusv
 124:../Generated_Code/GI2C0.c ****     return ERR_FAILED;
 145              		.loc 1 124 0
 146 0034 1B23     		mov	r3, #27
 147 0036 00E0     		b	.L9
 148              	.L8:
 125:../Generated_Code/GI2C0.c ****   }
 126:../Generated_Code/GI2C0.c ****   return ERR_OK;
 149              		.loc 1 126 0
 150 0038 0023     		mov	r3, #0
 151              	.L9:
 127:../Generated_Code/GI2C0.c **** }
 152              		.loc 1 127 0
 153 003a 181C     		mov	r0, r3
 154 003c BD46     		mov	sp, r7
 155 003e 02B0     		add	sp, sp, #8
 156              		@ sp needed for prologue
 157 0040 80BD     		pop	{r7, pc}
 158              	.L11:
 159 0042 C046     		.align	2
 160              	.L10:
 161 0044 00000000 		.word	_ZL16GI2C0_deviceData
 162              		.cfi_endproc
 163              	.LFE7:
 165              		.section	.text._Z19GI2C0_UnselectSlavev,"ax",%progbits
 166              		.align	2
 167              		.global	_Z19GI2C0_UnselectSlavev
 168              		.code	16
 169              		.thumb_func
 171              	_Z19GI2C0_UnselectSlavev:
 172              	.LFB8:
 128:../Generated_Code/GI2C0.c **** 
 129:../Generated_Code/GI2C0.c **** /*
 130:../Generated_Code/GI2C0.c **** ** ===================================================================
 131:../Generated_Code/GI2C0.c **** **     Method      :  GI2C0_UnselectSlave (component GenericI2C)
 132:../Generated_Code/GI2C0.c **** **     Description :
 133:../Generated_Code/GI2C0.c **** **         Unselects the device. Method will release a used a semaphore.
 134:../Generated_Code/GI2C0.c **** **     Parameters  : None
 135:../Generated_Code/GI2C0.c **** **     Returns     :
 136:../Generated_Code/GI2C0.c **** **         ---             - Error code
 137:../Generated_Code/GI2C0.c **** ** ===================================================================
 138:../Generated_Code/GI2C0.c **** */
 139:../Generated_Code/GI2C0.c **** byte GI2C0_UnselectSlave(void)
 140:../Generated_Code/GI2C0.c **** {
 173              		.loc 1 140 0
 174              		.cfi_startproc
 175 0000 80B5     		push	{r7, lr}
 176              	.LCFI7:
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 7, -8
 179              		.cfi_offset 14, -4
 180 0002 00AF     		add	r7, sp, #0
 181              	.LCFI8:
 182              		.cfi_def_cfa_register 7
 141:../Generated_Code/GI2C0.c ****   GI2C0_ReleaseBus();
 183              		.loc 1 141 0
 184 0004 FFF7FEFF 		bl	_Z16GI2C0_ReleaseBusv
 142:../Generated_Code/GI2C0.c ****   return ERR_OK;
 185              		.loc 1 142 0
 186 0008 0023     		mov	r3, #0
 143:../Generated_Code/GI2C0.c **** }
 187              		.loc 1 143 0
 188 000a 181C     		mov	r0, r3
 189 000c BD46     		mov	sp, r7
 190              		@ sp needed for prologue
 191 000e 80BD     		pop	{r7, pc}
 192              		.cfi_endproc
 193              	.LFE8:
 195              		.section	.text._Z15GI2C0_ReadBlockPvt20GI2C0_EnumSendFlags_,"ax",%progbits
 196              		.align	2
 197              		.global	_Z15GI2C0_ReadBlockPvt20GI2C0_EnumSendFlags_
 198              		.code	16
 199              		.thumb_func
 201              	_Z15GI2C0_ReadBlockPvt20GI2C0_EnumSendFlags_:
 202              	.LFB9:
 144:../Generated_Code/GI2C0.c **** 
 145:../Generated_Code/GI2C0.c **** /*
 146:../Generated_Code/GI2C0.c **** ** ===================================================================
 147:../Generated_Code/GI2C0.c **** **     Method      :  GI2C0_ReadBlock (component GenericI2C)
 148:../Generated_Code/GI2C0.c **** **     Description :
 149:../Generated_Code/GI2C0.c **** **         Read from the device a block.
 150:../Generated_Code/GI2C0.c **** **     Parameters  :
 151:../Generated_Code/GI2C0.c **** **         NAME            - DESCRIPTION
 152:../Generated_Code/GI2C0.c **** **       * data            - Read buffer
 153:../Generated_Code/GI2C0.c **** **         dataSize        - Size of read buffer
 154:../Generated_Code/GI2C0.c **** **         flags           - flags for the transaction
 155:../Generated_Code/GI2C0.c **** **     Returns     :
 156:../Generated_Code/GI2C0.c **** **         ---             - Error code
 157:../Generated_Code/GI2C0.c **** ** ===================================================================
 158:../Generated_Code/GI2C0.c **** */
 159:../Generated_Code/GI2C0.c **** byte GI2C0_ReadBlock(void* data, word dataSize, GI2C0_EnumSendFlags flags)
 160:../Generated_Code/GI2C0.c **** {
 203              		.loc 1 160 0
 204              		.cfi_startproc
 205 0000 80B5     		push	{r7, lr}
 206              	.LCFI9:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 7, -8
 209              		.cfi_offset 14, -4
 210 0002 84B0     		sub	sp, sp, #16
 211              	.LCFI10:
 212              		.cfi_def_cfa_offset 24
 213 0004 00AF     		add	r7, sp, #0
 214              	.LCFI11:
 215              		.cfi_def_cfa_register 7
 216 0006 7860     		str	r0, [r7, #4]
 217 0008 BB1C     		add	r3, r7, #2
 218 000a 1980     		strh	r1, [r3]
 219 000c 7B1C     		add	r3, r7, #1
 220 000e 1A70     		strb	r2, [r3]
 221              	.LBB2:
 161:../Generated_Code/GI2C0.c ****   byte res = ERR_OK;
 222              		.loc 1 161 0
 223 0010 3B1C     		mov	r3, r7
 224 0012 0F33     		add	r3, r3, #15
 225 0014 0022     		mov	r2, #0
 226 0016 1A70     		strb	r2, [r3]
 162:../Generated_Code/GI2C0.c **** 
 163:../Generated_Code/GI2C0.c ****   for(;;) { /* breaks */
 164:../Generated_Code/GI2C0.c ****     GI2C0_deviceData.dataReceivedFlg = FALSE;
 227              		.loc 1 164 0
 228 0018 154B     		ldr	r3, .L21
 229 001a 0022     		mov	r2, #0
 230 001c 1A70     		strb	r2, [r3]
 165:../Generated_Code/GI2C0.c ****     res = I2C0_MasterReceiveBlock(GI2C0_deviceData.handle, data, dataSize, flags==GI2C0_SEND_STOP?L
 231              		.loc 1 165 0
 232 001e 144B     		ldr	r3, .L21
 233 0020 5868     		ldr	r0, [r3, #4]
 234 0022 7B1C     		add	r3, r7, #1
 235 0024 1B78     		ldrb	r3, [r3]
 236 0026 002B     		cmp	r3, #0
 237 0028 01D1     		bne	.L15
 238              		.loc 1 165 0 is_stmt 0
 239 002a 0123     		mov	r3, #1
 240 002c 00E0     		b	.L16
 241              	.L15:
 242              		.loc 1 165 0
 243 002e 0023     		mov	r3, #0
 244              	.L16:
 245              		.loc 1 165 0
 246 0030 7968     		ldr	r1, [r7, #4]
 247 0032 BA1C     		add	r2, r7, #2
 248 0034 1288     		ldrh	r2, [r2]
 249 0036 FFF7FEFF 		bl	I2C0_MasterReceiveBlock
 250 003a 031C     		mov	r3, r0
 251 003c 1A1C     		mov	r2, r3
 252 003e 3B1C     		mov	r3, r7
 253 0040 0F33     		add	r3, r3, #15
 254 0042 1A70     		strb	r2, [r3]
 166:../Generated_Code/GI2C0.c ****     if (res!=ERR_OK) {
 255              		.loc 1 166 0 is_stmt 1
 256 0044 3B1C     		mov	r3, r7
 257 0046 0F33     		add	r3, r3, #15
 258 0048 1B78     		ldrb	r3, [r3]
 259 004a 002B     		cmp	r3, #0
 260 004c 08D1     		bne	.L20
 261              	.L17:
 167:../Generated_Code/GI2C0.c ****       break; /* break for(;;) */
 168:../Generated_Code/GI2C0.c ****     }
 169:../Generated_Code/GI2C0.c ****     do { /* Wait until data is received */
 170:../Generated_Code/GI2C0.c ****     } while (!GI2C0_deviceData.dataReceivedFlg);
 262              		.loc 1 170 0
 263 004e 084B     		ldr	r3, .L21
 264 0050 1B78     		ldrb	r3, [r3]
 265 0052 DBB2     		uxtb	r3, r3
 169:../Generated_Code/GI2C0.c ****     do { /* Wait until data is received */
 266              		.loc 1 169 0
 267 0054 0122     		mov	r2, #1
 268 0056 5340     		eor	r3, r2
 269 0058 DBB2     		uxtb	r3, r3
 270 005a 002B     		cmp	r3, #0
 271 005c F7D1     		bne	.L17
 171:../Generated_Code/GI2C0.c ****     break; /* break for(;;) */
 272              		.loc 1 171 0
 273 005e 00E0     		b	.L18
 274              	.L20:
 167:../Generated_Code/GI2C0.c ****       break; /* break for(;;) */
 275              		.loc 1 167 0
 276 0060 C046     		mov	r8, r8
 277              	.L18:
 172:../Generated_Code/GI2C0.c ****   } /* for(;;) */
 173:../Generated_Code/GI2C0.c ****   return res;
 278              		.loc 1 173 0
 279 0062 3B1C     		mov	r3, r7
 280 0064 0F33     		add	r3, r3, #15
 281 0066 1B78     		ldrb	r3, [r3]
 282              	.LBE2:
 174:../Generated_Code/GI2C0.c **** }
 283              		.loc 1 174 0
 284 0068 181C     		mov	r0, r3
 285 006a BD46     		mov	sp, r7
 286 006c 04B0     		add	sp, sp, #16
 287              		@ sp needed for prologue
 288 006e 80BD     		pop	{r7, pc}
 289              	.L22:
 290              		.align	2
 291              	.L21:
 292 0070 00000000 		.word	_ZL16GI2C0_deviceData
 293              		.cfi_endproc
 294              	.LFE9:
 296              		.section	.text._Z16GI2C0_WriteBlockPvt20GI2C0_EnumSendFlags_,"ax",%progbits
 297              		.align	2
 298              		.global	_Z16GI2C0_WriteBlockPvt20GI2C0_EnumSendFlags_
 299              		.code	16
 300              		.thumb_func
 302              	_Z16GI2C0_WriteBlockPvt20GI2C0_EnumSendFlags_:
 303              	.LFB10:
 175:../Generated_Code/GI2C0.c **** 
 176:../Generated_Code/GI2C0.c **** /*
 177:../Generated_Code/GI2C0.c **** ** ===================================================================
 178:../Generated_Code/GI2C0.c **** **     Method      :  GI2C0_WriteBlock (component GenericI2C)
 179:../Generated_Code/GI2C0.c **** **     Description :
 180:../Generated_Code/GI2C0.c **** **         Write a block to the device.
 181:../Generated_Code/GI2C0.c **** **     Parameters  :
 182:../Generated_Code/GI2C0.c **** **         NAME            - DESCRIPTION
 183:../Generated_Code/GI2C0.c **** **       * data            - Data write buffer
 184:../Generated_Code/GI2C0.c **** **         dataSize        - 
 185:../Generated_Code/GI2C0.c **** **         flags           - flags for the transaction
 186:../Generated_Code/GI2C0.c **** **     Returns     :
 187:../Generated_Code/GI2C0.c **** **         ---             - Error code
 188:../Generated_Code/GI2C0.c **** ** ===================================================================
 189:../Generated_Code/GI2C0.c **** */
 190:../Generated_Code/GI2C0.c **** byte GI2C0_WriteBlock(void* data, word dataSize, GI2C0_EnumSendFlags flags)
 191:../Generated_Code/GI2C0.c **** {
 304              		.loc 1 191 0
 305              		.cfi_startproc
 306 0000 80B5     		push	{r7, lr}
 307              	.LCFI12:
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 7, -8
 310              		.cfi_offset 14, -4
 311 0002 84B0     		sub	sp, sp, #16
 312              	.LCFI13:
 313              		.cfi_def_cfa_offset 24
 314 0004 00AF     		add	r7, sp, #0
 315              	.LCFI14:
 316              		.cfi_def_cfa_register 7
 317 0006 7860     		str	r0, [r7, #4]
 318 0008 BB1C     		add	r3, r7, #2
 319 000a 1980     		strh	r1, [r3]
 320 000c 7B1C     		add	r3, r7, #1
 321 000e 1A70     		strb	r2, [r3]
 322              	.LBB3:
 192:../Generated_Code/GI2C0.c ****   byte res = ERR_OK;
 323              		.loc 1 192 0
 324 0010 3B1C     		mov	r3, r7
 325 0012 0F33     		add	r3, r3, #15
 326 0014 0022     		mov	r2, #0
 327 0016 1A70     		strb	r2, [r3]
 193:../Generated_Code/GI2C0.c **** 
 194:../Generated_Code/GI2C0.c ****   for(;;) { /* breaks */
 195:../Generated_Code/GI2C0.c ****     GI2C0_deviceData.dataTransmittedFlg = FALSE;
 328              		.loc 1 195 0
 329 0018 154B     		ldr	r3, .L30
 330 001a 0022     		mov	r2, #0
 331 001c 5A70     		strb	r2, [r3, #1]
 196:../Generated_Code/GI2C0.c ****     res = I2C0_MasterSendBlock(GI2C0_deviceData.handle, data, dataSize, flags==GI2C0_SEND_STOP?LDD_
 332              		.loc 1 196 0
 333 001e 144B     		ldr	r3, .L30
 334 0020 5868     		ldr	r0, [r3, #4]
 335 0022 7B1C     		add	r3, r7, #1
 336 0024 1B78     		ldrb	r3, [r3]
 337 0026 002B     		cmp	r3, #0
 338 0028 01D1     		bne	.L24
 339              		.loc 1 196 0 is_stmt 0
 340 002a 0123     		mov	r3, #1
 341 002c 00E0     		b	.L25
 342              	.L24:
 343              		.loc 1 196 0
 344 002e 0023     		mov	r3, #0
 345              	.L25:
 346              		.loc 1 196 0
 347 0030 7968     		ldr	r1, [r7, #4]
 348 0032 BA1C     		add	r2, r7, #2
 349 0034 1288     		ldrh	r2, [r2]
 350 0036 FFF7FEFF 		bl	I2C0_MasterSendBlock
 351 003a 031C     		mov	r3, r0
 352 003c 1A1C     		mov	r2, r3
 353 003e 3B1C     		mov	r3, r7
 354 0040 0F33     		add	r3, r3, #15
 355 0042 1A70     		strb	r2, [r3]
 197:../Generated_Code/GI2C0.c ****     if (res!=ERR_OK) {
 356              		.loc 1 197 0 is_stmt 1
 357 0044 3B1C     		mov	r3, r7
 358 0046 0F33     		add	r3, r3, #15
 359 0048 1B78     		ldrb	r3, [r3]
 360 004a 002B     		cmp	r3, #0
 361 004c 08D1     		bne	.L29
 362              	.L26:
 198:../Generated_Code/GI2C0.c ****       break; /* break for(;;) */
 199:../Generated_Code/GI2C0.c ****     }
 200:../Generated_Code/GI2C0.c ****     do { /* Wait until data is sent */
 201:../Generated_Code/GI2C0.c ****     } while (!GI2C0_deviceData.dataTransmittedFlg);
 363              		.loc 1 201 0
 364 004e 084B     		ldr	r3, .L30
 365 0050 5B78     		ldrb	r3, [r3, #1]
 366 0052 DBB2     		uxtb	r3, r3
 200:../Generated_Code/GI2C0.c ****     do { /* Wait until data is sent */
 367              		.loc 1 200 0
 368 0054 0122     		mov	r2, #1
 369 0056 5340     		eor	r3, r2
 370 0058 DBB2     		uxtb	r3, r3
 371 005a 002B     		cmp	r3, #0
 372 005c F7D1     		bne	.L26
 202:../Generated_Code/GI2C0.c ****     break; /* break for(;;) */
 373              		.loc 1 202 0
 374 005e 00E0     		b	.L27
 375              	.L29:
 198:../Generated_Code/GI2C0.c ****       break; /* break for(;;) */
 376              		.loc 1 198 0
 377 0060 C046     		mov	r8, r8
 378              	.L27:
 203:../Generated_Code/GI2C0.c ****   } /* for(;;) */
 204:../Generated_Code/GI2C0.c ****   return res;
 379              		.loc 1 204 0
 380 0062 3B1C     		mov	r3, r7
 381 0064 0F33     		add	r3, r3, #15
 382 0066 1B78     		ldrb	r3, [r3]
 383              	.LBE3:
 205:../Generated_Code/GI2C0.c **** }
 384              		.loc 1 205 0
 385 0068 181C     		mov	r0, r3
 386 006a BD46     		mov	sp, r7
 387 006c 04B0     		add	sp, sp, #16
 388              		@ sp needed for prologue
 389 006e 80BD     		pop	{r7, pc}
 390              	.L31:
 391              		.align	2
 392              	.L30:
 393 0070 00000000 		.word	_ZL16GI2C0_deviceData
 394              		.cfi_endproc
 395              	.LFE10:
 397              		.section	.text._Z17GI2C0_ReadAddresshPhhS_t,"ax",%progbits
 398              		.align	2
 399              		.global	_Z17GI2C0_ReadAddresshPhhS_t
 400              		.code	16
 401              		.thumb_func
 403              	_Z17GI2C0_ReadAddresshPhhS_t:
 404              	.LFB11:
 206:../Generated_Code/GI2C0.c **** 
 207:../Generated_Code/GI2C0.c **** /*
 208:../Generated_Code/GI2C0.c **** ** ===================================================================
 209:../Generated_Code/GI2C0.c **** **     Method      :  GI2C0_ReadAddress (component GenericI2C)
 210:../Generated_Code/GI2C0.c **** **     Description :
 211:../Generated_Code/GI2C0.c **** **         Read from the device. This writes (S+i2cAddr+0), (memAddr),
 212:../Generated_Code/GI2C0.c **** **         (Sr+i2cAddr+1), (data)...(data+P)
 213:../Generated_Code/GI2C0.c **** **     Parameters  :
 214:../Generated_Code/GI2C0.c **** **         NAME            - DESCRIPTION
 215:../Generated_Code/GI2C0.c **** **         i2cAddr         - I2C Address of device
 216:../Generated_Code/GI2C0.c **** **       * memAddr         - Pointer to device memory address
 217:../Generated_Code/GI2C0.c **** **         memAddrSize     - number of address bytes
 218:../Generated_Code/GI2C0.c **** **       * data            - Pointer to read buffer
 219:../Generated_Code/GI2C0.c **** **         dataSize        - Size of read buffer
 220:../Generated_Code/GI2C0.c **** **     Returns     :
 221:../Generated_Code/GI2C0.c **** **         ---             - Error code
 222:../Generated_Code/GI2C0.c **** ** ===================================================================
 223:../Generated_Code/GI2C0.c **** */
 224:../Generated_Code/GI2C0.c **** byte GI2C0_ReadAddress(byte i2cAddr, byte *memAddr, byte memAddrSize, byte *data, word dataSize)
 225:../Generated_Code/GI2C0.c **** {
 405              		.loc 1 225 0
 406              		.cfi_startproc
 407 0000 80B5     		push	{r7, lr}
 408              	.LCFI15:
 409              		.cfi_def_cfa_offset 8
 410              		.cfi_offset 7, -8
 411              		.cfi_offset 14, -4
 412 0002 86B0     		sub	sp, sp, #24
 413              	.LCFI16:
 414              		.cfi_def_cfa_offset 32
 415 0004 00AF     		add	r7, sp, #0
 416              	.LCFI17:
 417              		.cfi_def_cfa_register 7
 418 0006 B960     		str	r1, [r7, #8]
 419 0008 7B60     		str	r3, [r7, #4]
 420 000a 3B1C     		mov	r3, r7
 421 000c 0F33     		add	r3, r3, #15
 422 000e 011C     		add	r1, r0, #0
 423 0010 1970     		strb	r1, [r3]
 424 0012 3B1C     		mov	r3, r7
 425 0014 0E33     		add	r3, r3, #14
 426 0016 1A70     		strb	r2, [r3]
 427              	.LBB4:
 226:../Generated_Code/GI2C0.c ****   byte res = ERR_OK;
 428              		.loc 1 226 0
 429 0018 3B1C     		mov	r3, r7
 430 001a 1733     		add	r3, r3, #23
 431 001c 0022     		mov	r2, #0
 432 001e 1A70     		strb	r2, [r3]
 227:../Generated_Code/GI2C0.c **** 
 228:../Generated_Code/GI2C0.c ****   if (GI2C0_SelectSlave(i2cAddr)!=ERR_OK) {
 433              		.loc 1 228 0
 434 0020 3B1C     		mov	r3, r7
 435 0022 0F33     		add	r3, r3, #15
 436 0024 1B78     		ldrb	r3, [r3]
 437 0026 181C     		mov	r0, r3
 438 0028 FFF7FEFF 		bl	_Z17GI2C0_SelectSlaveh
 439 002c 031C     		mov	r3, r0
 440 002e 5A1E     		sub	r2, r3, #1
 441 0030 9341     		sbc	r3, r3, r2
 442 0032 DBB2     		uxtb	r3, r3
 443 0034 002B     		cmp	r3, #0
 444 0036 01D0     		beq	.L33
 229:../Generated_Code/GI2C0.c ****     return ERR_FAILED;
 445              		.loc 1 229 0
 446 0038 1B23     		mov	r3, #27
 447 003a 53E0     		b	.L34
 448              	.L33:
 230:../Generated_Code/GI2C0.c ****   }
 231:../Generated_Code/GI2C0.c ****   for(;;) { /* breaks */
 232:../Generated_Code/GI2C0.c ****     /* send device address and memory address */
 233:../Generated_Code/GI2C0.c ****     GI2C0_deviceData.dataTransmittedFlg = FALSE;
 449              		.loc 1 233 0
 450 003c 2B4B     		ldr	r3, .L41
 451 003e 0022     		mov	r2, #0
 452 0040 5A70     		strb	r2, [r3, #1]
 234:../Generated_Code/GI2C0.c ****     res = I2C0_MasterSendBlock(GI2C0_deviceData.handle, memAddr, memAddrSize, LDD_I2C_NO_SEND_STOP)
 453              		.loc 1 234 0
 454 0042 2A4B     		ldr	r3, .L41
 455 0044 5968     		ldr	r1, [r3, #4]
 456 0046 3B1C     		mov	r3, r7
 457 0048 0E33     		add	r3, r3, #14
 458 004a 1B78     		ldrb	r3, [r3]
 459 004c 9BB2     		uxth	r3, r3
 460 004e BA68     		ldr	r2, [r7, #8]
 461 0050 081C     		mov	r0, r1
 462 0052 111C     		mov	r1, r2
 463 0054 1A1C     		mov	r2, r3
 464 0056 0023     		mov	r3, #0
 465 0058 FFF7FEFF 		bl	I2C0_MasterSendBlock
 466 005c 031C     		mov	r3, r0
 467 005e 1A1C     		mov	r2, r3
 468 0060 3B1C     		mov	r3, r7
 469 0062 1733     		add	r3, r3, #23
 470 0064 1A70     		strb	r2, [r3]
 235:../Generated_Code/GI2C0.c ****     if (res!=ERR_OK) {
 471              		.loc 1 235 0
 472 0066 3B1C     		mov	r3, r7
 473 0068 1733     		add	r3, r3, #23
 474 006a 1B78     		ldrb	r3, [r3]
 475 006c 002B     		cmp	r3, #0
 476 006e 29D1     		bne	.L39
 477              	.L35:
 236:../Generated_Code/GI2C0.c ****       break; /* break for(;;) */
 237:../Generated_Code/GI2C0.c ****     }
 238:../Generated_Code/GI2C0.c ****     do { /* Wait until data is sent */
 239:../Generated_Code/GI2C0.c ****     } while (!GI2C0_deviceData.dataTransmittedFlg);
 478              		.loc 1 239 0
 479 0070 1E4B     		ldr	r3, .L41
 480 0072 5B78     		ldrb	r3, [r3, #1]
 481 0074 DBB2     		uxtb	r3, r3
 238:../Generated_Code/GI2C0.c ****     do { /* Wait until data is sent */
 482              		.loc 1 238 0
 483 0076 0122     		mov	r2, #1
 484 0078 5340     		eor	r3, r2
 485 007a DBB2     		uxtb	r3, r3
 486 007c 002B     		cmp	r3, #0
 487 007e F7D1     		bne	.L35
 240:../Generated_Code/GI2C0.c ****     /* receive data */
 241:../Generated_Code/GI2C0.c ****     GI2C0_deviceData.dataReceivedFlg = FALSE;
 488              		.loc 1 241 0
 489 0080 1A4B     		ldr	r3, .L41
 490 0082 0022     		mov	r2, #0
 491 0084 1A70     		strb	r2, [r3]
 242:../Generated_Code/GI2C0.c ****     res = I2C0_MasterReceiveBlock(GI2C0_deviceData.handle, data, dataSize, LDD_I2C_SEND_STOP);
 492              		.loc 1 242 0
 493 0086 194B     		ldr	r3, .L41
 494 0088 5968     		ldr	r1, [r3, #4]
 495 008a 7A68     		ldr	r2, [r7, #4]
 496 008c 3B1C     		mov	r3, r7
 497 008e 2033     		add	r3, r3, #32
 498 0090 1B88     		ldrh	r3, [r3]
 499 0092 081C     		mov	r0, r1
 500 0094 111C     		mov	r1, r2
 501 0096 1A1C     		mov	r2, r3
 502 0098 0123     		mov	r3, #1
 503 009a FFF7FEFF 		bl	I2C0_MasterReceiveBlock
 504 009e 031C     		mov	r3, r0
 505 00a0 1A1C     		mov	r2, r3
 506 00a2 3B1C     		mov	r3, r7
 507 00a4 1733     		add	r3, r3, #23
 508 00a6 1A70     		strb	r2, [r3]
 243:../Generated_Code/GI2C0.c ****     if (res!=ERR_OK) {
 509              		.loc 1 243 0
 510 00a8 3B1C     		mov	r3, r7
 511 00aa 1733     		add	r3, r3, #23
 512 00ac 1B78     		ldrb	r3, [r3]
 513 00ae 002B     		cmp	r3, #0
 514 00b0 0AD1     		bne	.L40
 515              	.L37:
 244:../Generated_Code/GI2C0.c ****       break; /* break for(;;) */
 245:../Generated_Code/GI2C0.c ****     }
 246:../Generated_Code/GI2C0.c ****     do { /* Wait until data is received */
 247:../Generated_Code/GI2C0.c ****     } while (!GI2C0_deviceData.dataReceivedFlg);
 516              		.loc 1 247 0
 517 00b2 0E4B     		ldr	r3, .L41
 518 00b4 1B78     		ldrb	r3, [r3]
 519 00b6 DBB2     		uxtb	r3, r3
 246:../Generated_Code/GI2C0.c ****     do { /* Wait until data is received */
 520              		.loc 1 246 0
 521 00b8 0122     		mov	r2, #1
 522 00ba 5340     		eor	r3, r2
 523 00bc DBB2     		uxtb	r3, r3
 524 00be 002B     		cmp	r3, #0
 525 00c0 F7D1     		bne	.L37
 248:../Generated_Code/GI2C0.c ****     break; /* break for(;;) */
 526              		.loc 1 248 0
 527 00c2 02E0     		b	.L36
 528              	.L39:
 236:../Generated_Code/GI2C0.c ****       break; /* break for(;;) */
 529              		.loc 1 236 0
 530 00c4 C046     		mov	r8, r8
 531 00c6 00E0     		b	.L36
 532              	.L40:
 244:../Generated_Code/GI2C0.c ****       break; /* break for(;;) */
 533              		.loc 1 244 0
 534 00c8 C046     		mov	r8, r8
 535              	.L36:
 249:../Generated_Code/GI2C0.c ****   } /* for(;;) */
 250:../Generated_Code/GI2C0.c ****   if (GI2C0_UnselectSlave()!=ERR_OK) {
 536              		.loc 1 250 0
 537 00ca FFF7FEFF 		bl	_Z19GI2C0_UnselectSlavev
 538 00ce 031C     		mov	r3, r0
 539 00d0 5A1E     		sub	r2, r3, #1
 540 00d2 9341     		sbc	r3, r3, r2
 541 00d4 DBB2     		uxtb	r3, r3
 542 00d6 002B     		cmp	r3, #0
 543 00d8 01D0     		beq	.L38
 251:../Generated_Code/GI2C0.c ****     return ERR_FAILED;
 544              		.loc 1 251 0
 545 00da 1B23     		mov	r3, #27
 546 00dc 02E0     		b	.L34
 547              	.L38:
 252:../Generated_Code/GI2C0.c ****   }
 253:../Generated_Code/GI2C0.c ****   return res;
 548              		.loc 1 253 0
 549 00de 3B1C     		mov	r3, r7
 550 00e0 1733     		add	r3, r3, #23
 551 00e2 1B78     		ldrb	r3, [r3]
 552              	.L34:
 553              	.LBE4:
 254:../Generated_Code/GI2C0.c **** }
 554              		.loc 1 254 0
 555 00e4 181C     		mov	r0, r3
 556 00e6 BD46     		mov	sp, r7
 557 00e8 06B0     		add	sp, sp, #24
 558              		@ sp needed for prologue
 559 00ea 80BD     		pop	{r7, pc}
 560              	.L42:
 561              		.align	2
 562              	.L41:
 563 00ec 00000000 		.word	_ZL16GI2C0_deviceData
 564              		.cfi_endproc
 565              	.LFE11:
 567              		.section	.text._Z18GI2C0_WriteAddresshPhhS_t,"ax",%progbits
 568              		.align	2
 569              		.global	_Z18GI2C0_WriteAddresshPhhS_t
 570              		.code	16
 571              		.thumb_func
 573              	_Z18GI2C0_WriteAddresshPhhS_t:
 574              	.LFB12:
 255:../Generated_Code/GI2C0.c **** 
 256:../Generated_Code/GI2C0.c **** /*
 257:../Generated_Code/GI2C0.c **** ** ===================================================================
 258:../Generated_Code/GI2C0.c **** **     Method      :  GI2C0_WriteAddress (component GenericI2C)
 259:../Generated_Code/GI2C0.c **** **     Description :
 260:../Generated_Code/GI2C0.c **** **         Write to the device: (S+i2cAddr+0), (memAddr), (data)...
 261:../Generated_Code/GI2C0.c **** **         (data+P)
 262:../Generated_Code/GI2C0.c **** **     Parameters  :
 263:../Generated_Code/GI2C0.c **** **         NAME            - DESCRIPTION
 264:../Generated_Code/GI2C0.c **** **         i2cAddr         - I2C address of device
 265:../Generated_Code/GI2C0.c **** **       * memAddr         - Pointer to device memory address
 266:../Generated_Code/GI2C0.c **** **         memAddrSize     - number of address bytes
 267:../Generated_Code/GI2C0.c **** **       * data            - Pointer to data write buffer
 268:../Generated_Code/GI2C0.c **** **         dataSize        - Size of data buffer in bytes
 269:../Generated_Code/GI2C0.c **** **     Returns     :
 270:../Generated_Code/GI2C0.c **** **         ---             - Error code
 271:../Generated_Code/GI2C0.c **** ** ===================================================================
 272:../Generated_Code/GI2C0.c **** */
 273:../Generated_Code/GI2C0.c **** byte GI2C0_WriteAddress(byte i2cAddr, byte *memAddr, byte memAddrSize, byte *data, word dataSize)
 274:../Generated_Code/GI2C0.c **** {
 575              		.loc 1 274 0
 576              		.cfi_startproc
 577 0000 80B5     		push	{r7, lr}
 578              	.LCFI18:
 579              		.cfi_def_cfa_offset 8
 580              		.cfi_offset 7, -8
 581              		.cfi_offset 14, -4
 582 0002 86B0     		sub	sp, sp, #24
 583              	.LCFI19:
 584              		.cfi_def_cfa_offset 32
 585 0004 00AF     		add	r7, sp, #0
 586              	.LCFI20:
 587              		.cfi_def_cfa_register 7
 588 0006 B960     		str	r1, [r7, #8]
 589 0008 7B60     		str	r3, [r7, #4]
 590 000a 3B1C     		mov	r3, r7
 591 000c 0F33     		add	r3, r3, #15
 592 000e 011C     		add	r1, r0, #0
 593 0010 1970     		strb	r1, [r3]
 594 0012 3B1C     		mov	r3, r7
 595 0014 0E33     		add	r3, r3, #14
 596 0016 1A70     		strb	r2, [r3]
 597              	.LBB5:
 275:../Generated_Code/GI2C0.c ****   static byte writeBuf[GI2C0_WRITE_BUFFER_SIZE];
 276:../Generated_Code/GI2C0.c ****   byte *p;
 277:../Generated_Code/GI2C0.c ****   word i;
 278:../Generated_Code/GI2C0.c ****   byte res = ERR_OK;
 598              		.loc 1 278 0
 599 0018 3B1C     		mov	r3, r7
 600 001a 1133     		add	r3, r3, #17
 601 001c 0022     		mov	r2, #0
 602 001e 1A70     		strb	r2, [r3]
 279:../Generated_Code/GI2C0.c **** 
 280:../Generated_Code/GI2C0.c ****   if (GI2C0_SelectSlave(i2cAddr)!=ERR_OK) {
 603              		.loc 1 280 0
 604 0020 3B1C     		mov	r3, r7
 605 0022 0F33     		add	r3, r3, #15
 606 0024 1B78     		ldrb	r3, [r3]
 607 0026 181C     		mov	r0, r3
 608 0028 FFF7FEFF 		bl	_Z17GI2C0_SelectSlaveh
 609 002c 031C     		mov	r3, r0
 610 002e 5A1E     		sub	r2, r3, #1
 611 0030 9341     		sbc	r3, r3, r2
 612 0032 DBB2     		uxtb	r3, r3
 613 0034 002B     		cmp	r3, #0
 614 0036 01D0     		beq	.L44
 281:../Generated_Code/GI2C0.c ****     return ERR_FAILED;
 615              		.loc 1 281 0
 616 0038 1B23     		mov	r3, #27
 617 003a 8EE0     		b	.L45
 618              	.L44:
 282:../Generated_Code/GI2C0.c ****   }
 283:../Generated_Code/GI2C0.c ****   if (memAddrSize+dataSize>GI2C0_WRITE_BUFFER_SIZE) {
 619              		.loc 1 283 0
 620 003c 3B1C     		mov	r3, r7
 621 003e 0E33     		add	r3, r3, #14
 622 0040 1A78     		ldrb	r2, [r3]
 623 0042 3B1C     		mov	r3, r7
 624 0044 2033     		add	r3, r3, #32
 625 0046 1B88     		ldrh	r3, [r3]
 626 0048 D318     		add	r3, r2, r3
 627 004a 102B     		cmp	r3, #16
 628 004c 01DD     		ble	.L46
 284:../Generated_Code/GI2C0.c ****     return ERR_FAILED;
 629              		.loc 1 284 0
 630 004e 1B23     		mov	r3, #27
 631 0050 83E0     		b	.L45
 632              	.L46:
 285:../Generated_Code/GI2C0.c ****   }
 286:../Generated_Code/GI2C0.c ****   i = 0; p = memAddr;
 633              		.loc 1 286 0
 634 0052 3B1C     		mov	r3, r7
 635 0054 1233     		add	r3, r3, #18
 636 0056 0022     		mov	r2, #0
 637 0058 1A80     		strh	r2, [r3]
 638 005a BB68     		ldr	r3, [r7, #8]
 639 005c 7B61     		str	r3, [r7, #20]
 287:../Generated_Code/GI2C0.c ****   while(i<GI2C0_WRITE_BUFFER_SIZE && memAddrSize>0) {
 640              		.loc 1 287 0
 641 005e 17E0     		b	.L47
 642              	.L50:
 288:../Generated_Code/GI2C0.c ****     writeBuf[i++] = *p++;
 643              		.loc 1 288 0
 644 0060 3B1C     		mov	r3, r7
 645 0062 1233     		add	r3, r3, #18
 646 0064 1B88     		ldrh	r3, [r3]
 647 0066 7A69     		ldr	r2, [r7, #20]
 648 0068 1178     		ldrb	r1, [r2]
 649 006a 3E4A     		ldr	r2, .L59
 650 006c D154     		strb	r1, [r2, r3]
 651 006e 3B1C     		mov	r3, r7
 652 0070 1233     		add	r3, r3, #18
 653 0072 3A1C     		mov	r2, r7
 654 0074 1232     		add	r2, r2, #18
 655 0076 1288     		ldrh	r2, [r2]
 656 0078 0132     		add	r2, r2, #1
 657 007a 1A80     		strh	r2, [r3]
 658 007c 7B69     		ldr	r3, [r7, #20]
 659 007e 0133     		add	r3, r3, #1
 660 0080 7B61     		str	r3, [r7, #20]
 289:../Generated_Code/GI2C0.c ****     memAddrSize--;
 661              		.loc 1 289 0
 662 0082 3B1C     		mov	r3, r7
 663 0084 0E33     		add	r3, r3, #14
 664 0086 3A1C     		mov	r2, r7
 665 0088 0E32     		add	r2, r2, #14
 666 008a 1278     		ldrb	r2, [r2]
 667 008c 013A     		sub	r2, r2, #1
 668 008e 1A70     		strb	r2, [r3]
 669              	.L47:
 287:../Generated_Code/GI2C0.c ****   while(i<GI2C0_WRITE_BUFFER_SIZE && memAddrSize>0) {
 670              		.loc 1 287 0
 671 0090 3B1C     		mov	r3, r7
 672 0092 1233     		add	r3, r3, #18
 673 0094 1B88     		ldrh	r3, [r3]
 674 0096 0F2B     		cmp	r3, #15
 675 0098 06D8     		bhi	.L48
 287:../Generated_Code/GI2C0.c ****   while(i<GI2C0_WRITE_BUFFER_SIZE && memAddrSize>0) {
 676              		.loc 1 287 0 is_stmt 0
 677 009a 3B1C     		mov	r3, r7
 678 009c 0E33     		add	r3, r3, #14
 679 009e 1B78     		ldrb	r3, [r3]
 680 00a0 002B     		cmp	r3, #0
 681 00a2 01D0     		beq	.L48
 287:../Generated_Code/GI2C0.c ****   while(i<GI2C0_WRITE_BUFFER_SIZE && memAddrSize>0) {
 682              		.loc 1 287 0
 683 00a4 0123     		mov	r3, #1
 684 00a6 00E0     		b	.L49
 685              	.L48:
 287:../Generated_Code/GI2C0.c ****   while(i<GI2C0_WRITE_BUFFER_SIZE && memAddrSize>0) {
 686              		.loc 1 287 0
 687 00a8 0023     		mov	r3, #0
 688              	.L49:
 287:../Generated_Code/GI2C0.c ****   while(i<GI2C0_WRITE_BUFFER_SIZE && memAddrSize>0) {
 689              		.loc 1 287 0
 690 00aa 002B     		cmp	r3, #0
 691 00ac D8D1     		bne	.L50
 290:../Generated_Code/GI2C0.c ****   }
 291:../Generated_Code/GI2C0.c ****   p = data;
 692              		.loc 1 291 0 is_stmt 1
 693 00ae 7B68     		ldr	r3, [r7, #4]
 694 00b0 7B61     		str	r3, [r7, #20]
 292:../Generated_Code/GI2C0.c ****   while(i<GI2C0_WRITE_BUFFER_SIZE && dataSize>0) {
 695              		.loc 1 292 0
 696 00b2 17E0     		b	.L51
 697              	.L54:
 293:../Generated_Code/GI2C0.c ****     writeBuf[i++] = *p++;
 698              		.loc 1 293 0
 699 00b4 3B1C     		mov	r3, r7
 700 00b6 1233     		add	r3, r3, #18
 701 00b8 1B88     		ldrh	r3, [r3]
 702 00ba 7A69     		ldr	r2, [r7, #20]
 703 00bc 1178     		ldrb	r1, [r2]
 704 00be 294A     		ldr	r2, .L59
 705 00c0 D154     		strb	r1, [r2, r3]
 706 00c2 3B1C     		mov	r3, r7
 707 00c4 1233     		add	r3, r3, #18
 708 00c6 3A1C     		mov	r2, r7
 709 00c8 1232     		add	r2, r2, #18
 710 00ca 1288     		ldrh	r2, [r2]
 711 00cc 0132     		add	r2, r2, #1
 712 00ce 1A80     		strh	r2, [r3]
 713 00d0 7B69     		ldr	r3, [r7, #20]
 714 00d2 0133     		add	r3, r3, #1
 715 00d4 7B61     		str	r3, [r7, #20]
 294:../Generated_Code/GI2C0.c ****     dataSize--;
 716              		.loc 1 294 0
 717 00d6 3B1C     		mov	r3, r7
 718 00d8 2033     		add	r3, r3, #32
 719 00da 3A1C     		mov	r2, r7
 720 00dc 2032     		add	r2, r2, #32
 721 00de 1288     		ldrh	r2, [r2]
 722 00e0 013A     		sub	r2, r2, #1
 723 00e2 1A80     		strh	r2, [r3]
 724              	.L51:
 292:../Generated_Code/GI2C0.c ****   while(i<GI2C0_WRITE_BUFFER_SIZE && dataSize>0) {
 725              		.loc 1 292 0
 726 00e4 3B1C     		mov	r3, r7
 727 00e6 1233     		add	r3, r3, #18
 728 00e8 1B88     		ldrh	r3, [r3]
 729 00ea 0F2B     		cmp	r3, #15
 730 00ec 06D8     		bhi	.L52
 292:../Generated_Code/GI2C0.c ****   while(i<GI2C0_WRITE_BUFFER_SIZE && dataSize>0) {
 731              		.loc 1 292 0 is_stmt 0
 732 00ee 3B1C     		mov	r3, r7
 733 00f0 2033     		add	r3, r3, #32
 734 00f2 1B88     		ldrh	r3, [r3]
 735 00f4 002B     		cmp	r3, #0
 736 00f6 01D0     		beq	.L52
 292:../Generated_Code/GI2C0.c ****   while(i<GI2C0_WRITE_BUFFER_SIZE && dataSize>0) {
 737              		.loc 1 292 0
 738 00f8 0123     		mov	r3, #1
 739 00fa 00E0     		b	.L53
 740              	.L52:
 292:../Generated_Code/GI2C0.c ****   while(i<GI2C0_WRITE_BUFFER_SIZE && dataSize>0) {
 741              		.loc 1 292 0
 742 00fc 0023     		mov	r3, #0
 743              	.L53:
 292:../Generated_Code/GI2C0.c ****   while(i<GI2C0_WRITE_BUFFER_SIZE && dataSize>0) {
 744              		.loc 1 292 0
 745 00fe 002B     		cmp	r3, #0
 746 0100 D8D1     		bne	.L54
 295:../Generated_Code/GI2C0.c ****   }
 296:../Generated_Code/GI2C0.c ****   for(;;) { /* breaks */
 297:../Generated_Code/GI2C0.c ****     /* send device address, memory address and data */
 298:../Generated_Code/GI2C0.c ****     GI2C0_deviceData.dataTransmittedFlg = FALSE;
 747              		.loc 1 298 0 is_stmt 1
 748 0102 194B     		ldr	r3, .L59+4
 749 0104 0022     		mov	r2, #0
 750 0106 5A70     		strb	r2, [r3, #1]
 299:../Generated_Code/GI2C0.c ****     if (I2C0_MasterSendBlock(GI2C0_deviceData.handle, writeBuf, i, LDD_I2C_SEND_STOP)!=ERR_OK) {
 751              		.loc 1 299 0
 752 0108 174B     		ldr	r3, .L59+4
 753 010a 5968     		ldr	r1, [r3, #4]
 754 010c 154A     		ldr	r2, .L59
 755 010e 3B1C     		mov	r3, r7
 756 0110 1233     		add	r3, r3, #18
 757 0112 1B88     		ldrh	r3, [r3]
 758 0114 081C     		mov	r0, r1
 759 0116 111C     		mov	r1, r2
 760 0118 1A1C     		mov	r2, r3
 761 011a 0123     		mov	r3, #1
 762 011c FFF7FEFF 		bl	I2C0_MasterSendBlock
 763 0120 031C     		mov	r3, r0
 764 0122 5A1E     		sub	r2, r3, #1
 765 0124 9341     		sbc	r3, r3, r2
 766 0126 DBB2     		uxtb	r3, r3
 767 0128 002B     		cmp	r3, #0
 768 012a 08D1     		bne	.L58
 769              	.L55:
 300:../Generated_Code/GI2C0.c ****       break; /* break for(;;) */
 301:../Generated_Code/GI2C0.c ****     }
 302:../Generated_Code/GI2C0.c ****     do { /* Wait until data is sent */
 303:../Generated_Code/GI2C0.c ****     } while (!GI2C0_deviceData.dataTransmittedFlg);
 770              		.loc 1 303 0
 771 012c 0E4B     		ldr	r3, .L59+4
 772 012e 5B78     		ldrb	r3, [r3, #1]
 773 0130 DBB2     		uxtb	r3, r3
 302:../Generated_Code/GI2C0.c ****     do { /* Wait until data is sent */
 774              		.loc 1 302 0
 775 0132 0122     		mov	r2, #1
 776 0134 5340     		eor	r3, r2
 777 0136 DBB2     		uxtb	r3, r3
 778 0138 002B     		cmp	r3, #0
 779 013a F7D1     		bne	.L55
 304:../Generated_Code/GI2C0.c ****     break; /* break for(;;) */
 780              		.loc 1 304 0
 781 013c 00E0     		b	.L56
 782              	.L58:
 300:../Generated_Code/GI2C0.c ****       break; /* break for(;;) */
 783              		.loc 1 300 0
 784 013e C046     		mov	r8, r8
 785              	.L56:
 305:../Generated_Code/GI2C0.c ****   } /* for(;;) */
 306:../Generated_Code/GI2C0.c ****   if (GI2C0_UnselectSlave()!=ERR_OK) {
 786              		.loc 1 306 0
 787 0140 FFF7FEFF 		bl	_Z19GI2C0_UnselectSlavev
 788 0144 031C     		mov	r3, r0
 789 0146 5A1E     		sub	r2, r3, #1
 790 0148 9341     		sbc	r3, r3, r2
 791 014a DBB2     		uxtb	r3, r3
 792 014c 002B     		cmp	r3, #0
 793 014e 01D0     		beq	.L57
 307:../Generated_Code/GI2C0.c ****     return ERR_FAILED;
 794              		.loc 1 307 0
 795 0150 1B23     		mov	r3, #27
 796 0152 02E0     		b	.L45
 797              	.L57:
 308:../Generated_Code/GI2C0.c ****   }
 309:../Generated_Code/GI2C0.c ****   return res;
 798              		.loc 1 309 0
 799 0154 3B1C     		mov	r3, r7
 800 0156 1133     		add	r3, r3, #17
 801 0158 1B78     		ldrb	r3, [r3]
 802              	.L45:
 803              	.LBE5:
 310:../Generated_Code/GI2C0.c **** }
 804              		.loc 1 310 0
 805 015a 181C     		mov	r0, r3
 806 015c BD46     		mov	sp, r7
 807 015e 06B0     		add	sp, sp, #24
 808              		@ sp needed for prologue
 809 0160 80BD     		pop	{r7, pc}
 810              	.L60:
 811 0162 C046     		.align	2
 812              	.L59:
 813 0164 00000000 		.word	_ZZ18GI2C0_WriteAddresshPhhS_tE8writeBuf
 814 0168 00000000 		.word	_ZL16GI2C0_deviceData
 815              		.cfi_endproc
 816              	.LFE12:
 818              		.section	.text._Z22I2C0_OnMasterBlockSentPv,"ax",%progbits
 819              		.align	2
 820              		.global	_Z22I2C0_OnMasterBlockSentPv
 821              		.code	16
 822              		.thumb_func
 824              	_Z22I2C0_OnMasterBlockSentPv:
 825              	.LFB13:
 311:../Generated_Code/GI2C0.c **** 
 312:../Generated_Code/GI2C0.c **** /*
 313:../Generated_Code/GI2C0.c **** ** ===================================================================
 314:../Generated_Code/GI2C0.c **** **     Method      :  GI2C0_OnMasterBlockSent (component GenericI2C)
 315:../Generated_Code/GI2C0.c **** **
 316:../Generated_Code/GI2C0.c **** **     Description :
 317:../Generated_Code/GI2C0.c **** **         This method is internal. It is used by Processor Expert only.
 318:../Generated_Code/GI2C0.c **** ** ===================================================================
 319:../Generated_Code/GI2C0.c **** */
 320:../Generated_Code/GI2C0.c **** void I2C0_OnMasterBlockSent(LDD_TUserData *UserDataPtr)
 321:../Generated_Code/GI2C0.c **** {
 826              		.loc 1 321 0
 827              		.cfi_startproc
 828 0000 80B5     		push	{r7, lr}
 829              	.LCFI21:
 830              		.cfi_def_cfa_offset 8
 831              		.cfi_offset 7, -8
 832              		.cfi_offset 14, -4
 833 0002 84B0     		sub	sp, sp, #16
 834              	.LCFI22:
 835              		.cfi_def_cfa_offset 24
 836 0004 00AF     		add	r7, sp, #0
 837              	.LCFI23:
 838              		.cfi_def_cfa_register 7
 839 0006 7860     		str	r0, [r7, #4]
 840              	.LBB6:
 841              	.LBB7:
 322:../Generated_Code/GI2C0.c ****   if (UserDataPtr==&GI2C0_deviceData) { /* it is our own message */
 842              		.loc 1 322 0
 843 0008 7A68     		ldr	r2, [r7, #4]
 844 000a 054B     		ldr	r3, .L63
 845 000c 9A42     		cmp	r2, r3
 846 000e 04D1     		bne	.L61
 847              	.LBB8:
 323:../Generated_Code/GI2C0.c ****     GI2C0_TDataState *devicePtr = (GI2C0_TDataState*)UserDataPtr;
 848              		.loc 1 323 0
 849 0010 7B68     		ldr	r3, [r7, #4]
 850 0012 FB60     		str	r3, [r7, #12]
 324:../Generated_Code/GI2C0.c **** 
 325:../Generated_Code/GI2C0.c ****     devicePtr->dataTransmittedFlg = TRUE;
 851              		.loc 1 325 0
 852 0014 FB68     		ldr	r3, [r7, #12]
 853 0016 0122     		mov	r2, #1
 854 0018 5A70     		strb	r2, [r3, #1]
 855              	.L61:
 856              	.LBE8:
 857              	.LBE7:
 858              	.LBE6:
 326:../Generated_Code/GI2C0.c ****   }
 327:../Generated_Code/GI2C0.c **** }
 859              		.loc 1 327 0
 860 001a BD46     		mov	sp, r7
 861 001c 04B0     		add	sp, sp, #16
 862              		@ sp needed for prologue
 863 001e 80BD     		pop	{r7, pc}
 864              	.L64:
 865              		.align	2
 866              	.L63:
 867 0020 00000000 		.word	_ZL16GI2C0_deviceData
 868              		.cfi_endproc
 869              	.LFE13:
 871              		.section	.text._Z26I2C0_OnMasterBlockReceivedPv,"ax",%progbits
 872              		.align	2
 873              		.global	_Z26I2C0_OnMasterBlockReceivedPv
 874              		.code	16
 875              		.thumb_func
 877              	_Z26I2C0_OnMasterBlockReceivedPv:
 878              	.LFB14:
 328:../Generated_Code/GI2C0.c **** 
 329:../Generated_Code/GI2C0.c **** /*
 330:../Generated_Code/GI2C0.c **** ** ===================================================================
 331:../Generated_Code/GI2C0.c **** **     Method      :  GI2C0_OnMasterBlockReceived (component GenericI2C)
 332:../Generated_Code/GI2C0.c **** **
 333:../Generated_Code/GI2C0.c **** **     Description :
 334:../Generated_Code/GI2C0.c **** **         This method is internal. It is used by Processor Expert only.
 335:../Generated_Code/GI2C0.c **** ** ===================================================================
 336:../Generated_Code/GI2C0.c **** */
 337:../Generated_Code/GI2C0.c **** void I2C0_OnMasterBlockReceived(LDD_TUserData *UserDataPtr)
 338:../Generated_Code/GI2C0.c **** {
 879              		.loc 1 338 0
 880              		.cfi_startproc
 881 0000 80B5     		push	{r7, lr}
 882              	.LCFI24:
 883              		.cfi_def_cfa_offset 8
 884              		.cfi_offset 7, -8
 885              		.cfi_offset 14, -4
 886 0002 84B0     		sub	sp, sp, #16
 887              	.LCFI25:
 888              		.cfi_def_cfa_offset 24
 889 0004 00AF     		add	r7, sp, #0
 890              	.LCFI26:
 891              		.cfi_def_cfa_register 7
 892 0006 7860     		str	r0, [r7, #4]
 893              	.LBB9:
 894              	.LBB10:
 339:../Generated_Code/GI2C0.c ****   if (UserDataPtr==&GI2C0_deviceData) { /* it is our own message */
 895              		.loc 1 339 0
 896 0008 7A68     		ldr	r2, [r7, #4]
 897 000a 054B     		ldr	r3, .L67
 898 000c 9A42     		cmp	r2, r3
 899 000e 04D1     		bne	.L65
 900              	.LBB11:
 340:../Generated_Code/GI2C0.c ****     GI2C0_TDataState *devicePtr = (GI2C0_TDataState*)UserDataPtr;
 901              		.loc 1 340 0
 902 0010 7B68     		ldr	r3, [r7, #4]
 903 0012 FB60     		str	r3, [r7, #12]
 341:../Generated_Code/GI2C0.c **** 
 342:../Generated_Code/GI2C0.c ****     devicePtr->dataReceivedFlg = TRUE;
 904              		.loc 1 342 0
 905 0014 FB68     		ldr	r3, [r7, #12]
 906 0016 0122     		mov	r2, #1
 907 0018 1A70     		strb	r2, [r3]
 908              	.L65:
 909              	.LBE11:
 910              	.LBE10:
 911              	.LBE9:
 343:../Generated_Code/GI2C0.c ****   }
 344:../Generated_Code/GI2C0.c **** }
 912              		.loc 1 344 0
 913 001a BD46     		mov	sp, r7
 914 001c 04B0     		add	sp, sp, #16
 915              		@ sp needed for prologue
 916 001e 80BD     		pop	{r7, pc}
 917              	.L68:
 918              		.align	2
 919              	.L67:
 920 0020 00000000 		.word	_ZL16GI2C0_deviceData
 921              		.cfi_endproc
 922              	.LFE14:
 924              		.section	.text._Z10GI2C0_Initv,"ax",%progbits
 925              		.align	2
 926              		.global	_Z10GI2C0_Initv
 927              		.code	16
 928              		.thumb_func
 930              	_Z10GI2C0_Initv:
 931              	.LFB15:
 345:../Generated_Code/GI2C0.c **** 
 346:../Generated_Code/GI2C0.c **** /*
 347:../Generated_Code/GI2C0.c **** ** ===================================================================
 348:../Generated_Code/GI2C0.c **** **     Method      :  GI2C0_Init (component GenericI2C)
 349:../Generated_Code/GI2C0.c **** **     Description :
 350:../Generated_Code/GI2C0.c **** **         Initializes the driver.
 351:../Generated_Code/GI2C0.c **** **     Parameters  : None
 352:../Generated_Code/GI2C0.c **** **     Returns     : Nothing
 353:../Generated_Code/GI2C0.c **** ** ===================================================================
 354:../Generated_Code/GI2C0.c **** */
 355:../Generated_Code/GI2C0.c **** void GI2C0_Init(void)
 356:../Generated_Code/GI2C0.c **** {
 932              		.loc 1 356 0
 933              		.cfi_startproc
 934 0000 80B5     		push	{r7, lr}
 935              	.LCFI27:
 936              		.cfi_def_cfa_offset 8
 937              		.cfi_offset 7, -8
 938              		.cfi_offset 14, -4
 939 0002 00AF     		add	r7, sp, #0
 940              	.LCFI28:
 941              		.cfi_def_cfa_register 7
 357:../Generated_Code/GI2C0.c ****   GI2C0_deviceData.handle = I2C0_Init(&GI2C0_deviceData);
 942              		.loc 1 357 0
 943 0004 0C4B     		ldr	r3, .L74
 944 0006 181C     		mov	r0, r3
 945 0008 FFF7FEFF 		bl	I2C0_Init
 946 000c 021C     		mov	r2, r0
 947 000e 0A4B     		ldr	r3, .L74
 948 0010 5A60     		str	r2, [r3, #4]
 358:../Generated_Code/GI2C0.c ****   if (GI2C0_deviceData.handle==NULL) {
 949              		.loc 1 358 0
 950 0012 094B     		ldr	r3, .L74
 951 0014 5B68     		ldr	r3, [r3, #4]
 952 0016 002B     		cmp	r3, #0
 953 0018 00D1     		bne	.L70
 954              	.L71:
 359:../Generated_Code/GI2C0.c ****     for(;;){} /* failure! */
 955              		.loc 1 359 0
 956 001a FEE7     		b	.L71
 957              	.L70:
 360:../Generated_Code/GI2C0.c ****   }
 361:../Generated_Code/GI2C0.c ****   GI2C0_busSem = FreeRTOS0_xSemaphoreCreateRecursiveMutex();
 958              		.loc 1 361 0
 959 001c 0420     		mov	r0, #4
 960 001e FFF7FEFF 		bl	xQueueCreateMutex
 961 0022 021C     		mov	r2, r0
 962 0024 054B     		ldr	r3, .L74+4
 963 0026 1A60     		str	r2, [r3]
 362:../Generated_Code/GI2C0.c ****   if (GI2C0_busSem==NULL) { /* semaphore creation failed */
 964              		.loc 1 362 0
 965 0028 044B     		ldr	r3, .L74+4
 966 002a 1B68     		ldr	r3, [r3]
 967 002c 002B     		cmp	r3, #0
 968 002e 00D1     		bne	.L69
 969              	.L73:
 363:../Generated_Code/GI2C0.c ****     for(;;) {} /* error, not enough memory? */
 970              		.loc 1 363 0
 971 0030 FEE7     		b	.L73
 972              	.L69:
 364:../Generated_Code/GI2C0.c ****   }
 365:../Generated_Code/GI2C0.c **** }
 973              		.loc 1 365 0
 974 0032 BD46     		mov	sp, r7
 975              		@ sp needed for prologue
 976 0034 80BD     		pop	{r7, pc}
 977              	.L75:
 978 0036 C046     		.align	2
 979              	.L74:
 980 0038 00000000 		.word	_ZL16GI2C0_deviceData
 981 003c 00000000 		.word	_ZL12GI2C0_busSem
 982              		.cfi_endproc
 983              	.LFE15:
 985              		.section	.text._Z12GI2C0_Deinitv,"ax",%progbits
 986              		.align	2
 987              		.global	_Z12GI2C0_Deinitv
 988              		.code	16
 989              		.thumb_func
 991              	_Z12GI2C0_Deinitv:
 992              	.LFB16:
 366:../Generated_Code/GI2C0.c **** 
 367:../Generated_Code/GI2C0.c **** /*
 368:../Generated_Code/GI2C0.c **** ** ===================================================================
 369:../Generated_Code/GI2C0.c **** **     Method      :  GI2C0_Deinit (component GenericI2C)
 370:../Generated_Code/GI2C0.c **** **     Description :
 371:../Generated_Code/GI2C0.c **** **         Deinitializes the driver.
 372:../Generated_Code/GI2C0.c **** **     Parameters  : None
 373:../Generated_Code/GI2C0.c **** **     Returns     : Nothing
 374:../Generated_Code/GI2C0.c **** ** ===================================================================
 375:../Generated_Code/GI2C0.c **** */
 376:../Generated_Code/GI2C0.c **** void GI2C0_Deinit(void)
 377:../Generated_Code/GI2C0.c **** {
 993              		.loc 1 377 0
 994              		.cfi_startproc
 995 0000 80B5     		push	{r7, lr}
 996              	.LCFI29:
 997              		.cfi_def_cfa_offset 8
 998              		.cfi_offset 7, -8
 999              		.cfi_offset 14, -4
 1000 0002 00AF     		add	r7, sp, #0
 1001              	.LCFI30:
 1002              		.cfi_def_cfa_register 7
 378:../Generated_Code/GI2C0.c ****   I2C0_Deinit(&GI2C0_deviceData);
 1003              		.loc 1 378 0
 1004 0004 054B     		ldr	r3, .L77
 1005 0006 181C     		mov	r0, r3
 1006 0008 FFF7FEFF 		bl	I2C0_Deinit
 379:../Generated_Code/GI2C0.c ****   FreeRTOS0_vSemaphoreDelete(GI2C0_busSem);
 1007              		.loc 1 379 0
 1008 000c 044B     		ldr	r3, .L77+4
 1009 000e 1B68     		ldr	r3, [r3]
 1010 0010 181C     		mov	r0, r3
 1011 0012 FFF7FEFF 		bl	vQueueDelete
 380:../Generated_Code/GI2C0.c **** }
 1012              		.loc 1 380 0
 1013 0016 BD46     		mov	sp, r7
 1014              		@ sp needed for prologue
 1015 0018 80BD     		pop	{r7, pc}
 1016              	.L78:
 1017 001a C046     		.align	2
 1018              	.L77:
 1019 001c 00000000 		.word	_ZL16GI2C0_deviceData
 1020 0020 00000000 		.word	_ZL12GI2C0_busSem
 1021              		.cfi_endproc
 1022              	.LFE16:
 1024              		.section	.text._Z18GI2C0_GetSemaphorev,"ax",%progbits
 1025              		.align	2
 1026              		.global	_Z18GI2C0_GetSemaphorev
 1027              		.code	16
 1028              		.thumb_func
 1030              	_Z18GI2C0_GetSemaphorev:
 1031              	.LFB17:
 381:../Generated_Code/GI2C0.c **** 
 382:../Generated_Code/GI2C0.c **** /*
 383:../Generated_Code/GI2C0.c **** ** ===================================================================
 384:../Generated_Code/GI2C0.c **** **     Method      :  GI2C0_GetSemaphore (component GenericI2C)
 385:../Generated_Code/GI2C0.c **** **     Description :
 386:../Generated_Code/GI2C0.c **** **         Returns the currently allocated semaphore.
 387:../Generated_Code/GI2C0.c **** **     Parameters  : None
 388:../Generated_Code/GI2C0.c **** **     Returns     :
 389:../Generated_Code/GI2C0.c **** **         ---             - Error code
 390:../Generated_Code/GI2C0.c **** ** ===================================================================
 391:../Generated_Code/GI2C0.c **** */
 392:../Generated_Code/GI2C0.c **** void* GI2C0_GetSemaphore(void)
 393:../Generated_Code/GI2C0.c **** {
 1032              		.loc 1 393 0
 1033              		.cfi_startproc
 1034 0000 80B5     		push	{r7, lr}
 1035              	.LCFI31:
 1036              		.cfi_def_cfa_offset 8
 1037              		.cfi_offset 7, -8
 1038              		.cfi_offset 14, -4
 1039 0002 00AF     		add	r7, sp, #0
 1040              	.LCFI32:
 1041              		.cfi_def_cfa_register 7
 394:../Generated_Code/GI2C0.c ****   return GI2C0_busSem;
 1042              		.loc 1 394 0
 1043 0004 024B     		ldr	r3, .L81
 1044 0006 1B68     		ldr	r3, [r3]
 395:../Generated_Code/GI2C0.c **** }
 1045              		.loc 1 395 0
 1046 0008 181C     		mov	r0, r3
 1047 000a BD46     		mov	sp, r7
 1048              		@ sp needed for prologue
 1049 000c 80BD     		pop	{r7, pc}
 1050              	.L82:
 1051 000e C046     		.align	2
 1052              	.L81:
 1053 0010 00000000 		.word	_ZL12GI2C0_busSem
 1054              		.cfi_endproc
 1055              	.LFE17:
 1057              		.section	.text._Z22GI2C0_ReadByteAddress8hhPh,"ax",%progbits
 1058              		.align	2
 1059              		.global	_Z22GI2C0_ReadByteAddress8hhPh
 1060              		.code	16
 1061              		.thumb_func
 1063              	_Z22GI2C0_ReadByteAddress8hhPh:
 1064              	.LFB18:
 396:../Generated_Code/GI2C0.c **** 
 397:../Generated_Code/GI2C0.c **** /*
 398:../Generated_Code/GI2C0.c **** ** ===================================================================
 399:../Generated_Code/GI2C0.c **** **     Method      :  GI2C0_ReadByteAddress8 (component GenericI2C)
 400:../Generated_Code/GI2C0.c **** **     Description :
 401:../Generated_Code/GI2C0.c **** **         Read a byte from the device using an 8bit memory address.
 402:../Generated_Code/GI2C0.c **** **         This writes (S+i2cAddr+0), (memAddr), (Sr+i2cAddr+1), (data)..
 403:../Generated_Code/GI2C0.c **** **         .(data+P)
 404:../Generated_Code/GI2C0.c **** **     Parameters  :
 405:../Generated_Code/GI2C0.c **** **         NAME            - DESCRIPTION
 406:../Generated_Code/GI2C0.c **** **         i2cAddr         - I2C Address of device
 407:../Generated_Code/GI2C0.c **** **         memAddr         - Device memory address
 408:../Generated_Code/GI2C0.c **** **       * data            - Pointer to read buffer (single byte)
 409:../Generated_Code/GI2C0.c **** **     Returns     :
 410:../Generated_Code/GI2C0.c **** **         ---             - Error code
 411:../Generated_Code/GI2C0.c **** ** ===================================================================
 412:../Generated_Code/GI2C0.c **** */
 413:../Generated_Code/GI2C0.c **** byte GI2C0_ReadByteAddress8(byte i2cAddr, byte memAddr, byte *data)
 414:../Generated_Code/GI2C0.c **** {
 1065              		.loc 1 414 0
 1066              		.cfi_startproc
 1067 0000 80B5     		push	{r7, lr}
 1068              	.LCFI33:
 1069              		.cfi_def_cfa_offset 8
 1070              		.cfi_offset 7, -8
 1071              		.cfi_offset 14, -4
 1072 0002 84B0     		sub	sp, sp, #16
 1073              	.LCFI34:
 1074              		.cfi_def_cfa_offset 24
 1075 0004 02AF     		add	r7, sp, #8
 1076              	.LCFI35:
 1077              		.cfi_def_cfa 7, 16
 1078 0006 3A60     		str	r2, [r7]
 1079 0008 FB1D     		add	r3, r7, #7
 1080 000a 021C     		add	r2, r0, #0
 1081 000c 1A70     		strb	r2, [r3]
 1082 000e BB1D     		add	r3, r7, #6
 1083 0010 0A1C     		add	r2, r1, #0
 1084 0012 1A70     		strb	r2, [r3]
 415:../Generated_Code/GI2C0.c ****   return GI2C0_ReadAddress(i2cAddr, &memAddr, sizeof(memAddr), data, 1);
 1085              		.loc 1 415 0
 1086 0014 FB1D     		add	r3, r7, #7
 1087 0016 1978     		ldrb	r1, [r3]
 1088 0018 BA1D     		add	r2, r7, #6
 1089 001a 3B68     		ldr	r3, [r7]
 1090 001c 0120     		mov	r0, #1
 1091 001e 0090     		str	r0, [sp]
 1092 0020 081C     		mov	r0, r1
 1093 0022 111C     		mov	r1, r2
 1094 0024 0122     		mov	r2, #1
 1095 0026 FFF7FEFF 		bl	_Z17GI2C0_ReadAddresshPhhS_t
 1096 002a 031C     		mov	r3, r0
 416:../Generated_Code/GI2C0.c **** }
 1097              		.loc 1 416 0
 1098 002c 181C     		mov	r0, r3
 1099 002e BD46     		mov	sp, r7
 1100 0030 02B0     		add	sp, sp, #8
 1101              		@ sp needed for prologue
 1102 0032 80BD     		pop	{r7, pc}
 1103              		.cfi_endproc
 1104              	.LFE18:
 1106              		.section	.text._Z23GI2C0_WriteByteAddress8hhh,"ax",%progbits
 1107              		.align	2
 1108              		.global	_Z23GI2C0_WriteByteAddress8hhh
 1109              		.code	16
 1110              		.thumb_func
 1112              	_Z23GI2C0_WriteByteAddress8hhh:
 1113              	.LFB19:
 417:../Generated_Code/GI2C0.c **** 
 418:../Generated_Code/GI2C0.c **** /*
 419:../Generated_Code/GI2C0.c **** ** ===================================================================
 420:../Generated_Code/GI2C0.c **** **     Method      :  GI2C0_WriteByteAddress8 (component GenericI2C)
 421:../Generated_Code/GI2C0.c **** **     Description :
 422:../Generated_Code/GI2C0.c **** **         Write a byte to the device using an 8bit memory address:
 423:../Generated_Code/GI2C0.c **** **         (S+i2cAddr+0), (memAddr), (data)...(data+P)
 424:../Generated_Code/GI2C0.c **** **     Parameters  :
 425:../Generated_Code/GI2C0.c **** **         NAME            - DESCRIPTION
 426:../Generated_Code/GI2C0.c **** **         i2cAddr         - I2C address of device
 427:../Generated_Code/GI2C0.c **** **         memAddr         - Device memory address
 428:../Generated_Code/GI2C0.c **** **         data            - Data value
 429:../Generated_Code/GI2C0.c **** **     Returns     :
 430:../Generated_Code/GI2C0.c **** **         ---             - Error code
 431:../Generated_Code/GI2C0.c **** ** ===================================================================
 432:../Generated_Code/GI2C0.c **** */
 433:../Generated_Code/GI2C0.c **** byte GI2C0_WriteByteAddress8(byte i2cAddr, byte memAddr, byte data)
 434:../Generated_Code/GI2C0.c **** {
 1114              		.loc 1 434 0
 1115              		.cfi_startproc
 1116 0000 80B5     		push	{r7, lr}
 1117              	.LCFI36:
 1118              		.cfi_def_cfa_offset 8
 1119              		.cfi_offset 7, -8
 1120              		.cfi_offset 14, -4
 1121 0002 84B0     		sub	sp, sp, #16
 1122              	.LCFI37:
 1123              		.cfi_def_cfa_offset 24
 1124 0004 02AF     		add	r7, sp, #8
 1125              	.LCFI38:
 1126              		.cfi_def_cfa 7, 16
 1127 0006 FB1D     		add	r3, r7, #7
 1128 0008 1870     		strb	r0, [r3]
 1129 000a BB1D     		add	r3, r7, #6
 1130 000c 1970     		strb	r1, [r3]
 1131 000e 7B1D     		add	r3, r7, #5
 1132 0010 1A70     		strb	r2, [r3]
 435:../Generated_Code/GI2C0.c ****   return GI2C0_WriteAddress(i2cAddr, &memAddr, sizeof(memAddr), &data, 1);
 1133              		.loc 1 435 0
 1134 0012 FB1D     		add	r3, r7, #7
 1135 0014 1978     		ldrb	r1, [r3]
 1136 0016 BA1D     		add	r2, r7, #6
 1137 0018 7B1D     		add	r3, r7, #5
 1138 001a 0120     		mov	r0, #1
 1139 001c 0090     		str	r0, [sp]
 1140 001e 081C     		mov	r0, r1
 1141 0020 111C     		mov	r1, r2
 1142 0022 0122     		mov	r2, #1
 1143 0024 FFF7FEFF 		bl	_Z18GI2C0_WriteAddresshPhhS_t
 1144 0028 031C     		mov	r3, r0
 436:../Generated_Code/GI2C0.c **** }
 1145              		.loc 1 436 0
 1146 002a 181C     		mov	r0, r3
 1147 002c BD46     		mov	sp, r7
 1148 002e 02B0     		add	sp, sp, #8
 1149              		@ sp needed for prologue
 1150 0030 80BD     		pop	{r7, pc}
 1151              		.cfi_endproc
 1152              	.LFE19:
 1154 0032 C046     		.section	.text._Z16GI2C0_ScanDeviceh,"ax",%progbits
 1155              		.align	2
 1156              		.global	_Z16GI2C0_ScanDeviceh
 1157              		.code	16
 1158              		.thumb_func
 1160              	_Z16GI2C0_ScanDeviceh:
 1161              	.LFB20:
 437:../Generated_Code/GI2C0.c **** 
 438:../Generated_Code/GI2C0.c **** /*
 439:../Generated_Code/GI2C0.c **** ** ===================================================================
 440:../Generated_Code/GI2C0.c **** **     Method      :  GI2C0_ScanDevice (component GenericI2C)
 441:../Generated_Code/GI2C0.c **** **     Description :
 442:../Generated_Code/GI2C0.c **** **         Checks if a device responds on the bus with an ACK.
 443:../Generated_Code/GI2C0.c **** **     Parameters  :
 444:../Generated_Code/GI2C0.c **** **         NAME            - DESCRIPTION
 445:../Generated_Code/GI2C0.c **** **         i2cAddr         - 7bit I2C device address
 446:../Generated_Code/GI2C0.c **** **     Returns     :
 447:../Generated_Code/GI2C0.c **** **         ---             - Error code
 448:../Generated_Code/GI2C0.c **** ** ===================================================================
 449:../Generated_Code/GI2C0.c **** */
 450:../Generated_Code/GI2C0.c **** byte GI2C0_ScanDevice(byte i2cAddr)
 451:../Generated_Code/GI2C0.c **** {
 1162              		.loc 1 451 0
 1163              		.cfi_startproc
 1164 0000 80B5     		push	{r7, lr}
 1165              	.LCFI39:
 1166              		.cfi_def_cfa_offset 8
 1167              		.cfi_offset 7, -8
 1168              		.cfi_offset 14, -4
 1169 0002 84B0     		sub	sp, sp, #16
 1170              	.LCFI40:
 1171              		.cfi_def_cfa_offset 24
 1172 0004 00AF     		add	r7, sp, #0
 1173              	.LCFI41:
 1174              		.cfi_def_cfa_register 7
 1175 0006 021C     		mov	r2, r0
 1176 0008 FB1D     		add	r3, r7, #7
 1177 000a 1A70     		strb	r2, [r3]
 1178              	.LBB12:
 452:../Generated_Code/GI2C0.c ****   byte res = ERR_OK;
 1179              		.loc 1 452 0
 1180 000c 3B1C     		mov	r3, r7
 1181 000e 0F33     		add	r3, r3, #15
 1182 0010 0022     		mov	r2, #0
 1183 0012 1A70     		strb	r2, [r3]
 453:../Generated_Code/GI2C0.c ****   LDD_I2C_TErrorMask errMask;
 454:../Generated_Code/GI2C0.c ****   byte dummy;
 455:../Generated_Code/GI2C0.c **** 
 456:../Generated_Code/GI2C0.c ****   if (GI2C0_SelectSlave(i2cAddr)!=ERR_OK) {
 1184              		.loc 1 456 0
 1185 0014 FB1D     		add	r3, r7, #7
 1186 0016 1B78     		ldrb	r3, [r3]
 1187 0018 181C     		mov	r0, r3
 1188 001a FFF7FEFF 		bl	_Z17GI2C0_SelectSlaveh
 1189 001e 031C     		mov	r3, r0
 1190 0020 5A1E     		sub	r2, r3, #1
 1191 0022 9341     		sbc	r3, r3, r2
 1192 0024 DBB2     		uxtb	r3, r3
 1193 0026 002B     		cmp	r3, #0
 1194 0028 01D0     		beq	.L88
 457:../Generated_Code/GI2C0.c ****     return ERR_FAILED;
 1195              		.loc 1 457 0
 1196 002a 1B23     		mov	r3, #27
 1197 002c 46E0     		b	.L94
 1198              	.L88:
 458:../Generated_Code/GI2C0.c ****   }
 459:../Generated_Code/GI2C0.c ****   for(;;) { /* breaks */
 460:../Generated_Code/GI2C0.c ****     /* send device address */
 461:../Generated_Code/GI2C0.c ****     GI2C0_deviceData.dataTransmittedFlg = FALSE;
 1199              		.loc 1 461 0
 1200 002e 254B     		ldr	r3, .L97
 1201 0030 0022     		mov	r2, #0
 1202 0032 5A70     		strb	r2, [r3, #1]
 462:../Generated_Code/GI2C0.c ****     res = I2C0_MasterReceiveBlock(GI2C0_deviceData.handle, &dummy, 1, LDD_I2C_SEND_STOP);
 1203              		.loc 1 462 0
 1204 0034 234B     		ldr	r3, .L97
 1205 0036 5A68     		ldr	r2, [r3, #4]
 1206 0038 3B1C     		mov	r3, r7
 1207 003a 0B33     		add	r3, r3, #11
 1208 003c 101C     		mov	r0, r2
 1209 003e 191C     		mov	r1, r3
 1210 0040 0122     		mov	r2, #1
 1211 0042 0123     		mov	r3, #1
 1212 0044 FFF7FEFF 		bl	I2C0_MasterReceiveBlock
 1213 0048 031C     		mov	r3, r0
 1214 004a 1A1C     		mov	r2, r3
 1215 004c 3B1C     		mov	r3, r7
 1216 004e 0F33     		add	r3, r3, #15
 1217 0050 1A70     		strb	r2, [r3]
 463:../Generated_Code/GI2C0.c ****     if (res!=ERR_OK) {
 1218              		.loc 1 463 0
 1219 0052 3B1C     		mov	r3, r7
 1220 0054 0F33     		add	r3, r3, #15
 1221 0056 1B78     		ldrb	r3, [r3]
 1222 0058 002B     		cmp	r3, #0
 1223 005a 1FD1     		bne	.L95
 1224              	.L90:
 464:../Generated_Code/GI2C0.c ****       break; /* break for(;;) */
 465:../Generated_Code/GI2C0.c ****     }
 466:../Generated_Code/GI2C0.c ****     do { /* Wait until data is sent */
 467:../Generated_Code/GI2C0.c ****     } while (!GI2C0_deviceData.dataTransmittedFlg);
 1225              		.loc 1 467 0
 1226 005c 194B     		ldr	r3, .L97
 1227 005e 5B78     		ldrb	r3, [r3, #1]
 1228 0060 DBB2     		uxtb	r3, r3
 466:../Generated_Code/GI2C0.c ****     do { /* Wait until data is sent */
 1229              		.loc 1 466 0
 1230 0062 0122     		mov	r2, #1
 1231 0064 5340     		eor	r3, r2
 1232 0066 DBB2     		uxtb	r3, r3
 1233 0068 002B     		cmp	r3, #0
 1234 006a F7D1     		bne	.L90
 468:../Generated_Code/GI2C0.c ****     errMask = 0;
 1235              		.loc 1 468 0
 1236 006c 3B1C     		mov	r3, r7
 1237 006e 0C33     		add	r3, r3, #12
 1238 0070 0022     		mov	r2, #0
 1239 0072 1A80     		strh	r2, [r3]
 469:../Generated_Code/GI2C0.c ****     (void)I2C0_GetError(GI2C0_deviceData.handle, &errMask);
 1240              		.loc 1 469 0
 1241 0074 134B     		ldr	r3, .L97
 1242 0076 5A68     		ldr	r2, [r3, #4]
 1243 0078 3B1C     		mov	r3, r7
 1244 007a 0C33     		add	r3, r3, #12
 1245 007c 101C     		mov	r0, r2
 1246 007e 191C     		mov	r1, r3
 1247 0080 FFF7FEFF 		bl	I2C0_GetError
 470:../Generated_Code/GI2C0.c ****     if (errMask&LDD_I2C_MASTER_NACK) { /* master did not receive ACK from slave */
 1248              		.loc 1 470 0
 1249 0084 3B1C     		mov	r3, r7
 1250 0086 0C33     		add	r3, r3, #12
 1251 0088 1B88     		ldrh	r3, [r3]
 1252 008a 1A1C     		mov	r2, r3
 1253 008c 0823     		mov	r3, #8
 1254 008e 1340     		and	r3, r2
 1255 0090 06D0     		beq	.L96
 471:../Generated_Code/GI2C0.c ****       res = ERR_NOTAVAIL; /* device did not respond with ACK */
 1256              		.loc 1 471 0
 1257 0092 3B1C     		mov	r3, r7
 1258 0094 0F33     		add	r3, r3, #15
 1259 0096 0922     		mov	r2, #9
 1260 0098 1A70     		strb	r2, [r3]
 472:../Generated_Code/GI2C0.c ****     }
 473:../Generated_Code/GI2C0.c ****     break; /* break for(;;) */
 1261              		.loc 1 473 0
 1262 009a 01E0     		b	.L96
 1263              	.L95:
 464:../Generated_Code/GI2C0.c ****       break; /* break for(;;) */
 1264              		.loc 1 464 0
 1265 009c C046     		mov	r8, r8
 1266 009e 00E0     		b	.L91
 1267              	.L96:
 1268              		.loc 1 473 0
 1269 00a0 C046     		mov	r8, r8
 1270              	.L91:
 474:../Generated_Code/GI2C0.c ****   } /* for(;;) */
 475:../Generated_Code/GI2C0.c ****   if (GI2C0_UnselectSlave()!=ERR_OK) {
 1271              		.loc 1 475 0
 1272 00a2 FFF7FEFF 		bl	_Z19GI2C0_UnselectSlavev
 1273 00a6 031C     		mov	r3, r0
 1274 00a8 5A1E     		sub	r2, r3, #1
 1275 00aa 9341     		sbc	r3, r3, r2
 1276 00ac DBB2     		uxtb	r3, r3
 1277 00ae 002B     		cmp	r3, #0
 1278 00b0 01D0     		beq	.L93
 476:../Generated_Code/GI2C0.c ****     return ERR_FAILED;
 1279              		.loc 1 476 0
 1280 00b2 1B23     		mov	r3, #27
 1281 00b4 02E0     		b	.L94
 1282              	.L93:
 477:../Generated_Code/GI2C0.c ****   }
 478:../Generated_Code/GI2C0.c ****   return res;
 1283              		.loc 1 478 0
 1284 00b6 3B1C     		mov	r3, r7
 1285 00b8 0F33     		add	r3, r3, #15
 1286 00ba 1B78     		ldrb	r3, [r3]
 1287              	.L94:
 1288              	.LBE12:
 479:../Generated_Code/GI2C0.c **** }
 1289              		.loc 1 479 0
 1290 00bc 181C     		mov	r0, r3
 1291 00be BD46     		mov	sp, r7
 1292 00c0 04B0     		add	sp, sp, #16
 1293              		@ sp needed for prologue
 1294 00c2 80BD     		pop	{r7, pc}
 1295              	.L98:
 1296              		.align	2
 1297              	.L97:
 1298 00c4 00000000 		.word	_ZL16GI2C0_deviceData
 1299              		.cfi_endproc
 1300              	.LFE20:
 1302              		.global	__aeabi_uidiv
 1303              		.global	__aeabi_uidivmod
 1304              		.section	.text._Z14GI2C0_ProbeACKPvt20GI2C0_EnumSendFlags_t,"ax",%progbits
 1305              		.align	2
 1306              		.global	_Z14GI2C0_ProbeACKPvt20GI2C0_EnumSendFlags_t
 1307              		.code	16
 1308              		.thumb_func
 1310              	_Z14GI2C0_ProbeACKPvt20GI2C0_EnumSendFlags_t:
 1311              	.LFB21:
 480:../Generated_Code/GI2C0.c **** 
 481:../Generated_Code/GI2C0.c **** /*
 482:../Generated_Code/GI2C0.c **** ** ===================================================================
 483:../Generated_Code/GI2C0.c **** **     Method      :  GI2C0_ProbeACK (component GenericI2C)
 484:../Generated_Code/GI2C0.c **** **     Description :
 485:../Generated_Code/GI2C0.c **** **         Accesses the bus to check if the device responds with an ACK
 486:../Generated_Code/GI2C0.c **** **         (ACK polling).
 487:../Generated_Code/GI2C0.c **** **     Parameters  :
 488:../Generated_Code/GI2C0.c **** **         NAME            - DESCRIPTION
 489:../Generated_Code/GI2C0.c **** **       * data            - Data write buffer
 490:../Generated_Code/GI2C0.c **** **         dataSize        - 
 491:../Generated_Code/GI2C0.c **** **         flags           - flags for the transaction
 492:../Generated_Code/GI2C0.c **** **         WaitTimeUS      - Waiting time in microseconds
 493:../Generated_Code/GI2C0.c **** **                           to wait for the ACK on the bus.
 494:../Generated_Code/GI2C0.c **** **     Returns     :
 495:../Generated_Code/GI2C0.c **** **         ---             - Error code
 496:../Generated_Code/GI2C0.c **** ** ===================================================================
 497:../Generated_Code/GI2C0.c **** */
 498:../Generated_Code/GI2C0.c **** byte GI2C0_ProbeACK(void* data, word dataSize, GI2C0_EnumSendFlags flags, word WaitTimeUS)
 499:../Generated_Code/GI2C0.c **** {
 1312              		.loc 1 499 0
 1313              		.cfi_startproc
 1314 0000 80B5     		push	{r7, lr}
 1315              	.LCFI42:
 1316              		.cfi_def_cfa_offset 8
 1317              		.cfi_offset 7, -8
 1318              		.cfi_offset 14, -4
 1319 0002 86B0     		sub	sp, sp, #24
 1320              	.LCFI43:
 1321              		.cfi_def_cfa_offset 32
 1322 0004 00AF     		add	r7, sp, #0
 1323              	.LCFI44:
 1324              		.cfi_def_cfa_register 7
 1325 0006 F860     		str	r0, [r7, #12]
 1326 0008 081C     		mov	r0, r1
 1327 000a 111C     		mov	r1, r2
 1328 000c 1A1C     		mov	r2, r3
 1329 000e 3B1C     		mov	r3, r7
 1330 0010 0A33     		add	r3, r3, #10
 1331 0012 1880     		strh	r0, [r3]
 1332 0014 3B1C     		mov	r3, r7
 1333 0016 0933     		add	r3, r3, #9
 1334 0018 1970     		strb	r1, [r3]
 1335 001a BB1D     		add	r3, r7, #6
 1336 001c 1A80     		strh	r2, [r3]
 1337              	.LBB13:
 500:../Generated_Code/GI2C0.c ****   byte res = ERR_OK;
 1338              		.loc 1 500 0
 1339 001e 3B1C     		mov	r3, r7
 1340 0020 1733     		add	r3, r3, #23
 1341 0022 0022     		mov	r2, #0
 1342 0024 1A70     		strb	r2, [r3]
 501:../Generated_Code/GI2C0.c **** 
 502:../Generated_Code/GI2C0.c ****   GI2C0_deviceData.dataTransmittedFlg = FALSE;
 1343              		.loc 1 502 0
 1344 0026 404B     		ldr	r3, .L108
 1345 0028 0022     		mov	r2, #0
 1346 002a 5A70     		strb	r2, [r3, #1]
 503:../Generated_Code/GI2C0.c ****   res = I2C0_MasterSendBlock(GI2C0_deviceData.handle, data, dataSize, flags==GI2C0_SEND_STOP?LDD_I2
 1347              		.loc 1 503 0
 1348 002c 3E4B     		ldr	r3, .L108
 1349 002e 5868     		ldr	r0, [r3, #4]
 1350 0030 3B1C     		mov	r3, r7
 1351 0032 0933     		add	r3, r3, #9
 1352 0034 1B78     		ldrb	r3, [r3]
 1353 0036 002B     		cmp	r3, #0
 1354 0038 01D1     		bne	.L100
 1355              		.loc 1 503 0 is_stmt 0
 1356 003a 0123     		mov	r3, #1
 1357 003c 00E0     		b	.L101
 1358              	.L100:
 1359              		.loc 1 503 0
 1360 003e 0023     		mov	r3, #0
 1361              	.L101:
 1362              		.loc 1 503 0
 1363 0040 F968     		ldr	r1, [r7, #12]
 1364 0042 3A1C     		mov	r2, r7
 1365 0044 0A32     		add	r2, r2, #10
 1366 0046 1288     		ldrh	r2, [r2]
 1367 0048 FFF7FEFF 		bl	I2C0_MasterSendBlock
 1368 004c 031C     		mov	r3, r0
 1369 004e 1A1C     		mov	r2, r3
 1370 0050 3B1C     		mov	r3, r7
 1371 0052 1733     		add	r3, r3, #23
 1372 0054 1A70     		strb	r2, [r3]
 504:../Generated_Code/GI2C0.c ****   if (res!=ERR_OK) {
 1373              		.loc 1 504 0 is_stmt 1
 1374 0056 3B1C     		mov	r3, r7
 1375 0058 1733     		add	r3, r3, #23
 1376 005a 1B78     		ldrb	r3, [r3]
 1377 005c 002B     		cmp	r3, #0
 1378 005e 03D0     		beq	.L102
 505:../Generated_Code/GI2C0.c ****     return res;
 1379              		.loc 1 505 0
 1380 0060 3B1C     		mov	r3, r7
 1381 0062 1733     		add	r3, r3, #23
 1382 0064 1B78     		ldrb	r3, [r3]
 1383 0066 5BE0     		b	.L103
 1384              	.L102:
 506:../Generated_Code/GI2C0.c ****   }
 507:../Generated_Code/GI2C0.c ****   WAIT0_Waitus(WaitTimeUS);
 1385              		.loc 1 507 0
 1386 0068 BB1D     		add	r3, r7, #6
 1387 006a 1A88     		ldrh	r2, [r3]
 1388 006c 131C     		mov	r3, r2
 1389 006e 5B00     		lsl	r3, r3, #1
 1390 0070 9B18     		add	r3, r3, r2
 1391 0072 DB00     		lsl	r3, r3, #3
 1392 0074 14D0     		beq	.L104
 1393              		.loc 1 507 0 is_stmt 0
 1394 0076 BB1D     		add	r3, r7, #6
 1395 0078 1B88     		ldrh	r3, [r3]
 1396 007a 002B     		cmp	r3, #0
 1397 007c 10D0     		beq	.L104
 1398              		.loc 1 507 0
 1399 007e BB1D     		add	r3, r7, #6
 1400 0080 1A88     		ldrh	r2, [r3]
 1401 0082 2A4B     		ldr	r3, .L108+4
 1402 0084 9A42     		cmp	r2, r3
 1403 0086 0BD9     		bls	.L104
 1404              		.loc 1 507 0
 1405 0088 BB1D     		add	r3, r7, #6
 1406 008a 1B88     		ldrh	r3, [r3]
 1407 008c 181C     		mov	r0, r3
 1408 008e FA23     		mov	r3, #250
 1409 0090 9900     		lsl	r1, r3, #2
 1410 0092 FFF7FEFF 		bl	__aeabi_uidiv
 1411 0096 031C     		mov	r3, r0
 1412 0098 9BB2     		uxth	r3, r3
 1413 009a 181C     		mov	r0, r3
 1414 009c FFF7FEFF 		bl	WAIT0_Waitms
 1415              	.L104:
 1416              		.loc 1 507 0
 1417 00a0 BB1D     		add	r3, r7, #6
 1418 00a2 1B88     		ldrh	r3, [r3]
 1419 00a4 181C     		mov	r0, r3
 1420 00a6 FA23     		mov	r3, #250
 1421 00a8 9900     		lsl	r1, r3, #2
 1422 00aa FFF7FEFF 		bl	__aeabi_uidivmod
 1423 00ae 0B1C     		mov	r3, r1
 1424 00b0 9BB2     		uxth	r3, r3
 1425 00b2 1A1C     		mov	r2, r3
 1426 00b4 131C     		mov	r3, r2
 1427 00b6 5B00     		lsl	r3, r3, #1
 1428 00b8 9B18     		add	r3, r3, r2
 1429 00ba DB00     		lsl	r3, r3, #3
 1430 00bc 23D0     		beq	.L105
 1431              		.loc 1 507 0
 1432 00be BB1D     		add	r3, r7, #6
 1433 00c0 1B88     		ldrh	r3, [r3]
 1434 00c2 181C     		mov	r0, r3
 1435 00c4 FA23     		mov	r3, #250
 1436 00c6 9900     		lsl	r1, r3, #2
 1437 00c8 FFF7FEFF 		bl	__aeabi_uidivmod
 1438 00cc 0B1C     		mov	r3, r1
 1439 00ce 9BB2     		uxth	r3, r3
 1440 00d0 1A1C     		mov	r2, r3
 1441 00d2 131C     		mov	r3, r2
 1442 00d4 5B00     		lsl	r3, r3, #1
 1443 00d6 9B18     		add	r3, r3, r2
 1444 00d8 DB00     		lsl	r3, r3, #3
 1445 00da 0A2B     		cmp	r3, #10
 1446 00dc 02D8     		bhi	.L106
 1447              		.loc 1 507 0
 1448 00de FFF7FEFF 		bl	WAIT0_Wait10Cycles
 1449 00e2 10E0     		b	.L105
 1450              	.L106:
 1451              		.loc 1 507 0
 1452 00e4 BB1D     		add	r3, r7, #6
 1453 00e6 1B88     		ldrh	r3, [r3]
 1454 00e8 181C     		mov	r0, r3
 1455 00ea FA23     		mov	r3, #250
 1456 00ec 9900     		lsl	r1, r3, #2
 1457 00ee FFF7FEFF 		bl	__aeabi_uidivmod
 1458 00f2 0B1C     		mov	r3, r1
 1459 00f4 9BB2     		uxth	r3, r3
 1460 00f6 1A1C     		add	r2, r3, #0
 1461 00f8 5200     		lsl	r2, r2, #1
 1462 00fa D318     		add	r3, r2, r3
 1463 00fc DB00     		lsl	r3, r3, #3
 1464 00fe 9BB2     		uxth	r3, r3
 1465 0100 181C     		mov	r0, r3
 1466 0102 FFF7FEFF 		bl	WAIT0_WaitCycles
 1467              	.L105:
 508:../Generated_Code/GI2C0.c ****   if (!GI2C0_deviceData.dataTransmittedFlg) {
 1468              		.loc 1 508 0 is_stmt 1
 1469 0106 084B     		ldr	r3, .L108
 1470 0108 5B78     		ldrb	r3, [r3, #1]
 1471 010a DBB2     		uxtb	r3, r3
 1472 010c 0122     		mov	r2, #1
 1473 010e 5340     		eor	r3, r2
 1474 0110 DBB2     		uxtb	r3, r3
 1475 0112 002B     		cmp	r3, #0
 1476 0114 01D0     		beq	.L107
 509:../Generated_Code/GI2C0.c ****     return ERR_FAILED; /* no ACK received? */
 1477              		.loc 1 509 0
 1478 0116 1B23     		mov	r3, #27
 1479 0118 02E0     		b	.L103
 1480              	.L107:
 510:../Generated_Code/GI2C0.c ****   }
 511:../Generated_Code/GI2C0.c ****   return res;
 1481              		.loc 1 511 0
 1482 011a 3B1C     		mov	r3, r7
 1483 011c 1733     		add	r3, r3, #23
 1484 011e 1B78     		ldrb	r3, [r3]
 1485              	.L103:
 1486              	.LBE13:
 512:../Generated_Code/GI2C0.c **** }
 1487              		.loc 1 512 0
 1488 0120 181C     		mov	r0, r3
 1489 0122 BD46     		mov	sp, r7
 1490 0124 06B0     		add	sp, sp, #24
 1491              		@ sp needed for prologue
 1492 0126 80BD     		pop	{r7, pc}
 1493              	.L109:
 1494              		.align	2
 1495              	.L108:
 1496 0128 00000000 		.word	_ZL16GI2C0_deviceData
 1497 012c E7030000 		.word	999
 1498              		.cfi_endproc
 1499              	.LFE21:
 1501              		.section	.bss._ZZ18GI2C0_WriteAddresshPhhS_tE8writeBuf,"aw",%nobits
 1502              		.align	2
 1505              	_ZZ18GI2C0_WriteAddresshPhhS_tE8writeBuf:
 1506 0000 00000000 		.space	16
 1506      00000000 
 1506      00000000 
 1506      00000000 
 1507              		.text
 1508              	.Letext0:
 1509              		.file 2 "../Generated_Code/PE_Types.h"
 1510              		.file 3 "C:/Freescale/CW MCU v10.5/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 1511              		.file 4 "../Generated_Code/portmacro.h"
 1512              		.file 5 "../Generated_Code/queue.h"
 1513              		.file 6 "../Generated_Code/semphr.h"
 1514              		.file 7 "../Generated_Code/GI2C0.h"
DEFINED SYMBOLS
                            *ABS*:00000000 GI2C0.c
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:18     .bss._ZL16GI2C0_deviceData:00000000 $d
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:21     .bss._ZL16GI2C0_deviceData:00000000 _ZL16GI2C0_deviceData
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:24     .bss._ZL12GI2C0_busSem:00000000 $d
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:27     .bss._ZL12GI2C0_busSem:00000000 _ZL12GI2C0_busSem
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:30     .text._Z16GI2C0_RequestBusv:00000000 $t
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:35     .text._Z16GI2C0_RequestBusv:00000000 _Z16GI2C0_RequestBusv
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:63     .text._Z16GI2C0_RequestBusv:00000018 $d
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:68     .text._Z16GI2C0_ReleaseBusv:00000000 $t
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:73     .text._Z16GI2C0_ReleaseBusv:00000000 _Z16GI2C0_ReleaseBusv
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:97     .text._Z16GI2C0_ReleaseBusv:00000014 $d
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:102    .text._Z17GI2C0_SelectSlaveh:00000000 $t
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:107    .text._Z17GI2C0_SelectSlaveh:00000000 _Z17GI2C0_SelectSlaveh
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:161    .text._Z17GI2C0_SelectSlaveh:00000044 $d
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:166    .text._Z19GI2C0_UnselectSlavev:00000000 $t
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:171    .text._Z19GI2C0_UnselectSlavev:00000000 _Z19GI2C0_UnselectSlavev
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:196    .text._Z15GI2C0_ReadBlockPvt20GI2C0_EnumSendFlags_:00000000 $t
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:201    .text._Z15GI2C0_ReadBlockPvt20GI2C0_EnumSendFlags_:00000000 _Z15GI2C0_ReadBlockPvt20GI2C0_EnumSendFlags_
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:292    .text._Z15GI2C0_ReadBlockPvt20GI2C0_EnumSendFlags_:00000070 $d
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:297    .text._Z16GI2C0_WriteBlockPvt20GI2C0_EnumSendFlags_:00000000 $t
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:302    .text._Z16GI2C0_WriteBlockPvt20GI2C0_EnumSendFlags_:00000000 _Z16GI2C0_WriteBlockPvt20GI2C0_EnumSendFlags_
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:393    .text._Z16GI2C0_WriteBlockPvt20GI2C0_EnumSendFlags_:00000070 $d
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:398    .text._Z17GI2C0_ReadAddresshPhhS_t:00000000 $t
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:403    .text._Z17GI2C0_ReadAddresshPhhS_t:00000000 _Z17GI2C0_ReadAddresshPhhS_t
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:563    .text._Z17GI2C0_ReadAddresshPhhS_t:000000ec $d
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:568    .text._Z18GI2C0_WriteAddresshPhhS_t:00000000 $t
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:573    .text._Z18GI2C0_WriteAddresshPhhS_t:00000000 _Z18GI2C0_WriteAddresshPhhS_t
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:813    .text._Z18GI2C0_WriteAddresshPhhS_t:00000164 $d
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:1505   .bss._ZZ18GI2C0_WriteAddresshPhhS_tE8writeBuf:00000000 _ZZ18GI2C0_WriteAddresshPhhS_tE8writeBuf
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:819    .text._Z22I2C0_OnMasterBlockSentPv:00000000 $t
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:824    .text._Z22I2C0_OnMasterBlockSentPv:00000000 _Z22I2C0_OnMasterBlockSentPv
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:867    .text._Z22I2C0_OnMasterBlockSentPv:00000020 $d
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:872    .text._Z26I2C0_OnMasterBlockReceivedPv:00000000 $t
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:877    .text._Z26I2C0_OnMasterBlockReceivedPv:00000000 _Z26I2C0_OnMasterBlockReceivedPv
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:920    .text._Z26I2C0_OnMasterBlockReceivedPv:00000020 $d
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:925    .text._Z10GI2C0_Initv:00000000 $t
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:930    .text._Z10GI2C0_Initv:00000000 _Z10GI2C0_Initv
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:980    .text._Z10GI2C0_Initv:00000038 $d
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:986    .text._Z12GI2C0_Deinitv:00000000 $t
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:991    .text._Z12GI2C0_Deinitv:00000000 _Z12GI2C0_Deinitv
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:1019   .text._Z12GI2C0_Deinitv:0000001c $d
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:1025   .text._Z18GI2C0_GetSemaphorev:00000000 $t
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:1030   .text._Z18GI2C0_GetSemaphorev:00000000 _Z18GI2C0_GetSemaphorev
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:1053   .text._Z18GI2C0_GetSemaphorev:00000010 $d
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:1058   .text._Z22GI2C0_ReadByteAddress8hhPh:00000000 $t
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:1063   .text._Z22GI2C0_ReadByteAddress8hhPh:00000000 _Z22GI2C0_ReadByteAddress8hhPh
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:1107   .text._Z23GI2C0_WriteByteAddress8hhh:00000000 $t
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:1112   .text._Z23GI2C0_WriteByteAddress8hhh:00000000 _Z23GI2C0_WriteByteAddress8hhh
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:1155   .text._Z16GI2C0_ScanDeviceh:00000000 $t
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:1160   .text._Z16GI2C0_ScanDeviceh:00000000 _Z16GI2C0_ScanDeviceh
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:1298   .text._Z16GI2C0_ScanDeviceh:000000c4 $d
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:1305   .text._Z14GI2C0_ProbeACKPvt20GI2C0_EnumSendFlags_t:00000000 $t
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:1310   .text._Z14GI2C0_ProbeACKPvt20GI2C0_EnumSendFlags_t:00000000 _Z14GI2C0_ProbeACKPvt20GI2C0_EnumSendFlags_t
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:1496   .text._Z14GI2C0_ProbeACKPvt20GI2C0_EnumSendFlags_t:00000128 $d
C:\Users\JH\AppData\Local\Temp\ccn4gNr3.s:1502   .bss._ZZ18GI2C0_WriteAddresshPhhS_tE8writeBuf:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
xQueueTakeMutexRecursive
xQueueGiveMutexRecursive
I2C0_SelectSlaveDevice
I2C0_MasterReceiveBlock
I2C0_MasterSendBlock
I2C0_Init
xQueueCreateMutex
I2C0_Deinit
vQueueDelete
I2C0_GetError
__aeabi_uidiv
__aeabi_uidivmod
WAIT0_Waitms
WAIT0_Wait10Cycles
WAIT0_WaitCycles
