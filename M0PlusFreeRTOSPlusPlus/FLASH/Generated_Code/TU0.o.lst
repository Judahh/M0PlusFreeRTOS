   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TU0.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss._ZL33DeviceDataPrv__DEFAULT_RTOS_ALLOC,"aw",%nobits
  18              		.align	2
  21              	_ZL33DeviceDataPrv__DEFAULT_RTOS_ALLOC:
  22 0000 00000000 		.space	8
  22      00000000 
  23              		.section	.text.TU0_Init,"ax",%progbits
  24              		.align	2
  25              		.global	TU0_Init
  26              		.code	16
  27              		.thumb_func
  29              	TU0_Init:
  30              	.LFB0:
  31              		.file 1 "../Generated_Code/TU0.c"
   1:../Generated_Code/TU0.c **** /* ###################################################################
   2:../Generated_Code/TU0.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/TU0.c **** **     Filename    : TU0.c
   4:../Generated_Code/TU0.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/TU0.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/TU0.c **** **     Component   : TimerUnit_LDD
   7:../Generated_Code/TU0.c **** **     Version     : Component 01.158, Driver 01.11, CPU db: 3.00.000
   8:../Generated_Code/TU0.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/TU0.c **** **     Date/Time   : 2014-04-05, 15:28, # CodeGen: 4
  10:../Generated_Code/TU0.c **** **     Abstract    :
  11:../Generated_Code/TU0.c **** **          This TimerUnit component provides a low level API for unified hardware access across
  12:../Generated_Code/TU0.c **** **          various timer devices using the Prescaler-Counter-Compare-Capture timer structure.
  13:../Generated_Code/TU0.c **** **     Settings    :
  14:../Generated_Code/TU0.c **** **          Component name                                 : TU0
  15:../Generated_Code/TU0.c **** **          Module name                                    : TPM0
  16:../Generated_Code/TU0.c **** **          Counter                                        : TPM0_CNT
  17:../Generated_Code/TU0.c **** **          Counter direction                              : Up
  18:../Generated_Code/TU0.c **** **          Counter width                                  : 16 bits
  19:../Generated_Code/TU0.c **** **          Value type                                     : uint16_t
  20:../Generated_Code/TU0.c **** **          Input clock source                             : Internal
  21:../Generated_Code/TU0.c **** **            Counter frequency                            : 6 MHz
  22:../Generated_Code/TU0.c **** **          Counter restart                                : On-match
  23:../Generated_Code/TU0.c **** **            Period device                                : TPM0_MOD
  24:../Generated_Code/TU0.c **** **            Period                                       : 6.25 ms
  25:../Generated_Code/TU0.c **** **            Interrupt                                    : Disabled
  26:../Generated_Code/TU0.c **** **          Channel list                                   : 1
  27:../Generated_Code/TU0.c **** **            Channel 0                                    : 
  28:../Generated_Code/TU0.c **** **              Mode                                       : Compare
  29:../Generated_Code/TU0.c **** **                Compare                                  : TPM0_C1V
  30:../Generated_Code/TU0.c **** **                Offset                                   : 0 ms
  31:../Generated_Code/TU0.c **** **                Output on compare                        : Set
  32:../Generated_Code/TU0.c **** **                  Output on overrun                      : Clear
  33:../Generated_Code/TU0.c **** **                  Initial state                          : Low
  34:../Generated_Code/TU0.c **** **                  Output pin                             : ADC0_SE5b/PTD1/SPI0_SCK/TPM0_CH1
  35:../Generated_Code/TU0.c **** **                  Output pin signal                      : 
  36:../Generated_Code/TU0.c **** **                Interrupt                                : Disabled
  37:../Generated_Code/TU0.c **** **          Initialization                                 : 
  38:../Generated_Code/TU0.c **** **            Enabled in init. code                        : yes
  39:../Generated_Code/TU0.c **** **            Auto initialization                          : no
  40:../Generated_Code/TU0.c **** **            Event mask                                   : 
  41:../Generated_Code/TU0.c **** **              OnCounterRestart                           : Disabled
  42:../Generated_Code/TU0.c **** **              OnChannel0                                 : Disabled
  43:../Generated_Code/TU0.c **** **              OnChannel1                                 : Disabled
  44:../Generated_Code/TU0.c **** **              OnChannel2                                 : Disabled
  45:../Generated_Code/TU0.c **** **              OnChannel3                                 : Disabled
  46:../Generated_Code/TU0.c **** **              OnChannel4                                 : Disabled
  47:../Generated_Code/TU0.c **** **              OnChannel5                                 : Disabled
  48:../Generated_Code/TU0.c **** **              OnChannel6                                 : Disabled
  49:../Generated_Code/TU0.c **** **              OnChannel7                                 : Disabled
  50:../Generated_Code/TU0.c **** **          CPU clock/configuration selection              : 
  51:../Generated_Code/TU0.c **** **            Clock configuration 0                        : This component enabled
  52:../Generated_Code/TU0.c **** **            Clock configuration 1                        : This component disabled
  53:../Generated_Code/TU0.c **** **            Clock configuration 2                        : This component disabled
  54:../Generated_Code/TU0.c **** **            Clock configuration 3                        : This component disabled
  55:../Generated_Code/TU0.c **** **            Clock configuration 4                        : This component disabled
  56:../Generated_Code/TU0.c **** **            Clock configuration 5                        : This component disabled
  57:../Generated_Code/TU0.c **** **            Clock configuration 6                        : This component disabled
  58:../Generated_Code/TU0.c **** **            Clock configuration 7                        : This component disabled
  59:../Generated_Code/TU0.c **** **     Contents    :
  60:../Generated_Code/TU0.c **** **         Init               - LDD_TDeviceData* TU0_Init(LDD_TUserData *UserDataPtr);
  61:../Generated_Code/TU0.c **** **         GetPeriodTicks     - LDD_TError TU0_GetPeriodTicks(LDD_TDeviceData *DeviceDataPtr, TU0_T
  62:../Generated_Code/TU0.c **** **         GetCounterValue    - TU0_TValueType TU0_GetCounterValue(LDD_TDeviceData *DeviceDataPtr);
  63:../Generated_Code/TU0.c **** **         SetOffsetTicks     - LDD_TError TU0_SetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8
  64:../Generated_Code/TU0.c **** **         GetOffsetTicks     - LDD_TError TU0_GetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8
  65:../Generated_Code/TU0.c **** **         SelectOutputAction - LDD_TError TU0_SelectOutputAction(LDD_TDeviceData *DeviceDataPtr, u
  66:../Generated_Code/TU0.c **** **
  67:../Generated_Code/TU0.c **** **     Copyright : 1997 - 2013 Freescale Semiconductor, Inc. All Rights Reserved.
  68:../Generated_Code/TU0.c **** **     SOURCE DISTRIBUTION PERMISSIBLE as directed in End User License Agreement.
  69:../Generated_Code/TU0.c **** **     
  70:../Generated_Code/TU0.c **** **     http      : www.freescale.com
  71:../Generated_Code/TU0.c **** **     mail      : support@freescale.com
  72:../Generated_Code/TU0.c **** ** ###################################################################*/
  73:../Generated_Code/TU0.c **** /*!
  74:../Generated_Code/TU0.c **** ** @file TU0.c
  75:../Generated_Code/TU0.c **** ** @version 01.11
  76:../Generated_Code/TU0.c **** ** @brief
  77:../Generated_Code/TU0.c **** **          This TimerUnit component provides a low level API for unified hardware access across
  78:../Generated_Code/TU0.c **** **          various timer devices using the Prescaler-Counter-Compare-Capture timer structure.
  79:../Generated_Code/TU0.c **** */         
  80:../Generated_Code/TU0.c **** /*!
  81:../Generated_Code/TU0.c **** **  @addtogroup TU0_module TU0 module documentation
  82:../Generated_Code/TU0.c **** **  @{
  83:../Generated_Code/TU0.c **** */         
  84:../Generated_Code/TU0.c **** 
  85:../Generated_Code/TU0.c **** /* MODULE TU0. */
  86:../Generated_Code/TU0.c **** 
  87:../Generated_Code/TU0.c **** #include "TU0.h"
  88:../Generated_Code/TU0.c **** #include "FreeRTOS.h" /* FreeRTOS interface */
  89:../Generated_Code/TU0.c **** #include "IO_Map.h"
  90:../Generated_Code/TU0.c **** 
  91:../Generated_Code/TU0.c **** #ifdef __cplusplus
  92:../Generated_Code/TU0.c **** extern "C" {
  93:../Generated_Code/TU0.c **** #endif 
  94:../Generated_Code/TU0.c **** 
  95:../Generated_Code/TU0.c **** /* List of channels used by component */
  96:../Generated_Code/TU0.c **** static const uint8_t ChannelDevice[TU0_NUMBER_OF_CHANNELS] = {0x01U};
  97:../Generated_Code/TU0.c **** 
  98:../Generated_Code/TU0.c **** /* Table of channels mode / 0 - compare mode, 1 - capture mode */
  99:../Generated_Code/TU0.c **** static const uint8_t ChannelMode[TU0_NUMBER_OF_CHANNELS] = {0x00U};
 100:../Generated_Code/TU0.c **** 
 101:../Generated_Code/TU0.c **** 
 102:../Generated_Code/TU0.c **** typedef struct {
 103:../Generated_Code/TU0.c ****   uint8_t InitCntr;                    /* Number of initialization */
 104:../Generated_Code/TU0.c ****   LDD_TUserData *UserDataPtr;          /* RTOS device data structure */
 105:../Generated_Code/TU0.c **** } TU0_TDeviceData;
 106:../Generated_Code/TU0.c **** 
 107:../Generated_Code/TU0.c **** typedef TU0_TDeviceData *TU0_TDeviceDataPtr; /* Pointer to the device data structure. */
 108:../Generated_Code/TU0.c **** 
 109:../Generated_Code/TU0.c **** /* {FreeRTOS RTOS Adapter} Static object used for simulation of dynamic driver memory allocation */
 110:../Generated_Code/TU0.c **** static TU0_TDeviceData DeviceDataPrv__DEFAULT_RTOS_ALLOC;
 111:../Generated_Code/TU0.c **** 
 112:../Generated_Code/TU0.c **** #define AVAILABLE_PIN_MASK (LDD_TPinMask)(TU0_CHANNEL_0_PIN)
 113:../Generated_Code/TU0.c **** #define LAST_CHANNEL 0x00U
 114:../Generated_Code/TU0.c **** 
 115:../Generated_Code/TU0.c **** /* Internal method prototypes */
 116:../Generated_Code/TU0.c **** /*
 117:../Generated_Code/TU0.c **** ** ===================================================================
 118:../Generated_Code/TU0.c **** **     Method      :  TU0_Init (component TimerUnit_LDD)
 119:../Generated_Code/TU0.c **** */
 120:../Generated_Code/TU0.c **** /*!
 121:../Generated_Code/TU0.c **** **     @brief
 122:../Generated_Code/TU0.c **** **         Initializes the device. Allocates memory for the device data
 123:../Generated_Code/TU0.c **** **         structure, allocates interrupt vectors and sets interrupt
 124:../Generated_Code/TU0.c **** **         priority, sets pin routing, sets timing, etc. If the
 125:../Generated_Code/TU0.c **** **         property ["Enable in init. code"] is set to "yes" value then
 126:../Generated_Code/TU0.c **** **         the device is also enabled (see the description of the
 127:../Generated_Code/TU0.c **** **         [Enable] method). In this case the [Enable] method is not
 128:../Generated_Code/TU0.c **** **         necessary and needn't to be generated. This method can be
 129:../Generated_Code/TU0.c **** **         called only once. Before the second call of Init the [Deinit]
 130:../Generated_Code/TU0.c **** **         must be called first.
 131:../Generated_Code/TU0.c **** **     @param
 132:../Generated_Code/TU0.c **** **         UserDataPtr     - Pointer to the user or
 133:../Generated_Code/TU0.c **** **                           RTOS specific data. This pointer will be
 134:../Generated_Code/TU0.c **** **                           passed as an event or callback parameter.
 135:../Generated_Code/TU0.c **** **     @return
 136:../Generated_Code/TU0.c **** **                         - Pointer to the dynamically allocated private
 137:../Generated_Code/TU0.c **** **                           structure or NULL if there was an error.
 138:../Generated_Code/TU0.c **** */
 139:../Generated_Code/TU0.c **** /* ===================================================================*/
 140:../Generated_Code/TU0.c **** LDD_TDeviceData* TU0_Init(LDD_TUserData *UserDataPtr)
 141:../Generated_Code/TU0.c **** {
  32              		.loc 1 141 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 84B0     		sub	sp, sp, #16
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 24
  42 0004 00AF     		add	r7, sp, #0
  43              	.LCFI2:
  44              		.cfi_def_cfa_register 7
  45 0006 7860     		str	r0, [r7, #4]
  46              	.LBB2:
 142:../Generated_Code/TU0.c ****   TU0_TDeviceData *DeviceDataPrv;
 143:../Generated_Code/TU0.c **** 
 144:../Generated_Code/TU0.c ****   if (PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU0_ID] == NULL) {
  47              		.loc 1 144 0
  48 0008 2B4B     		ldr	r3, .L4
  49 000a 5B68     		ldr	r3, [r3, #4]
  50 000c 002B     		cmp	r3, #0
  51 000e 42D1     		bne	.L2
 145:../Generated_Code/TU0.c ****     /* Allocate device structure */
 146:../Generated_Code/TU0.c ****     /* {FreeRTOS RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a point
 147:../Generated_Code/TU0.c ****     DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  52              		.loc 1 147 0
  53 0010 2A4B     		ldr	r3, .L4+4
  54 0012 FB60     		str	r3, [r7, #12]
 148:../Generated_Code/TU0.c ****     DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
  55              		.loc 1 148 0
  56 0014 FB68     		ldr	r3, [r7, #12]
  57 0016 7A68     		ldr	r2, [r7, #4]
  58 0018 5A60     		str	r2, [r3, #4]
 149:../Generated_Code/TU0.c ****     DeviceDataPrv->InitCntr = 1U;      /* First initialization */
  59              		.loc 1 149 0
  60 001a FB68     		ldr	r3, [r7, #12]
  61 001c 0122     		mov	r2, #1
  62 001e 1A70     		strb	r2, [r3]
 150:../Generated_Code/TU0.c ****   }
 151:../Generated_Code/TU0.c ****   else {
 152:../Generated_Code/TU0.c ****     /* Memory is already allocated */
 153:../Generated_Code/TU0.c ****     DeviceDataPrv = (TU0_TDeviceDataPtr) PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU0_ID];
 154:../Generated_Code/TU0.c ****     DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
 155:../Generated_Code/TU0.c ****     DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
 156:../Generated_Code/TU0.c ****     return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 157:../Generated_Code/TU0.c ****   }
 158:../Generated_Code/TU0.c ****   /* SIM_SCGC6: TPM0=1 */
 159:../Generated_Code/TU0.c ****   SIM_SCGC6 |= SIM_SCGC6_TPM0_MASK;                                   
  63              		.loc 1 159 0
  64 0020 274A     		ldr	r2, .L4+8
  65 0022 2749     		ldr	r1, .L4+8
  66 0024 274B     		ldr	r3, .L4+12
  67 0026 CB58     		ldr	r3, [r1, r3]
  68 0028 8021     		mov	r1, #128
  69 002a 4904     		lsl	r1, r1, #17
  70 002c 1943     		orr	r1, r3
  71 002e 254B     		ldr	r3, .L4+12
  72 0030 D150     		str	r1, [r2, r3]
 160:../Generated_Code/TU0.c ****   /* TPM0_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,
 161:../Generated_Code/TU0.c ****   TPM0_SC = (TPM_SC_CMOD(0x00) | TPM_SC_PS(0x00)); /* Clear status and control register */
  73              		.loc 1 161 0
  74 0032 254B     		ldr	r3, .L4+16
  75 0034 0022     		mov	r2, #0
  76 0036 1A60     		str	r2, [r3]
 162:../Generated_Code/TU0.c ****   /* TPM0_CNT: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,COUN
 163:../Generated_Code/TU0.c ****   TPM0_CNT = TPM_CNT_COUNT(0x00);      /* Reset counter register */
  77              		.loc 1 163 0
  78 0038 234B     		ldr	r3, .L4+16
  79 003a 0022     		mov	r2, #0
  80 003c 5A60     		str	r2, [r3, #4]
 164:../Generated_Code/TU0.c ****   /* TPM0_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 165:../Generated_Code/TU0.c ****   TPM0_C0SC = 0x00U;                   /* Clear channel status and control register */
  81              		.loc 1 165 0
  82 003e 224B     		ldr	r3, .L4+16
  83 0040 0022     		mov	r2, #0
  84 0042 DA60     		str	r2, [r3, #12]
 166:../Generated_Code/TU0.c ****   /* TPM0_C1SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 167:../Generated_Code/TU0.c ****   TPM0_C1SC = 0x00U;                   /* Clear channel status and control register */
  85              		.loc 1 167 0
  86 0044 204B     		ldr	r3, .L4+16
  87 0046 0022     		mov	r2, #0
  88 0048 5A61     		str	r2, [r3, #20]
 168:../Generated_Code/TU0.c ****   /* TPM0_C2SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 169:../Generated_Code/TU0.c ****   TPM0_C2SC = 0x00U;                   /* Clear channel status and control register */
  89              		.loc 1 169 0
  90 004a 1F4B     		ldr	r3, .L4+16
  91 004c 0022     		mov	r2, #0
  92 004e DA61     		str	r2, [r3, #28]
 170:../Generated_Code/TU0.c ****   /* TPM0_C3SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 171:../Generated_Code/TU0.c ****   TPM0_C3SC = 0x00U;                   /* Clear channel status and control register */
  93              		.loc 1 171 0
  94 0050 1D4B     		ldr	r3, .L4+16
  95 0052 0022     		mov	r2, #0
  96 0054 5A62     		str	r2, [r3, #36]
 172:../Generated_Code/TU0.c ****   /* TPM0_C4SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 173:../Generated_Code/TU0.c ****   TPM0_C4SC = 0x00U;                   /* Clear channel status and control register */
  97              		.loc 1 173 0
  98 0056 1C4B     		ldr	r3, .L4+16
  99 0058 0022     		mov	r2, #0
 100 005a DA62     		str	r2, [r3, #44]
 174:../Generated_Code/TU0.c ****   /* TPM0_C5SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 175:../Generated_Code/TU0.c ****   TPM0_C5SC = 0x00U;                   /* Clear channel status and control register */
 101              		.loc 1 175 0
 102 005c 1A4B     		ldr	r3, .L4+16
 103 005e 0022     		mov	r2, #0
 104 0060 5A63     		str	r2, [r3, #52]
 176:../Generated_Code/TU0.c ****   /* TPM0_MOD: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,MOD=
 177:../Generated_Code/TU0.c ****   TPM0_MOD = TPM_MOD_MOD(0x927B);      /* Set up modulo register */
 105              		.loc 1 177 0
 106 0062 194B     		ldr	r3, .L4+16
 107 0064 194A     		ldr	r2, .L4+20
 108 0066 9A60     		str	r2, [r3, #8]
 178:../Generated_Code/TU0.c ****   /* TPM0_C1SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 179:../Generated_Code/TU0.c ****   TPM0_C1SC = (TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK | TPM_CnSC_ELSA_MASK); /* Set up channel stat
 109              		.loc 1 179 0
 110 0068 174B     		ldr	r3, .L4+16
 111 006a 2C22     		mov	r2, #44
 112 006c 5A61     		str	r2, [r3, #20]
 180:../Generated_Code/TU0.c ****   /* TPM0_C1V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=
 181:../Generated_Code/TU0.c ****   TPM0_C1V = TPM_CnV_VAL(0x00);        /* Set up channel value register */
 113              		.loc 1 181 0
 114 006e 164B     		ldr	r3, .L4+16
 115 0070 0022     		mov	r2, #0
 116 0072 9A61     		str	r2, [r3, #24]
 182:../Generated_Code/TU0.c ****   /* PORTD_PCR1: ISF=0,MUX=4 */
 183:../Generated_Code/TU0.c ****   PORTD_PCR1 = (uint32_t)((PORTD_PCR1 & (uint32_t)~(uint32_t)(
 117              		.loc 1 183 0
 118 0074 164B     		ldr	r3, .L4+24
 184:../Generated_Code/TU0.c ****                 PORT_PCR_ISF_MASK |
 185:../Generated_Code/TU0.c ****                 PORT_PCR_MUX(0x03)
 186:../Generated_Code/TU0.c ****                )) | (uint32_t)(
 187:../Generated_Code/TU0.c ****                 PORT_PCR_MUX(0x04)
 188:../Generated_Code/TU0.c ****                ));                                  
 119              		.loc 1 188 0
 120 0076 164A     		ldr	r2, .L4+24
 183:../Generated_Code/TU0.c ****   PORTD_PCR1 = (uint32_t)((PORTD_PCR1 & (uint32_t)~(uint32_t)(
 121              		.loc 1 183 0
 122 0078 5168     		ldr	r1, [r2, #4]
 123              		.loc 1 188 0
 124 007a 164A     		ldr	r2, .L4+28
 125 007c 0A40     		and	r2, r1
 126 007e 8021     		mov	r1, #128
 127 0080 C900     		lsl	r1, r1, #3
 128 0082 0A43     		orr	r2, r1
 129 0084 5A60     		str	r2, [r3, #4]
 189:../Generated_Code/TU0.c ****   /* TPM0_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,
 190:../Generated_Code/TU0.c ****   TPM0_SC = (TPM_SC_CMOD(0x01) | TPM_SC_PS(0x03)); /* Set up status and control register */
 130              		.loc 1 190 0
 131 0086 104B     		ldr	r3, .L4+16
 132 0088 0B22     		mov	r2, #11
 133 008a 1A60     		str	r2, [r3]
 191:../Generated_Code/TU0.c ****   /* Registration of the device structure */
 192:../Generated_Code/TU0.c ****   PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU0_ID,DeviceDataPrv);
 134              		.loc 1 192 0
 135 008c 0A4B     		ldr	r3, .L4
 136 008e FA68     		ldr	r2, [r7, #12]
 137 0090 5A60     		str	r2, [r3, #4]
 193:../Generated_Code/TU0.c ****   return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 138              		.loc 1 193 0
 139 0092 FB68     		ldr	r3, [r7, #12]
 140 0094 0CE0     		b	.L3
 141              	.L2:
 153:../Generated_Code/TU0.c ****     DeviceDataPrv = (TU0_TDeviceDataPtr) PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU0_ID];
 142              		.loc 1 153 0
 143 0096 084B     		ldr	r3, .L4
 144 0098 5B68     		ldr	r3, [r3, #4]
 145 009a FB60     		str	r3, [r7, #12]
 154:../Generated_Code/TU0.c ****     DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
 146              		.loc 1 154 0
 147 009c FB68     		ldr	r3, [r7, #12]
 148 009e 7A68     		ldr	r2, [r7, #4]
 149 00a0 5A60     		str	r2, [r3, #4]
 155:../Generated_Code/TU0.c ****     DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
 150              		.loc 1 155 0
 151 00a2 FB68     		ldr	r3, [r7, #12]
 152 00a4 1B78     		ldrb	r3, [r3]
 153 00a6 0133     		add	r3, r3, #1
 154 00a8 DAB2     		uxtb	r2, r3
 155 00aa FB68     		ldr	r3, [r7, #12]
 156 00ac 1A70     		strb	r2, [r3]
 156:../Generated_Code/TU0.c ****     return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 157              		.loc 1 156 0
 158 00ae FB68     		ldr	r3, [r7, #12]
 159              	.L3:
 160              	.LBE2:
 194:../Generated_Code/TU0.c **** }
 161              		.loc 1 194 0
 162 00b0 181C     		mov	r0, r3
 163 00b2 BD46     		mov	sp, r7
 164 00b4 04B0     		add	sp, sp, #16
 165              		@ sp needed for prologue
 166 00b6 80BD     		pop	{r7, pc}
 167              	.L5:
 168              		.align	2
 169              	.L4:
 170 00b8 00000000 		.word	PE_LDD_DeviceDataList
 171 00bc 00000000 		.word	_ZL33DeviceDataPrv__DEFAULT_RTOS_ALLOC
 172 00c0 00700440 		.word	1074032640
 173 00c4 3C100000 		.word	4156
 174 00c8 00800340 		.word	1073971200
 175 00cc 7B920000 		.word	37499
 176 00d0 00C00440 		.word	1074053120
 177 00d4 FFF8FFFE 		.word	-16779009
 178              		.cfi_endproc
 179              	.LFE0:
 181              		.section	.text.TU0_GetPeriodTicks,"ax",%progbits
 182              		.align	2
 183              		.global	TU0_GetPeriodTicks
 184              		.code	16
 185              		.thumb_func
 187              	TU0_GetPeriodTicks:
 188              	.LFB1:
 195:../Generated_Code/TU0.c **** 
 196:../Generated_Code/TU0.c **** /*
 197:../Generated_Code/TU0.c **** ** ===================================================================
 198:../Generated_Code/TU0.c **** **     Method      :  TU0_GetPeriodTicks (component TimerUnit_LDD)
 199:../Generated_Code/TU0.c **** */
 200:../Generated_Code/TU0.c **** /*!
 201:../Generated_Code/TU0.c **** **     @brief
 202:../Generated_Code/TU0.c **** **         Returns the number of counter ticks before re-initialization.
 203:../Generated_Code/TU0.c **** **         See also method [SetPeriodTicks]. This method is available
 204:../Generated_Code/TU0.c **** **         only if the property ["Counter restart"] is switched to
 205:../Generated_Code/TU0.c **** **         'on-match' value.
 206:../Generated_Code/TU0.c **** **     @param
 207:../Generated_Code/TU0.c **** **         DeviceDataPtr   - Device data structure
 208:../Generated_Code/TU0.c **** **                           pointer returned by [Init] method.
 209:../Generated_Code/TU0.c **** **     @param
 210:../Generated_Code/TU0.c **** **         TicksPtr        - Pointer to return value of the
 211:../Generated_Code/TU0.c **** **                           number of counter ticks before
 212:../Generated_Code/TU0.c **** **                           re-initialization
 213:../Generated_Code/TU0.c **** **     @return
 214:../Generated_Code/TU0.c **** **                         - Error code, possible codes:
 215:../Generated_Code/TU0.c **** **                           ERR_OK - OK 
 216:../Generated_Code/TU0.c **** **                           ERR_SPEED - The component does not work in
 217:../Generated_Code/TU0.c **** **                           the active clock configuration
 218:../Generated_Code/TU0.c **** */
 219:../Generated_Code/TU0.c **** /* ===================================================================*/
 220:../Generated_Code/TU0.c **** LDD_TError TU0_GetPeriodTicks(LDD_TDeviceData *DeviceDataPtr, TU0_TValueType *TicksPtr)
 221:../Generated_Code/TU0.c **** {
 189              		.loc 1 221 0
 190              		.cfi_startproc
 191 0000 80B5     		push	{r7, lr}
 192              	.LCFI3:
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 7, -8
 195              		.cfi_offset 14, -4
 196 0002 84B0     		sub	sp, sp, #16
 197              	.LCFI4:
 198              		.cfi_def_cfa_offset 24
 199 0004 00AF     		add	r7, sp, #0
 200              	.LCFI5:
 201              		.cfi_def_cfa_register 7
 202 0006 7860     		str	r0, [r7, #4]
 203 0008 3960     		str	r1, [r7]
 204              	.LBB3:
 222:../Generated_Code/TU0.c ****   uint16_t tmp;
 223:../Generated_Code/TU0.c **** 
 224:../Generated_Code/TU0.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 225:../Generated_Code/TU0.c ****   tmp = (uint16_t)(TPM_PDD_ReadModuloReg(TPM0_BASE_PTR));
 205              		.loc 1 225 0
 206 000a 0B4B     		ldr	r3, .L8
 207 000c 9A68     		ldr	r2, [r3, #8]
 208 000e 3B1C     		mov	r3, r7
 209 0010 0E33     		add	r3, r3, #14
 210 0012 1A80     		strh	r2, [r3]
 226:../Generated_Code/TU0.c ****   *TicksPtr = (TU0_TValueType)++tmp;
 211              		.loc 1 226 0
 212 0014 3B1C     		mov	r3, r7
 213 0016 0E33     		add	r3, r3, #14
 214 0018 3A1C     		mov	r2, r7
 215 001a 0E32     		add	r2, r2, #14
 216 001c 1288     		ldrh	r2, [r2]
 217 001e 0132     		add	r2, r2, #1
 218 0020 1A80     		strh	r2, [r3]
 219 0022 3B68     		ldr	r3, [r7]
 220 0024 3A1C     		mov	r2, r7
 221 0026 0E32     		add	r2, r2, #14
 222 0028 1288     		ldrh	r2, [r2]
 223 002a 1A80     		strh	r2, [r3]
 227:../Generated_Code/TU0.c ****   return ERR_OK;                       /* OK */
 224              		.loc 1 227 0
 225 002c 0023     		mov	r3, #0
 226              	.LBE3:
 228:../Generated_Code/TU0.c **** }
 227              		.loc 1 228 0
 228 002e 181C     		mov	r0, r3
 229 0030 BD46     		mov	sp, r7
 230 0032 04B0     		add	sp, sp, #16
 231              		@ sp needed for prologue
 232 0034 80BD     		pop	{r7, pc}
 233              	.L9:
 234 0036 C046     		.align	2
 235              	.L8:
 236 0038 00800340 		.word	1073971200
 237              		.cfi_endproc
 238              	.LFE1:
 240              		.section	.text.TU0_GetCounterValue,"ax",%progbits
 241              		.align	2
 242              		.global	TU0_GetCounterValue
 243              		.code	16
 244              		.thumb_func
 246              	TU0_GetCounterValue:
 247              	.LFB2:
 229:../Generated_Code/TU0.c **** 
 230:../Generated_Code/TU0.c **** /*
 231:../Generated_Code/TU0.c **** ** ===================================================================
 232:../Generated_Code/TU0.c **** **     Method      :  TU0_GetCounterValue (component TimerUnit_LDD)
 233:../Generated_Code/TU0.c **** */
 234:../Generated_Code/TU0.c **** /*!
 235:../Generated_Code/TU0.c **** **     @brief
 236:../Generated_Code/TU0.c **** **         Returns the content of counter register. This method can be
 237:../Generated_Code/TU0.c **** **         used both if counter is enabled and if counter is disabled.
 238:../Generated_Code/TU0.c **** **         The method is not available if HW doesn't allow reading of
 239:../Generated_Code/TU0.c **** **         the counter.
 240:../Generated_Code/TU0.c **** **     @param
 241:../Generated_Code/TU0.c **** **         DeviceDataPtr   - Device data structure
 242:../Generated_Code/TU0.c **** **                           pointer returned by [Init] method.
 243:../Generated_Code/TU0.c **** **     @return
 244:../Generated_Code/TU0.c **** **                         - Counter value (number of counted ticks).
 245:../Generated_Code/TU0.c **** */
 246:../Generated_Code/TU0.c **** /* ===================================================================*/
 247:../Generated_Code/TU0.c **** TU0_TValueType TU0_GetCounterValue(LDD_TDeviceData *DeviceDataPtr)
 248:../Generated_Code/TU0.c **** {
 248              		.loc 1 248 0
 249              		.cfi_startproc
 250 0000 80B5     		push	{r7, lr}
 251              	.LCFI6:
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 7, -8
 254              		.cfi_offset 14, -4
 255 0002 82B0     		sub	sp, sp, #8
 256              	.LCFI7:
 257              		.cfi_def_cfa_offset 16
 258 0004 00AF     		add	r7, sp, #0
 259              	.LCFI8:
 260              		.cfi_def_cfa_register 7
 261 0006 7860     		str	r0, [r7, #4]
 249:../Generated_Code/TU0.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 250:../Generated_Code/TU0.c ****   return (TU0_TValueType)TPM_PDD_ReadCounterReg(TPM0_BASE_PTR);
 262              		.loc 1 250 0
 263 0008 034B     		ldr	r3, .L12
 264 000a 5B68     		ldr	r3, [r3, #4]
 265 000c 9BB2     		uxth	r3, r3
 251:../Generated_Code/TU0.c **** }
 266              		.loc 1 251 0
 267 000e 181C     		mov	r0, r3
 268 0010 BD46     		mov	sp, r7
 269 0012 02B0     		add	sp, sp, #8
 270              		@ sp needed for prologue
 271 0014 80BD     		pop	{r7, pc}
 272              	.L13:
 273 0016 C046     		.align	2
 274              	.L12:
 275 0018 00800340 		.word	1073971200
 276              		.cfi_endproc
 277              	.LFE2:
 279              		.section	.text.TU0_SetOffsetTicks,"ax",%progbits
 280              		.align	2
 281              		.global	TU0_SetOffsetTicks
 282              		.code	16
 283              		.thumb_func
 285              	TU0_SetOffsetTicks:
 286              	.LFB3:
 252:../Generated_Code/TU0.c **** 
 253:../Generated_Code/TU0.c **** /*
 254:../Generated_Code/TU0.c **** ** ===================================================================
 255:../Generated_Code/TU0.c **** **     Method      :  TU0_SetOffsetTicks (component TimerUnit_LDD)
 256:../Generated_Code/TU0.c **** */
 257:../Generated_Code/TU0.c **** /*!
 258:../Generated_Code/TU0.c **** **     @brief
 259:../Generated_Code/TU0.c **** **         Sets the new offset value to channel specified by the
 260:../Generated_Code/TU0.c **** **         parameter ChannelIdx. It is user responsibility to use value
 261:../Generated_Code/TU0.c **** **         below selected period. This method is available when at
 262:../Generated_Code/TU0.c **** **         least one channel is configured.
 263:../Generated_Code/TU0.c **** **     @param
 264:../Generated_Code/TU0.c **** **         DeviceDataPtr   - Device data structure
 265:../Generated_Code/TU0.c **** **                           pointer returned by [Init] method.
 266:../Generated_Code/TU0.c **** **     @param
 267:../Generated_Code/TU0.c **** **         ChannelIdx      - Index of the component
 268:../Generated_Code/TU0.c **** **                           channel.
 269:../Generated_Code/TU0.c **** **     @param
 270:../Generated_Code/TU0.c **** **         Ticks           - Number of counter ticks to compare
 271:../Generated_Code/TU0.c **** **                           match.
 272:../Generated_Code/TU0.c **** **     @return
 273:../Generated_Code/TU0.c **** **                         - Error code, possible codes:
 274:../Generated_Code/TU0.c **** **                           ERR_OK - OK 
 275:../Generated_Code/TU0.c **** **                           ERR_PARAM_INDEX - ChannelIdx parameter is
 276:../Generated_Code/TU0.c **** **                           out of possible range.
 277:../Generated_Code/TU0.c **** **                           ERR_NOTAVAIL -  The compare mode is not
 278:../Generated_Code/TU0.c **** **                           selected for selected channel
 279:../Generated_Code/TU0.c **** **                           ERR_PARAM_TICKS - Ticks parameter is out of
 280:../Generated_Code/TU0.c **** **                           possible range.
 281:../Generated_Code/TU0.c **** **                           ERR_SPEED - The component does not work in
 282:../Generated_Code/TU0.c **** **                           the active clock configuration
 283:../Generated_Code/TU0.c **** */
 284:../Generated_Code/TU0.c **** /* ===================================================================*/
 285:../Generated_Code/TU0.c **** LDD_TError TU0_SetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, TU0_TValueType Ti
 286:../Generated_Code/TU0.c **** {
 287              		.loc 1 286 0
 288              		.cfi_startproc
 289 0000 80B5     		push	{r7, lr}
 290              	.LCFI9:
 291              		.cfi_def_cfa_offset 8
 292              		.cfi_offset 7, -8
 293              		.cfi_offset 14, -4
 294 0002 82B0     		sub	sp, sp, #8
 295              	.LCFI10:
 296              		.cfi_def_cfa_offset 16
 297 0004 00AF     		add	r7, sp, #0
 298              	.LCFI11:
 299              		.cfi_def_cfa_register 7
 300 0006 7860     		str	r0, [r7, #4]
 301 0008 FB1C     		add	r3, r7, #3
 302 000a 1970     		strb	r1, [r3]
 303 000c 3B1C     		mov	r3, r7
 304 000e 1A80     		strh	r2, [r3]
 287:../Generated_Code/TU0.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 288:../Generated_Code/TU0.c ****   /* Parameter test - this test can be disabled by setting the "Ignore range checking"
 289:../Generated_Code/TU0.c ****      property to the "yes" value in the "Configuration inspector" */
 290:../Generated_Code/TU0.c ****   if (ChannelIdx > LAST_CHANNEL) {     /* Is the channel index out of range? */
 305              		.loc 1 290 0
 306 0010 FB1C     		add	r3, r7, #3
 307 0012 1B78     		ldrb	r3, [r3]
 308 0014 002B     		cmp	r3, #0
 309 0016 01D0     		beq	.L15
 291:../Generated_Code/TU0.c ****     return ERR_PARAM_INDEX;            /* If yes then error */
 310              		.loc 1 291 0
 311 0018 8223     		mov	r3, #130
 312 001a 13E0     		b	.L16
 313              	.L15:
 292:../Generated_Code/TU0.c ****   }
 293:../Generated_Code/TU0.c ****   if ((ChannelMode[ChannelIdx]) != 0U) { /* Is the channel in compare mode? */
 314              		.loc 1 293 0
 315 001c FB1C     		add	r3, r7, #3
 316 001e 1B78     		ldrb	r3, [r3]
 317 0020 0A4A     		ldr	r2, .L18
 318 0022 D35C     		ldrb	r3, [r2, r3]
 319 0024 002B     		cmp	r3, #0
 320 0026 01D0     		beq	.L17
 294:../Generated_Code/TU0.c ****     return ERR_NOTAVAIL;               /* If not then error */
 321              		.loc 1 294 0
 322 0028 0923     		mov	r3, #9
 323 002a 0BE0     		b	.L16
 324              	.L17:
 295:../Generated_Code/TU0.c ****   }
 296:../Generated_Code/TU0.c ****   TPM_PDD_WriteChannelValueReg(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], (uint16_t)Ticks);
 325              		.loc 1 296 0
 326 002c 0849     		ldr	r1, .L18+4
 327 002e FB1C     		add	r3, r7, #3
 328 0030 1B78     		ldrb	r3, [r3]
 329 0032 084A     		ldr	r2, .L18+8
 330 0034 D35C     		ldrb	r3, [r2, r3]
 331 0036 3A1C     		mov	r2, r7
 332 0038 1288     		ldrh	r2, [r2]
 333 003a 0133     		add	r3, r3, #1
 334 003c DB00     		lsl	r3, r3, #3
 335 003e CB18     		add	r3, r1, r3
 336 0040 9A60     		str	r2, [r3, #8]
 297:../Generated_Code/TU0.c ****   return ERR_OK;                       /* OK */
 337              		.loc 1 297 0
 338 0042 0023     		mov	r3, #0
 339              	.L16:
 298:../Generated_Code/TU0.c **** }
 340              		.loc 1 298 0
 341 0044 181C     		mov	r0, r3
 342 0046 BD46     		mov	sp, r7
 343 0048 02B0     		add	sp, sp, #8
 344              		@ sp needed for prologue
 345 004a 80BD     		pop	{r7, pc}
 346              	.L19:
 347              		.align	2
 348              	.L18:
 349 004c 00000000 		.word	_ZL11ChannelMode
 350 0050 00800340 		.word	1073971200
 351 0054 00000000 		.word	_ZL13ChannelDevice
 352              		.cfi_endproc
 353              	.LFE3:
 355              		.section	.text.TU0_GetOffsetTicks,"ax",%progbits
 356              		.align	2
 357              		.global	TU0_GetOffsetTicks
 358              		.code	16
 359              		.thumb_func
 361              	TU0_GetOffsetTicks:
 362              	.LFB4:
 299:../Generated_Code/TU0.c **** 
 300:../Generated_Code/TU0.c **** /*
 301:../Generated_Code/TU0.c **** ** ===================================================================
 302:../Generated_Code/TU0.c **** **     Method      :  TU0_GetOffsetTicks (component TimerUnit_LDD)
 303:../Generated_Code/TU0.c **** */
 304:../Generated_Code/TU0.c **** /*!
 305:../Generated_Code/TU0.c **** **     @brief
 306:../Generated_Code/TU0.c **** **         Returns the number of counter ticks to compare match channel
 307:../Generated_Code/TU0.c **** **         specified by the parameter ChannelIdx. See also method
 308:../Generated_Code/TU0.c **** **         [SetOffsetTicks]. This method is available when at least one
 309:../Generated_Code/TU0.c **** **         channel is configured.
 310:../Generated_Code/TU0.c **** **     @param
 311:../Generated_Code/TU0.c **** **         DeviceDataPtr   - Device data structure
 312:../Generated_Code/TU0.c **** **                           pointer returned by [Init] method.
 313:../Generated_Code/TU0.c **** **     @param
 314:../Generated_Code/TU0.c **** **         ChannelIdx      - Index of the component
 315:../Generated_Code/TU0.c **** **                           channel.
 316:../Generated_Code/TU0.c **** **     @param
 317:../Generated_Code/TU0.c **** **         TicksPtr        - Pointer to return value of the
 318:../Generated_Code/TU0.c **** **                           number of counter ticks to compare match.
 319:../Generated_Code/TU0.c **** **     @return
 320:../Generated_Code/TU0.c **** **                         - Error code, possible codes:
 321:../Generated_Code/TU0.c **** **                           ERR_OK - OK 
 322:../Generated_Code/TU0.c **** **                           ERR_PARAM_INDEX - ChannelIdx parameter is
 323:../Generated_Code/TU0.c **** **                           out of possible range.
 324:../Generated_Code/TU0.c **** **                           ERR_NOTAVAIL -  The compare mode is not
 325:../Generated_Code/TU0.c **** **                           selected for selected channel.
 326:../Generated_Code/TU0.c **** **                           ERR_SPEED - The component does not work in
 327:../Generated_Code/TU0.c **** **                           the active clock configuration
 328:../Generated_Code/TU0.c **** */
 329:../Generated_Code/TU0.c **** /* ===================================================================*/
 330:../Generated_Code/TU0.c **** LDD_TError TU0_GetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, TU0_TValueType *T
 331:../Generated_Code/TU0.c **** {
 363              		.loc 1 331 0
 364              		.cfi_startproc
 365 0000 80B5     		push	{r7, lr}
 366              	.LCFI12:
 367              		.cfi_def_cfa_offset 8
 368              		.cfi_offset 7, -8
 369              		.cfi_offset 14, -4
 370 0002 84B0     		sub	sp, sp, #16
 371              	.LCFI13:
 372              		.cfi_def_cfa_offset 24
 373 0004 00AF     		add	r7, sp, #0
 374              	.LCFI14:
 375              		.cfi_def_cfa_register 7
 376 0006 F860     		str	r0, [r7, #12]
 377 0008 7A60     		str	r2, [r7, #4]
 378 000a 3B1C     		mov	r3, r7
 379 000c 0B33     		add	r3, r3, #11
 380 000e 0A1C     		add	r2, r1, #0
 381 0010 1A70     		strb	r2, [r3]
 332:../Generated_Code/TU0.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 333:../Generated_Code/TU0.c ****   /* Parameter test - this test can be disabled by setting the "Ignore range checking"
 334:../Generated_Code/TU0.c ****      property to the "yes" value in the "Configuration inspector" */
 335:../Generated_Code/TU0.c ****   if (ChannelIdx > LAST_CHANNEL) {     /* Is the channel index out of range? */
 382              		.loc 1 335 0
 383 0012 3B1C     		mov	r3, r7
 384 0014 0B33     		add	r3, r3, #11
 385 0016 1B78     		ldrb	r3, [r3]
 386 0018 002B     		cmp	r3, #0
 387 001a 01D0     		beq	.L21
 336:../Generated_Code/TU0.c ****     return ERR_PARAM_INDEX;            /* If yes then error */
 388              		.loc 1 336 0
 389 001c 8223     		mov	r3, #130
 390 001e 16E0     		b	.L22
 391              	.L21:
 337:../Generated_Code/TU0.c ****   }
 338:../Generated_Code/TU0.c ****   if ((ChannelMode[ChannelIdx]) != 0U) { /* Is the channel in compare mode? */
 392              		.loc 1 338 0
 393 0020 3B1C     		mov	r3, r7
 394 0022 0B33     		add	r3, r3, #11
 395 0024 1B78     		ldrb	r3, [r3]
 396 0026 0C4A     		ldr	r2, .L24
 397 0028 D35C     		ldrb	r3, [r2, r3]
 398 002a 002B     		cmp	r3, #0
 399 002c 01D0     		beq	.L23
 339:../Generated_Code/TU0.c ****     return ERR_NOTAVAIL;               /* If not then error */
 400              		.loc 1 339 0
 401 002e 0923     		mov	r3, #9
 402 0030 0DE0     		b	.L22
 403              	.L23:
 340:../Generated_Code/TU0.c ****   }
 341:../Generated_Code/TU0.c ****   *TicksPtr = (TU0_TValueType)(TPM_PDD_ReadChannelValueReg(TPM0_BASE_PTR, ChannelDevice[ChannelIdx]
 404              		.loc 1 341 0
 405 0032 0A4A     		ldr	r2, .L24+4
 406 0034 3B1C     		mov	r3, r7
 407 0036 0B33     		add	r3, r3, #11
 408 0038 1B78     		ldrb	r3, [r3]
 409 003a 0949     		ldr	r1, .L24+8
 410 003c CB5C     		ldrb	r3, [r1, r3]
 411 003e 0133     		add	r3, r3, #1
 412 0040 DB00     		lsl	r3, r3, #3
 413 0042 D318     		add	r3, r2, r3
 414 0044 9B68     		ldr	r3, [r3, #8]
 415 0046 9AB2     		uxth	r2, r3
 416 0048 7B68     		ldr	r3, [r7, #4]
 417 004a 1A80     		strh	r2, [r3]
 342:../Generated_Code/TU0.c ****   return ERR_OK;                       /* OK */
 418              		.loc 1 342 0
 419 004c 0023     		mov	r3, #0
 420              	.L22:
 343:../Generated_Code/TU0.c **** }
 421              		.loc 1 343 0
 422 004e 181C     		mov	r0, r3
 423 0050 BD46     		mov	sp, r7
 424 0052 04B0     		add	sp, sp, #16
 425              		@ sp needed for prologue
 426 0054 80BD     		pop	{r7, pc}
 427              	.L25:
 428 0056 C046     		.align	2
 429              	.L24:
 430 0058 00000000 		.word	_ZL11ChannelMode
 431 005c 00800340 		.word	1073971200
 432 0060 00000000 		.word	_ZL13ChannelDevice
 433              		.cfi_endproc
 434              	.LFE4:
 436              		.section	.text.TU0_SelectOutputAction,"ax",%progbits
 437              		.align	2
 438              		.global	TU0_SelectOutputAction
 439              		.code	16
 440              		.thumb_func
 442              	TU0_SelectOutputAction:
 443              	.LFB5:
 344:../Generated_Code/TU0.c **** 
 345:../Generated_Code/TU0.c **** /*
 346:../Generated_Code/TU0.c **** ** ===================================================================
 347:../Generated_Code/TU0.c **** **     Method      :  TU0_SelectOutputAction (component TimerUnit_LDD)
 348:../Generated_Code/TU0.c **** */
 349:../Generated_Code/TU0.c **** /*!
 350:../Generated_Code/TU0.c **** **     @brief
 351:../Generated_Code/TU0.c **** **         Sets the type of compare match and counter overflow action
 352:../Generated_Code/TU0.c **** **         on channel output. This method is available when at least
 353:../Generated_Code/TU0.c **** **         one channel is configured.
 354:../Generated_Code/TU0.c **** **     @param
 355:../Generated_Code/TU0.c **** **         DeviceDataPtr   - Device data structure
 356:../Generated_Code/TU0.c **** **                           pointer returned by [Init] method.
 357:../Generated_Code/TU0.c **** **     @param
 358:../Generated_Code/TU0.c **** **         ChannelIdx      - Index of the component
 359:../Generated_Code/TU0.c **** **                           channel.
 360:../Generated_Code/TU0.c **** **     @param
 361:../Generated_Code/TU0.c **** **         CompareAction   - Select output action
 362:../Generated_Code/TU0.c **** **                           on compare match
 363:../Generated_Code/TU0.c **** **     @param
 364:../Generated_Code/TU0.c **** **         CounterAction   - Select output action
 365:../Generated_Code/TU0.c **** **                           on counter overflow
 366:../Generated_Code/TU0.c **** **     @return
 367:../Generated_Code/TU0.c **** **                         - Error code, possible codes:
 368:../Generated_Code/TU0.c **** **                           ERR_OK - OK
 369:../Generated_Code/TU0.c **** **                           ERR_PARAM_INDEX - ChannelIdx parameter is
 370:../Generated_Code/TU0.c **** **                           out of possible range
 371:../Generated_Code/TU0.c **** **                           ERR_NOTAVAIL -  Action is not possible on
 372:../Generated_Code/TU0.c **** **                           selected channel or counter. Supported
 373:../Generated_Code/TU0.c **** **                           combinations are HW specific.
 374:../Generated_Code/TU0.c **** **                           ERR_SPEED - The component does not work in
 375:../Generated_Code/TU0.c **** **                           the active clock configuration
 376:../Generated_Code/TU0.c **** */
 377:../Generated_Code/TU0.c **** /* ===================================================================*/
 378:../Generated_Code/TU0.c **** LDD_TError TU0_SelectOutputAction(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, LDD_TimerUnit
 379:../Generated_Code/TU0.c **** {
 444              		.loc 1 379 0
 445              		.cfi_startproc
 446 0000 90B5     		push	{r4, r7, lr}
 447              	.LCFI15:
 448              		.cfi_def_cfa_offset 12
 449              		.cfi_offset 4, -12
 450              		.cfi_offset 7, -8
 451              		.cfi_offset 14, -4
 452 0002 83B0     		sub	sp, sp, #12
 453              	.LCFI16:
 454              		.cfi_def_cfa_offset 24
 455 0004 00AF     		add	r7, sp, #0
 456              	.LCFI17:
 457              		.cfi_def_cfa_register 7
 458 0006 7860     		str	r0, [r7, #4]
 459 0008 081C     		mov	r0, r1
 460 000a 111C     		mov	r1, r2
 461 000c 1A1C     		mov	r2, r3
 462 000e FB1C     		add	r3, r7, #3
 463 0010 1870     		strb	r0, [r3]
 464 0012 BB1C     		add	r3, r7, #2
 465 0014 1970     		strb	r1, [r3]
 466 0016 7B1C     		add	r3, r7, #1
 467 0018 1A70     		strb	r2, [r3]
 380:../Generated_Code/TU0.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 381:../Generated_Code/TU0.c ****   /* Parameter test - this test can be disabled by setting the "Ignore range checking"
 382:../Generated_Code/TU0.c ****      property to the "yes" value in the "Configuration inspector" */
 383:../Generated_Code/TU0.c ****   if (ChannelIdx > LAST_CHANNEL) {     /* Is the channel index out of range? */
 468              		.loc 1 383 0
 469 001a FB1C     		add	r3, r7, #3
 470 001c 1B78     		ldrb	r3, [r3]
 471 001e 002B     		cmp	r3, #0
 472 0020 01D0     		beq	.L27
 384:../Generated_Code/TU0.c ****     return ERR_PARAM_INDEX;            /* If yes then error */
 473              		.loc 1 384 0
 474 0022 8223     		mov	r3, #130
 475 0024 06E1     		b	.L28
 476              	.L27:
 385:../Generated_Code/TU0.c ****   }
 386:../Generated_Code/TU0.c ****   if ((ChannelMode[ChannelIdx]) != 0U) { /* Is the channel in compare mode? */
 477              		.loc 1 386 0
 478 0026 FB1C     		add	r3, r7, #3
 479 0028 1B78     		ldrb	r3, [r3]
 480 002a 844A     		ldr	r2, .L45
 481 002c D35C     		ldrb	r3, [r2, r3]
 482 002e 002B     		cmp	r3, #0
 483 0030 01D0     		beq	.L29
 387:../Generated_Code/TU0.c ****     return ERR_NOTAVAIL;               /* If not then error */
 484              		.loc 1 387 0
 485 0032 0923     		mov	r3, #9
 486 0034 FEE0     		b	.L28
 487              	.L29:
 388:../Generated_Code/TU0.c ****   }
 389:../Generated_Code/TU0.c ****   switch (CounterAction) {
 488              		.loc 1 389 0
 489 0036 7B1C     		add	r3, r7, #1
 490 0038 1B78     		ldrb	r3, [r3]
 491 003a 022B     		cmp	r3, #2
 492 003c 00D1     		bne	.LCB426
 493 003e 8CE0     		b	.L32	@long jump
 494              	.LCB426:
 495 0040 032B     		cmp	r3, #3
 496 0042 00D1     		bne	.LCB428
 497 0044 BEE0     		b	.L33	@long jump
 498              	.LCB428:
 499 0046 002B     		cmp	r3, #0
 500 0048 00D0     		beq	.LCB430
 501 004a F0E0     		b	.L44	@long jump
 502              	.LCB430:
 503              	.L31:
 390:../Generated_Code/TU0.c ****     case OUTPUT_NONE:
 391:../Generated_Code/TU0.c ****       TPM_PDD_SelectChannelMode(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_OUTPUT_TOGGLE);
 504              		.loc 1 391 0
 505 004c 7C49     		ldr	r1, .L45+4
 506 004e FB1C     		add	r3, r7, #3
 507 0050 1B78     		ldrb	r3, [r3]
 508 0052 7C4A     		ldr	r2, .L45+8
 509 0054 D35C     		ldrb	r3, [r2, r3]
 510 0056 181C     		mov	r0, r3
 511 0058 794A     		ldr	r2, .L45+4
 512 005a FB1C     		add	r3, r7, #3
 513 005c 1B78     		ldrb	r3, [r3]
 514 005e 794C     		ldr	r4, .L45+8
 515 0060 E35C     		ldrb	r3, [r4, r3]
 516 0062 0133     		add	r3, r3, #1
 517 0064 DB00     		lsl	r3, r3, #3
 518 0066 D318     		add	r3, r2, r3
 519 0068 5B68     		ldr	r3, [r3, #4]
 520 006a B022     		mov	r2, #176
 521 006c 9343     		bic	r3, r2
 522 006e 1022     		mov	r2, #16
 523 0070 1A43     		orr	r2, r3
 524 0072 431C     		add	r3, r0, #1
 525 0074 DB00     		lsl	r3, r3, #3
 526 0076 CB18     		add	r3, r1, r3
 527 0078 5A60     		str	r2, [r3, #4]
 392:../Generated_Code/TU0.c ****       switch (CompareAction) {
 528              		.loc 1 392 0
 529 007a BB1C     		add	r3, r7, #2
 530 007c 1B78     		ldrb	r3, [r3]
 531 007e 012B     		cmp	r3, #1
 532 0080 20D0     		beq	.L36
 533 0082 02DC     		bgt	.L39
 534 0084 002B     		cmp	r3, #0
 535 0086 05D0     		beq	.L35
 536 0088 64E0     		b	.L34
 537              	.L39:
 538 008a 022B     		cmp	r3, #2
 539 008c 32D0     		beq	.L37
 540 008e 032B     		cmp	r3, #3
 541 0090 48D0     		beq	.L38
 542 0092 5FE0     		b	.L34
 543              	.L35:
 393:../Generated_Code/TU0.c ****         case OUTPUT_NONE:
 394:../Generated_Code/TU0.c ****           TPM_PDD_SelectChannelEdgeLevel(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_NON
 544              		.loc 1 394 0
 545 0094 6A49     		ldr	r1, .L45+4
 546 0096 FB1C     		add	r3, r7, #3
 547 0098 1B78     		ldrb	r3, [r3]
 548 009a 6A4A     		ldr	r2, .L45+8
 549 009c D35C     		ldrb	r3, [r2, r3]
 550 009e 181C     		mov	r0, r3
 551 00a0 674A     		ldr	r2, .L45+4
 552 00a2 FB1C     		add	r3, r7, #3
 553 00a4 1B78     		ldrb	r3, [r3]
 554 00a6 674C     		ldr	r4, .L45+8
 555 00a8 E35C     		ldrb	r3, [r4, r3]
 556 00aa 0133     		add	r3, r3, #1
 557 00ac DB00     		lsl	r3, r3, #3
 558 00ae D318     		add	r3, r2, r3
 559 00b0 5B68     		ldr	r3, [r3, #4]
 560 00b2 8C22     		mov	r2, #140
 561 00b4 1C1C     		mov	r4, r3
 562 00b6 9443     		bic	r4, r2
 563 00b8 221C     		mov	r2, r4
 564 00ba 431C     		add	r3, r0, #1
 565 00bc DB00     		lsl	r3, r3, #3
 566 00be CB18     		add	r3, r1, r3
 567 00c0 5A60     		str	r2, [r3, #4]
 395:../Generated_Code/TU0.c ****           break;
 568              		.loc 1 395 0
 569 00c2 49E0     		b	.L40
 570              	.L36:
 396:../Generated_Code/TU0.c ****         case OUTPUT_TOGGLE:
 397:../Generated_Code/TU0.c ****           TPM_PDD_SelectChannelEdgeLevel(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_RIS
 571              		.loc 1 397 0
 572 00c4 5E49     		ldr	r1, .L45+4
 573 00c6 FB1C     		add	r3, r7, #3
 574 00c8 1B78     		ldrb	r3, [r3]
 575 00ca 5E4A     		ldr	r2, .L45+8
 576 00cc D35C     		ldrb	r3, [r2, r3]
 577 00ce 181C     		mov	r0, r3
 578 00d0 5B4A     		ldr	r2, .L45+4
 579 00d2 FB1C     		add	r3, r7, #3
 580 00d4 1B78     		ldrb	r3, [r3]
 581 00d6 5B4C     		ldr	r4, .L45+8
 582 00d8 E35C     		ldrb	r3, [r4, r3]
 583 00da 0133     		add	r3, r3, #1
 584 00dc DB00     		lsl	r3, r3, #3
 585 00de D318     		add	r3, r2, r3
 586 00e0 5B68     		ldr	r3, [r3, #4]
 587 00e2 8C22     		mov	r2, #140
 588 00e4 9343     		bic	r3, r2
 589 00e6 0422     		mov	r2, #4
 590 00e8 1A43     		orr	r2, r3
 591 00ea 431C     		add	r3, r0, #1
 592 00ec DB00     		lsl	r3, r3, #3
 593 00ee CB18     		add	r3, r1, r3
 594 00f0 5A60     		str	r2, [r3, #4]
 398:../Generated_Code/TU0.c ****           break;
 595              		.loc 1 398 0
 596 00f2 31E0     		b	.L40
 597              	.L37:
 399:../Generated_Code/TU0.c ****         case OUTPUT_CLEAR:
 400:../Generated_Code/TU0.c ****           TPM_PDD_SelectChannelEdgeLevel(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_FAL
 598              		.loc 1 400 0
 599 00f4 5249     		ldr	r1, .L45+4
 600 00f6 FB1C     		add	r3, r7, #3
 601 00f8 1B78     		ldrb	r3, [r3]
 602 00fa 524A     		ldr	r2, .L45+8
 603 00fc D35C     		ldrb	r3, [r2, r3]
 604 00fe 181C     		mov	r0, r3
 605 0100 4F4A     		ldr	r2, .L45+4
 606 0102 FB1C     		add	r3, r7, #3
 607 0104 1B78     		ldrb	r3, [r3]
 608 0106 4F4C     		ldr	r4, .L45+8
 609 0108 E35C     		ldrb	r3, [r4, r3]
 610 010a 0133     		add	r3, r3, #1
 611 010c DB00     		lsl	r3, r3, #3
 612 010e D318     		add	r3, r2, r3
 613 0110 5B68     		ldr	r3, [r3, #4]
 614 0112 8C22     		mov	r2, #140
 615 0114 9343     		bic	r3, r2
 616 0116 0822     		mov	r2, #8
 617 0118 1A43     		orr	r2, r3
 618 011a 431C     		add	r3, r0, #1
 619 011c DB00     		lsl	r3, r3, #3
 620 011e CB18     		add	r3, r1, r3
 621 0120 5A60     		str	r2, [r3, #4]
 401:../Generated_Code/TU0.c ****           break;
 622              		.loc 1 401 0
 623 0122 19E0     		b	.L40
 624              	.L38:
 402:../Generated_Code/TU0.c ****         case OUTPUT_SET:
 403:../Generated_Code/TU0.c ****           TPM_PDD_SelectChannelEdgeLevel(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_BOT
 625              		.loc 1 403 0
 626 0124 4649     		ldr	r1, .L45+4
 627 0126 FB1C     		add	r3, r7, #3
 628 0128 1B78     		ldrb	r3, [r3]
 629 012a 464A     		ldr	r2, .L45+8
 630 012c D35C     		ldrb	r3, [r2, r3]
 631 012e 181C     		mov	r0, r3
 632 0130 434A     		ldr	r2, .L45+4
 633 0132 FB1C     		add	r3, r7, #3
 634 0134 1B78     		ldrb	r3, [r3]
 635 0136 434C     		ldr	r4, .L45+8
 636 0138 E35C     		ldrb	r3, [r4, r3]
 637 013a 0133     		add	r3, r3, #1
 638 013c DB00     		lsl	r3, r3, #3
 639 013e D318     		add	r3, r2, r3
 640 0140 5B68     		ldr	r3, [r3, #4]
 641 0142 8C22     		mov	r2, #140
 642 0144 9343     		bic	r3, r2
 643 0146 0C22     		mov	r2, #12
 644 0148 1A43     		orr	r2, r3
 645 014a 431C     		add	r3, r0, #1
 646 014c DB00     		lsl	r3, r3, #3
 647 014e CB18     		add	r3, r1, r3
 648 0150 5A60     		str	r2, [r3, #4]
 404:../Generated_Code/TU0.c ****           break;
 649              		.loc 1 404 0
 650 0152 01E0     		b	.L40
 651              	.L34:
 405:../Generated_Code/TU0.c ****         default:
 406:../Generated_Code/TU0.c ****           return ERR_NOTAVAIL;
 652              		.loc 1 406 0
 653 0154 0923     		mov	r3, #9
 654 0156 6DE0     		b	.L28
 655              	.L40:
 407:../Generated_Code/TU0.c ****       }
 408:../Generated_Code/TU0.c ****       break;
 656              		.loc 1 408 0
 657 0158 6BE0     		b	.L41
 658              	.L32:
 409:../Generated_Code/TU0.c ****     case OUTPUT_CLEAR:
 410:../Generated_Code/TU0.c ****       if (CompareAction != OUTPUT_SET) {
 659              		.loc 1 410 0
 660 015a BB1C     		add	r3, r7, #2
 661 015c 1B78     		ldrb	r3, [r3]
 662 015e 032B     		cmp	r3, #3
 663 0160 01D0     		beq	.L42
 411:../Generated_Code/TU0.c ****         return ERR_NOTAVAIL;
 664              		.loc 1 411 0
 665 0162 0923     		mov	r3, #9
 666 0164 66E0     		b	.L28
 667              	.L42:
 412:../Generated_Code/TU0.c ****       }
 413:../Generated_Code/TU0.c ****       TPM_PDD_SelectChannelMode(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_OUTPUT_CLEAR);
 668              		.loc 1 413 0
 669 0166 3649     		ldr	r1, .L45+4
 670 0168 FB1C     		add	r3, r7, #3
 671 016a 1B78     		ldrb	r3, [r3]
 672 016c 354A     		ldr	r2, .L45+8
 673 016e D35C     		ldrb	r3, [r2, r3]
 674 0170 181C     		mov	r0, r3
 675 0172 334A     		ldr	r2, .L45+4
 676 0174 FB1C     		add	r3, r7, #3
 677 0176 1B78     		ldrb	r3, [r3]
 678 0178 324C     		ldr	r4, .L45+8
 679 017a E35C     		ldrb	r3, [r4, r3]
 680 017c 0133     		add	r3, r3, #1
 681 017e DB00     		lsl	r3, r3, #3
 682 0180 D318     		add	r3, r2, r3
 683 0182 5B68     		ldr	r3, [r3, #4]
 684 0184 B022     		mov	r2, #176
 685 0186 9343     		bic	r3, r2
 686 0188 2022     		mov	r2, #32
 687 018a 1A43     		orr	r2, r3
 688 018c 431C     		add	r3, r0, #1
 689 018e DB00     		lsl	r3, r3, #3
 690 0190 CB18     		add	r3, r1, r3
 691 0192 5A60     		str	r2, [r3, #4]
 414:../Generated_Code/TU0.c ****       TPM_PDD_SelectChannelEdgeLevel(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_BOTH);
 692              		.loc 1 414 0
 693 0194 2A49     		ldr	r1, .L45+4
 694 0196 FB1C     		add	r3, r7, #3
 695 0198 1B78     		ldrb	r3, [r3]
 696 019a 2A4A     		ldr	r2, .L45+8
 697 019c D35C     		ldrb	r3, [r2, r3]
 698 019e 181C     		mov	r0, r3
 699 01a0 274A     		ldr	r2, .L45+4
 700 01a2 FB1C     		add	r3, r7, #3
 701 01a4 1B78     		ldrb	r3, [r3]
 702 01a6 274C     		ldr	r4, .L45+8
 703 01a8 E35C     		ldrb	r3, [r4, r3]
 704 01aa 0133     		add	r3, r3, #1
 705 01ac DB00     		lsl	r3, r3, #3
 706 01ae D318     		add	r3, r2, r3
 707 01b0 5B68     		ldr	r3, [r3, #4]
 708 01b2 8C22     		mov	r2, #140
 709 01b4 9343     		bic	r3, r2
 710 01b6 0C22     		mov	r2, #12
 711 01b8 1A43     		orr	r2, r3
 712 01ba 431C     		add	r3, r0, #1
 713 01bc DB00     		lsl	r3, r3, #3
 714 01be CB18     		add	r3, r1, r3
 715 01c0 5A60     		str	r2, [r3, #4]
 415:../Generated_Code/TU0.c ****       break;
 716              		.loc 1 415 0
 717 01c2 36E0     		b	.L41
 718              	.L33:
 416:../Generated_Code/TU0.c ****     case OUTPUT_SET:
 417:../Generated_Code/TU0.c ****       if (CompareAction != OUTPUT_CLEAR) {
 719              		.loc 1 417 0
 720 01c4 BB1C     		add	r3, r7, #2
 721 01c6 1B78     		ldrb	r3, [r3]
 722 01c8 022B     		cmp	r3, #2
 723 01ca 01D0     		beq	.L43
 418:../Generated_Code/TU0.c ****         return ERR_NOTAVAIL;
 724              		.loc 1 418 0
 725 01cc 0923     		mov	r3, #9
 726 01ce 31E0     		b	.L28
 727              	.L43:
 419:../Generated_Code/TU0.c ****       }
 420:../Generated_Code/TU0.c ****       TPM_PDD_SelectChannelMode(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_OUTPUT_SET);
 728              		.loc 1 420 0
 729 01d0 1B49     		ldr	r1, .L45+4
 730 01d2 FB1C     		add	r3, r7, #3
 731 01d4 1B78     		ldrb	r3, [r3]
 732 01d6 1B4A     		ldr	r2, .L45+8
 733 01d8 D35C     		ldrb	r3, [r2, r3]
 734 01da 181C     		mov	r0, r3
 735 01dc 184A     		ldr	r2, .L45+4
 736 01de FB1C     		add	r3, r7, #3
 737 01e0 1B78     		ldrb	r3, [r3]
 738 01e2 184C     		ldr	r4, .L45+8
 739 01e4 E35C     		ldrb	r3, [r4, r3]
 740 01e6 0133     		add	r3, r3, #1
 741 01e8 DB00     		lsl	r3, r3, #3
 742 01ea D318     		add	r3, r2, r3
 743 01ec 5B68     		ldr	r3, [r3, #4]
 744 01ee B022     		mov	r2, #176
 745 01f0 9343     		bic	r3, r2
 746 01f2 3022     		mov	r2, #48
 747 01f4 1A43     		orr	r2, r3
 748 01f6 431C     		add	r3, r0, #1
 749 01f8 DB00     		lsl	r3, r3, #3
 750 01fa CB18     		add	r3, r1, r3
 751 01fc 5A60     		str	r2, [r3, #4]
 421:../Generated_Code/TU0.c ****       TPM_PDD_SelectChannelEdgeLevel(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_FALLING
 752              		.loc 1 421 0
 753 01fe 1049     		ldr	r1, .L45+4
 754 0200 FB1C     		add	r3, r7, #3
 755 0202 1B78     		ldrb	r3, [r3]
 756 0204 0F4A     		ldr	r2, .L45+8
 757 0206 D35C     		ldrb	r3, [r2, r3]
 758 0208 181C     		mov	r0, r3
 759 020a 0D4A     		ldr	r2, .L45+4
 760 020c FB1C     		add	r3, r7, #3
 761 020e 1B78     		ldrb	r3, [r3]
 762 0210 0C4C     		ldr	r4, .L45+8
 763 0212 E35C     		ldrb	r3, [r4, r3]
 764 0214 0133     		add	r3, r3, #1
 765 0216 DB00     		lsl	r3, r3, #3
 766 0218 D318     		add	r3, r2, r3
 767 021a 5B68     		ldr	r3, [r3, #4]
 768 021c 8C22     		mov	r2, #140
 769 021e 9343     		bic	r3, r2
 770 0220 0822     		mov	r2, #8
 771 0222 1A43     		orr	r2, r3
 772 0224 431C     		add	r3, r0, #1
 773 0226 DB00     		lsl	r3, r3, #3
 774 0228 CB18     		add	r3, r1, r3
 775 022a 5A60     		str	r2, [r3, #4]
 422:../Generated_Code/TU0.c ****       break;
 776              		.loc 1 422 0
 777 022c 01E0     		b	.L41
 778              	.L44:
 423:../Generated_Code/TU0.c ****     default:
 424:../Generated_Code/TU0.c ****       return ERR_NOTAVAIL;
 779              		.loc 1 424 0
 780 022e 0923     		mov	r3, #9
 781 0230 00E0     		b	.L28
 782              	.L41:
 425:../Generated_Code/TU0.c ****   }
 426:../Generated_Code/TU0.c ****   return ERR_OK;                       /* OK */
 783              		.loc 1 426 0
 784 0232 0023     		mov	r3, #0
 785              	.L28:
 427:../Generated_Code/TU0.c **** }
 786              		.loc 1 427 0
 787 0234 181C     		mov	r0, r3
 788 0236 BD46     		mov	sp, r7
 789 0238 03B0     		add	sp, sp, #12
 790              		@ sp needed for prologue
 791 023a 90BD     		pop	{r4, r7, pc}
 792              	.L46:
 793              		.align	2
 794              	.L45:
 795 023c 00000000 		.word	_ZL11ChannelMode
 796 0240 00800340 		.word	1073971200
 797 0244 00000000 		.word	_ZL13ChannelDevice
 798              		.cfi_endproc
 799              	.LFE5:
 801              		.section	.rodata._ZL13ChannelDevice,"a",%progbits
 802              		.align	2
 805              	_ZL13ChannelDevice:
 806 0000 01       		.byte	1
 807 0001 000000   		.section	.rodata._ZL11ChannelMode,"a",%progbits
 808              		.align	2
 811              	_ZL11ChannelMode:
 812 0000 00       		.space	1
 813 0001 000000   		.text
 814              	.Letext0:
 815              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 816              		.file 3 "../Generated_Code/PE_Types.h"
 817              		.file 4 "../Generated_Code/IO_Map.h"
 818              		.file 5 "../Generated_Code/TU0.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TU0.c
C:\Users\Judah\AppData\Local\Temp\cc1UfBMz.s:18     .bss._ZL33DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 $d
C:\Users\Judah\AppData\Local\Temp\cc1UfBMz.s:21     .bss._ZL33DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 _ZL33DeviceDataPrv__DEFAULT_RTOS_ALLOC
C:\Users\Judah\AppData\Local\Temp\cc1UfBMz.s:24     .text.TU0_Init:00000000 $t
C:\Users\Judah\AppData\Local\Temp\cc1UfBMz.s:29     .text.TU0_Init:00000000 TU0_Init
C:\Users\Judah\AppData\Local\Temp\cc1UfBMz.s:170    .text.TU0_Init:000000b8 $d
C:\Users\Judah\AppData\Local\Temp\cc1UfBMz.s:182    .text.TU0_GetPeriodTicks:00000000 $t
C:\Users\Judah\AppData\Local\Temp\cc1UfBMz.s:187    .text.TU0_GetPeriodTicks:00000000 TU0_GetPeriodTicks
C:\Users\Judah\AppData\Local\Temp\cc1UfBMz.s:236    .text.TU0_GetPeriodTicks:00000038 $d
C:\Users\Judah\AppData\Local\Temp\cc1UfBMz.s:241    .text.TU0_GetCounterValue:00000000 $t
C:\Users\Judah\AppData\Local\Temp\cc1UfBMz.s:246    .text.TU0_GetCounterValue:00000000 TU0_GetCounterValue
C:\Users\Judah\AppData\Local\Temp\cc1UfBMz.s:275    .text.TU0_GetCounterValue:00000018 $d
C:\Users\Judah\AppData\Local\Temp\cc1UfBMz.s:280    .text.TU0_SetOffsetTicks:00000000 $t
C:\Users\Judah\AppData\Local\Temp\cc1UfBMz.s:285    .text.TU0_SetOffsetTicks:00000000 TU0_SetOffsetTicks
C:\Users\Judah\AppData\Local\Temp\cc1UfBMz.s:349    .text.TU0_SetOffsetTicks:0000004c $d
C:\Users\Judah\AppData\Local\Temp\cc1UfBMz.s:811    .rodata._ZL11ChannelMode:00000000 _ZL11ChannelMode
C:\Users\Judah\AppData\Local\Temp\cc1UfBMz.s:805    .rodata._ZL13ChannelDevice:00000000 _ZL13ChannelDevice
C:\Users\Judah\AppData\Local\Temp\cc1UfBMz.s:356    .text.TU0_GetOffsetTicks:00000000 $t
C:\Users\Judah\AppData\Local\Temp\cc1UfBMz.s:361    .text.TU0_GetOffsetTicks:00000000 TU0_GetOffsetTicks
C:\Users\Judah\AppData\Local\Temp\cc1UfBMz.s:430    .text.TU0_GetOffsetTicks:00000058 $d
C:\Users\Judah\AppData\Local\Temp\cc1UfBMz.s:437    .text.TU0_SelectOutputAction:00000000 $t
C:\Users\Judah\AppData\Local\Temp\cc1UfBMz.s:442    .text.TU0_SelectOutputAction:00000000 TU0_SelectOutputAction
C:\Users\Judah\AppData\Local\Temp\cc1UfBMz.s:795    .text.TU0_SelectOutputAction:0000023c $d
C:\Users\Judah\AppData\Local\Temp\cc1UfBMz.s:802    .rodata._ZL13ChannelDevice:00000000 $d
C:\Users\Judah\AppData\Local\Temp\cc1UfBMz.s:808    .rodata._ZL11ChannelMode:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PE_LDD_DeviceDataList
