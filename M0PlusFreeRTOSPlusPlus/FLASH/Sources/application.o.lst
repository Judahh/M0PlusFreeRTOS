   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"application.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN12counterclassC2Ev,"axG",%progbits,_ZN12counterclassC5Ev,comdat
  18              		.align	2
  19              		.weak	_ZN12counterclassC2Ev
  20              		.code	16
  21              		.thumb_func
  23              	_ZN12counterclassC2Ev:
  24              	.LFB1:
  25              		.file 1 "../Sources/application.cpp"
   1:../Sources/application.cpp **** /*
   2:../Sources/application.cpp ****  * main implementation: use this 'C++' sample to create your own application
   3:../Sources/application.cpp ****  *
   4:../Sources/application.cpp ****  */
   5:../Sources/application.cpp **** 
   6:../Sources/application.cpp **** /*#include <stdio.h>*//* uncomment to enable 'puts' below */
   7:../Sources/application.cpp **** 
   8:../Sources/application.cpp **** #include "application.h"
   9:../Sources/application.cpp **** 
  10:../Sources/application.cpp **** class counterclass {
  11:../Sources/application.cpp **** 	private:
  12:../Sources/application.cpp **** 		int m_counter;
  13:../Sources/application.cpp **** 	public:
  14:../Sources/application.cpp **** 		counterclass(void) {
  26              		.loc 1 14 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 82B0     		sub	sp, sp, #8
  34              	.LCFI1:
  35              		.cfi_def_cfa_offset 16
  36 0004 00AF     		add	r7, sp, #0
  37              	.LCFI2:
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
  40              	.LBB2:
  15:../Sources/application.cpp **** 			m_counter = 0;
  41              		.loc 1 15 0
  42 0008 7B68     		ldr	r3, [r7, #4]
  43 000a 0022     		mov	r2, #0
  44 000c 1A60     		str	r2, [r3]
  45              	.LBE2:
  16:../Sources/application.cpp **** 		};
  46              		.loc 1 16 0
  47 000e 7B68     		ldr	r3, [r7, #4]
  48 0010 181C     		mov	r0, r3
  49 0012 BD46     		mov	sp, r7
  50 0014 02B0     		add	sp, sp, #8
  51              		@ sp needed for prologue
  52 0016 80BD     		pop	{r7, pc}
  53              		.cfi_endproc
  54              	.LFE1:
  56              		.weak	_ZN12counterclassC1Ev
  57              		.thumb_set _ZN12counterclassC1Ev,_ZN12counterclassC2Ev
  58              		.section	.text._ZN12counterclass9incrementEv,"axG",%progbits,_ZN12counterclass9incrementEv,comdat
  59              		.align	2
  60              		.weak	_ZN12counterclass9incrementEv
  61              		.code	16
  62              		.thumb_func
  64              	_ZN12counterclass9incrementEv:
  65              	.LFB3:
  17:../Sources/application.cpp **** 
  18:../Sources/application.cpp **** 		void increment(void) {
  66              		.loc 1 18 0
  67              		.cfi_startproc
  68 0000 80B5     		push	{r7, lr}
  69              	.LCFI3:
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 7, -8
  72              		.cfi_offset 14, -4
  73 0002 84B0     		sub	sp, sp, #16
  74              	.LCFI4:
  75              		.cfi_def_cfa_offset 24
  76 0004 00AF     		add	r7, sp, #0
  77              	.LCFI5:
  78              		.cfi_def_cfa_register 7
  79 0006 7860     		str	r0, [r7, #4]
  80              	.LBB3:
  19:../Sources/application.cpp **** 			m_counter++;
  81              		.loc 1 19 0
  82 0008 7B68     		ldr	r3, [r7, #4]
  83 000a 1B68     		ldr	r3, [r3]
  84 000c 5A1C     		add	r2, r3, #1
  85 000e 7B68     		ldr	r3, [r7, #4]
  86 0010 1A60     		str	r2, [r3]
  20:../Sources/application.cpp **** 			uint8_t red = m_counter / 0x10000; //  12
  87              		.loc 1 20 0
  88 0012 7B68     		ldr	r3, [r7, #4]
  89 0014 1B68     		ldr	r3, [r3]
  90 0016 002B     		cmp	r3, #0
  91 0018 01DA     		bge	.L5
  92 001a 214A     		ldr	r2, .L9
  93 001c 9B18     		add	r3, r3, r2
  94              	.L5:
  95 001e 1B14     		asr	r3, r3, #16
  96 0020 1A1C     		mov	r2, r3
  97 0022 3B1C     		mov	r3, r7
  98 0024 0F33     		add	r3, r3, #15
  99 0026 1A70     		strb	r2, [r3]
  21:../Sources/application.cpp **** 			uint8_t green = (m_counter % 0x10000) / 0x100; //  34
 100              		.loc 1 21 0
 101 0028 7B68     		ldr	r3, [r7, #4]
 102 002a 1A68     		ldr	r2, [r3]
 103 002c 1D4B     		ldr	r3, .L9+4
 104 002e 1340     		and	r3, r2
 105 0030 03D5     		bpl	.L6
 106 0032 013B     		sub	r3, r3, #1
 107 0034 1C4A     		ldr	r2, .L9+8
 108 0036 1343     		orr	r3, r2
 109 0038 0133     		add	r3, r3, #1
 110              	.L6:
 111 003a 002B     		cmp	r3, #0
 112 003c 00DA     		bge	.L7
 113 003e FF33     		add	r3, r3, #255
 114              	.L7:
 115 0040 1B12     		asr	r3, r3, #8
 116 0042 1A1C     		mov	r2, r3
 117 0044 3B1C     		mov	r3, r7
 118 0046 0E33     		add	r3, r3, #14
 119 0048 1A70     		strb	r2, [r3]
  22:../Sources/application.cpp **** 			uint8_t blue = m_counter % 0x100; // 56
 120              		.loc 1 22 0
 121 004a 7B68     		ldr	r3, [r7, #4]
 122 004c 1A68     		ldr	r2, [r3]
 123 004e 174B     		ldr	r3, .L9+12
 124 0050 1340     		and	r3, r2
 125 0052 03D5     		bpl	.L8
 126 0054 013B     		sub	r3, r3, #1
 127 0056 164A     		ldr	r2, .L9+16
 128 0058 1343     		orr	r3, r2
 129 005a 0133     		add	r3, r3, #1
 130              	.L8:
 131 005c 1A1C     		mov	r2, r3
 132 005e 3B1C     		mov	r3, r7
 133 0060 0D33     		add	r3, r3, #13
 134 0062 1A70     		strb	r2, [r3]
  23:../Sources/application.cpp **** 
  24:../Sources/application.cpp **** 			PWMLEDRed_SetRatio8(red);
 135              		.loc 1 24 0
 136 0064 134B     		ldr	r3, .L9+20
 137 0066 1A69     		ldr	r2, [r3, #16]
 138 0068 3B1C     		mov	r3, r7
 139 006a 0F33     		add	r3, r3, #15
 140 006c 1B78     		ldrb	r3, [r3]
 141 006e 101C     		mov	r0, r2
 142 0070 191C     		mov	r1, r3
 143 0072 FFF7FEFF 		bl	PwmLdd2_SetRatio8
  25:../Sources/application.cpp **** 			PWMLEDGreen_SetRatio8(green);
 144              		.loc 1 25 0
 145 0076 0F4B     		ldr	r3, .L9+20
 146 0078 5A69     		ldr	r2, [r3, #20]
 147 007a 3B1C     		mov	r3, r7
 148 007c 0E33     		add	r3, r3, #14
 149 007e 1B78     		ldrb	r3, [r3]
 150 0080 101C     		mov	r0, r2
 151 0082 191C     		mov	r1, r3
 152 0084 FFF7FEFF 		bl	PwmLdd3_SetRatio8
  26:../Sources/application.cpp **** 			PWMLEDBlue_SetRatio8(blue);
 153              		.loc 1 26 0
 154 0088 0A4B     		ldr	r3, .L9+20
 155 008a 9A68     		ldr	r2, [r3, #8]
 156 008c 3B1C     		mov	r3, r7
 157 008e 0D33     		add	r3, r3, #13
 158 0090 1B78     		ldrb	r3, [r3]
 159 0092 101C     		mov	r0, r2
 160 0094 191C     		mov	r1, r3
 161 0096 FFF7FEFF 		bl	PwmLdd1_SetRatio8
 162              	.LBE3:
  27:../Sources/application.cpp **** 		};
 163              		.loc 1 27 0
 164 009a BD46     		mov	sp, r7
 165 009c 04B0     		add	sp, sp, #16
 166              		@ sp needed for prologue
 167 009e 80BD     		pop	{r7, pc}
 168              	.L10:
 169              		.align	2
 170              	.L9:
 171 00a0 FFFF0000 		.word	65535
 172 00a4 FFFF0080 		.word	-2147418113
 173 00a8 0000FFFF 		.word	-65536
 174 00ac FF000080 		.word	-2147483393
 175 00b0 00FFFFFF 		.word	-256
 176 00b4 00000000 		.word	PE_LDD_DeviceDataList
 177              		.cfi_endproc
 178              	.LFE3:
 180              		.section	.text.APP_Run,"ax",%progbits
 181              		.align	2
 182              		.global	APP_Run
 183              		.code	16
 184              		.thumb_func
 186              	APP_Run:
 187              	.LFB4:
  28:../Sources/application.cpp **** 
  29:../Sources/application.cpp **** };
  30:../Sources/application.cpp **** 
  31:../Sources/application.cpp **** void APP_Run(void) {
 188              		.loc 1 31 0
 189              		.cfi_startproc
 190 0000 80B5     		push	{r7, lr}
 191              	.LCFI6:
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 7, -8
 194              		.cfi_offset 14, -4
 195 0002 82B0     		sub	sp, sp, #8
 196              	.LCFI7:
 197              		.cfi_def_cfa_offset 16
 198 0004 00AF     		add	r7, sp, #0
 199              	.LCFI8:
 200              		.cfi_def_cfa_register 7
 201              	.LBB4:
  32:../Sources/application.cpp **** 	counterclass myccounter;
 202              		.loc 1 32 0
 203 0006 3B1D     		add	r3, r7, #4
 204 0008 181C     		mov	r0, r3
 205 000a FFF7FEFF 		bl	_ZN12counterclassC1Ev
 206              	.L12:
  33:../Sources/application.cpp **** 
  34:../Sources/application.cpp **** 	/* Enabling 'puts' below will use the UART/SCI of your target.
  35:../Sources/application.cpp **** 	 * Make sure you correctly set it up or how to use the Debug Console instead.
  36:../Sources/application.cpp **** 	 * See the targeting manual for details.
  37:../Sources/application.cpp **** 	 */
  38:../Sources/application.cpp **** 	/*puts("Hello (Kinetis) World in 'C++' from MKL25Z128 derivative!");*/
  39:../Sources/application.cpp **** 
  40:../Sources/application.cpp **** 	for (;;) {
  41:../Sources/application.cpp **** 		myccounter.increment();
 207              		.loc 1 41 0
 208 000e 3B1D     		add	r3, r7, #4
 209 0010 181C     		mov	r0, r3
 210 0012 FFF7FEFF 		bl	_ZN12counterclass9incrementEv
  40:../Sources/application.cpp **** 	for (;;) {
 211              		.loc 1 40 0
 212 0016 FAE7     		b	.L12
 213              	.LBE4:
 214              		.cfi_endproc
 215              	.LFE4:
 217              		.text
 218              	.Letext0:
 219              		.file 2 "C:/Freescale/CW MCU v10.5/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 220              		.file 3 "C:/Users/JH/Documents/GitHub/M0PlusFreeRTOS/M0PlusFreeRTOSPlusPlus/Generated_Code/PE_Type
DEFINED SYMBOLS
                            *ABS*:00000000 application.cpp
C:\Users\JH\AppData\Local\Temp\ccn5PLIe.s:18     .text._ZN12counterclassC2Ev:00000000 $t
C:\Users\JH\AppData\Local\Temp\ccn5PLIe.s:23     .text._ZN12counterclassC2Ev:00000000 _ZN12counterclassC2Ev
C:\Users\JH\AppData\Local\Temp\ccn5PLIe.s:23     .text._ZN12counterclassC2Ev:00000000 _ZN12counterclassC1Ev
C:\Users\JH\AppData\Local\Temp\ccn5PLIe.s:59     .text._ZN12counterclass9incrementEv:00000000 $t
C:\Users\JH\AppData\Local\Temp\ccn5PLIe.s:64     .text._ZN12counterclass9incrementEv:00000000 _ZN12counterclass9incrementEv
C:\Users\JH\AppData\Local\Temp\ccn5PLIe.s:171    .text._ZN12counterclass9incrementEv:000000a0 $d
C:\Users\JH\AppData\Local\Temp\ccn5PLIe.s:181    .text.APP_Run:00000000 $t
C:\Users\JH\AppData\Local\Temp\ccn5PLIe.s:186    .text.APP_Run:00000000 APP_Run
                     .debug_frame:00000010 $d
                           .group:00000000 _ZN12counterclassC5Ev

UNDEFINED SYMBOLS
PwmLdd2_SetRatio8
PwmLdd3_SetRatio8
PwmLdd1_SetRatio8
PE_LDD_DeviceDataList
