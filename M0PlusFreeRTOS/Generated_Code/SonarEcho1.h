/* ###################################################################
**     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename    : SonarEcho1.h
**     Project     : ProcessorExpert
**     Processor   : MKL25Z128VLK4
**     Component   : BitsIO_LDD
**     Version     : Component 01.029, Driver 01.05, CPU db: 3.00.000
**     Compiler    : GNU C Compiler
**     Date/Time   : 2014-03-28, 22:15, # CodeGen: 115
**     Abstract    :
**         The HAL BitsIO component provides a low level API for unified
**         access to general purpose digital input/output 32 pins across
**         various device designs.
**
**         RTOS drivers using HAL BitsIO API are simpler and more
**         portable to various microprocessors.
**     Settings    :
**          Component name                                 : SonarEcho1
**          Port                                           : PTE
**          Pins                                           : 2
**            Pin0                                         : 
**              Pin                                        : ADC0_DM0/ADC0_SE4a/PTE21/TPM1_CH1/UART0_RX
**              Pin signal                                 : 
**            Pin1                                         : 
**              Pin                                        : ADC0_DP3/ADC0_SE3/PTE22/TPM2_CH0/UART2_TX
**              Pin signal                                 : 
**          Direction                                      : Input
**          Initialization                                 : 
**            Init. direction                              : Input
**            Init. value                                  : 0
**            Auto initialization                          : yes
**          Safe mode                                      : no
**     Contents    :
**         Init   - LDD_TDeviceData* SonarEcho1_Init(LDD_TUserData *UserDataPtr);
**         GetVal - uint32_t SonarEcho1_GetVal(LDD_TDeviceData *DeviceDataPtr);
**         GetBit - LDD_TError SonarEcho1_GetBit(LDD_TDeviceData *DeviceDataPtr, uint8_t Bit,...
**
**     (c) 2012 by Freescale
** ###################################################################*/
/*!
** @file SonarEcho1.h
** @version 01.05
** @brief
**         The HAL BitsIO component provides a low level API for unified
**         access to general purpose digital input/output 32 pins across
**         various device designs.
**
**         RTOS drivers using HAL BitsIO API are simpler and more
**         portable to various microprocessors.
*/         
/*!
**  @addtogroup SonarEcho1_module SonarEcho1 module documentation
**  @{
*/         

#ifndef __SonarEcho1_H
#define __SonarEcho1_H

/* MODULE SonarEcho1. */

/* Include shared modules, which are used for whole project */
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
/* Include inherited beans */
#include "IO_Map.h"
#include "GPIO_PDD.h"

#include "Cpu.h"

#ifdef __cplusplus
extern "C" {
#endif 



/*! Peripheral base address of a device allocated by the component. This constant can be used directly in PDD macros. */
#define SonarEcho1_PRPH_BASE_ADDRESS  0x400FF100U
  
/*! Device data structure pointer used when auto initialization property is enabled. This constant can be passed as a first parameter to all component's methods. */
#define SonarEcho1_DeviceData  ((LDD_TDeviceData *)PE_LDD_GetDeviceStructure(PE_LDD_COMPONENT_SonarEcho1_ID))

/* Methods configuration constants - generated for all enabled component's methods */
#define SonarEcho1_Init_METHOD_ENABLED /*!< Init method of the component SonarEcho1 is enabled (generated) */
#define SonarEcho1_GetVal_METHOD_ENABLED /*!< GetVal method of the component SonarEcho1 is enabled (generated) */
#define SonarEcho1_GetBit_METHOD_ENABLED /*!< GetBit method of the component SonarEcho1 is enabled (generated) */

/* Definition of implementation constants */
#define SonarEcho1_MODULE_BASE_ADDRESS FPTE_BASE_PTR /*!< Name of macro used as the base address */
#define SonarEcho1_PORTCONTROL_BASE_ADDRESS PORTE_BASE_PTR /*!< Name of macro used as the base address */
#define SonarEcho1_PORT_MASK 0x00600000U /*!< Mask of the allocated pin from the port */
#define SonarEcho1_PIN_ALLOC_0_MASK 0x00200000 /*!< Mask of the first allocated pin from the port */
#define SonarEcho1_PIN_ALLOC_0_INDEX 21U /*!< The index of the first allocated pin from the port */



/*
** ===================================================================
**     Method      :  SonarEcho1_Init (component BitsIO_LDD)
*/
/*!
**     @brief
**         This method initializes the associated peripheral(s) and the
**         component internal variables. The method is called
**         automatically as a part of the application initialization
**         code.
**     @param
**         UserDataPtr     - Pointer to the RTOS device
**                           structure. This pointer will be passed to
**                           all events as parameter.
**     @return
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* SonarEcho1_Init(LDD_TUserData *UserDataPtr);

/*
** ===================================================================
**     Method      :  SonarEcho1_GetVal (component BitsIO_LDD)
*/
/*!
**     @brief
**         Returns the value of the Input/Output component. If the
**         direction is [input] then reads the input value of the pins
**         and returns it. If the direction is [output] then returns
**         the last written value (see [Safe mode] property for
**         limitations).
**     @param
**         DeviceDataPtr   - Device data structure
**                           pointer returned by [Init] method.
**     @return
**                         - Input value
*/
/* ===================================================================*/
uint32_t SonarEcho1_GetVal(LDD_TDeviceData *DeviceDataPtr);

/*
** ===================================================================
**     Method      :  SonarEcho1_GetBit (component BitsIO_LDD)
*/
/*!
**     @brief
**         Returns the value of the specified bit/pin of the
**         Input/Output component. If the direction is [input] then it
**         reads the input value of the pin and returns it. If the
**         direction is [output] then it returns the last written value
**         (see [Safe mode] property for limitations).
**     @param
**         DeviceDataPtr   - Device data structure
**                           pointer returned by [Init] method.
**     @param
**         Bit             - Bit/pin number to read
**     @param
**         BitVal          - The returned value: 
**                           [false] - logical "0" (Low level)
**                           [true] - logical "1" (High level)
**     @return
**                         - Error code, possible values:
**                           ERR_OK - OK
**                           ERR_PARAM_INDEX - Invalid pin index
**                           ERR_PARAM_VALUE - Invalid output parameter
*/
/* ===================================================================*/
LDD_TError SonarEcho1_GetBit(LDD_TDeviceData *DeviceDataPtr, uint8_t Bit, bool *BitVal);

/* END SonarEcho1. */

#ifdef __cplusplus
}  /* extern "C" */
#endif 

#endif
/* ifndef __SonarEcho1_H */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.3 [05.08]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/
